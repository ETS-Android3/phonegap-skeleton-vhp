{"version":3,"sources":["enums/Roles.js","enums/NotificationSubject.js","enums/OrderStatus.js","components/i18n/ConnectedIntlProvider.js","APIUrl.js","actions/authentication/authentication.js","components/authentication/LoginForm.js","components/families/Families.js","actions/cart/cart.js","util/Maths.js","util/Util.js","util/PriceUtil.js","components/products/ProductRow.js","components/products/Products.js","components/cart/CartRow.js","components/sub/modals/ConfirmationModal.js","components/sub/modals/PromptModal.js","actions/orders/orders.js","util/ProductsTotalUtil.js","components/cart/CartPromptModalAdmin.js","components/cart/Cart.js","util/PDFUtil.js","util/DateUtil.js","components/orders/OrderProductRow.js","components/orders/OrderProducts.js","components/orders/OrderPDF.js","components/pdf/PDFViewer.js","actions/products/oldProducts.js","components/orders/OrderRow.js","components/orders/Orders.js","components/orders/admin/OrderRowAdmin.js","components/orders/admin/OrderProductRowAdmin.js","components/orders/admin/OrderProductsAdmin.js","components/orders/admin/SplitOrderModalAdmin.js","components/orders/admin/OrdersAdmin.js","components/settings/admin/ordersSettings/ShippingModalAdmin.js","actions/establishments/establishmentSettings.js","actions/settings/ordersSettings/admin/ordersSettings.js","components/settings/admin/ordersSettings/ShippingCostSettingAdminRow.js","components/settings/admin/ordersSettings/ShippingCostSettingAdmin.js","components/settings/admin/ordersSettings/OrdersSettingsAdmin.js","actions/settings/materialsTypes/materialsTypes.js","components/settings/admin/materialsTypes/MaterialsTypesModalAdmin.js","components/settings/admin/materialsTypes/MaterialTypeAdminRow.js","components/settings/admin/materialsTypes/MaterialsTypesAdminTable.js","components/settings/admin/materialsTypes/MaterialsTypesAdmin.js","components/settings/admin/MenuSettingsAdmin.js","actions/user/user.js","actions/products/products.js","actions/clients/clients.js","actions/establishments/establishments.js","actions/settings/ordersSettings/ordersSettings.js","components/homepage/Menus/MenuProfile.js","components/homepage/Menus/MenuAdmin.js","components/homepage/Menus/Menu.js","components/sub/modals/NotificationModal.js","actions/notifications/notifications.js","util/FileUtil.js","components/sub/FileDropZone.js","components/mercurials/MercurialFileModal.js","util/StringUtil.js","util/MercurialsMapping.js","components/mercurials/MercurialColumnsModal.js","components/mercurials/MercurialImgsModal.js","components/mercurials/MercurialUpdModal.js","actions/mercurials/mercurials.js","util/ExcelUtil.js","components/mercurials/MercurialRow.js","components/sub/modals/ErrorModal.js","components/mercurials/Mercurials.js","components/homepage/SplitHomeAdmin.js","components/homepage/SplitHome.js","actions/configurables/establishmentTypes.js","components/sub/ComboBox.js","components/clients/EstablishmentInfo.js","actions/configurables/paymentMethods.js","actions/configurables/paymentDeadlines.js","components/clients/EstablishmentBudgetModal.js","components/clients/EstablishmentBudgets.js","components/clients/EstablishmentConfiguration.js","components/clients/UserModal.js","components/clients/Users.js","components/clients/EstablishmentUsers.js","components/clients/EstablishmentDMModal.js","components/clients/EstablishmentDMRow.js","components/clients/EstablishmentDMTable.js","components/clients/EstablishmentDM.js","components/clients/ClientsModalAdmin.js","components/clients/EstablishmentsRow.js","components/clients/Establishments.js","actions/residents/residents.js","components/residents/ResidentModal.js","components/residents/Residents.js","components/residents/ResidentsModal.js","components/fleet/Fleet.js","components/homepage/Homepage.js","components/NotFound.js","App.js","reducers/i18n/i18nReducer.js","reducers/index.js","reducers/user/userReducer.js","reducers/products/productsReducer.js","reducers/products/oldProductsReducer.js","reducers/cart/cartReducer.js","reducers/orders/ordersReducer.js","reducers/clients/clientsReducer.js","reducers/establishments/establishmentsReducer.js","reducers/configurables/establishmentTypesReducer.js","reducers/establishments/establishmentsSettingsReducer.js","reducers/settings/ordersSettings/ordersSettingsReducer.js","reducers/settings/ordersSettings/admin/ordersSettingsAdminReducer.js","reducers/mercurials/mercurialsReducer.js","reducers/notifications/notificationsReducer.js","reducers/configurables/paymentMethodsReducer.js","reducers/configurables/paymentDeadlinesReducer.js","reducers/settings/materialsTypes/materialsTypesReducer.js","reducers/residents/residentsReducer.js","index.js"],"names":["module","exports","CLIENT","ADMIN","MERCURIAL_DELETE_OR_UPDATE","NEW","PENDING","SENT","RECEIVED","BLOCKED","connect","state","locale","i18n","lang","messages","IntlProvider","rootUrl","process","APIUrl","login","logout","getUser","updateLang","checkIfUsernameExists","checkIfEmailExists","getProducts","getProductImg","getFamilyImg","getManyProducts","getCart","addProductToCart","updateUrgent","increaseQuantity","decreaseQuantity","deleteCartById","deleteAll","addOrder","getOrders","deleteOrder","duplicate","toPDF","getNotifs","deleteNotif","getOrdersSettings","getResidents","addResident","checkIfResidentExists","deleteResident","getProductsAdmin","getMercurials","addMercurial","deleteMercurial","updateMercurial","addProductsImgs","addFamilyImgs","getMercImgOverview","addOrderAdmin","getOrdersAdmin","updateAdmin","deleteOrderAdmin","splitOrderAdmin","duplicateAdmin","getClients","addClient","updateClient","addProductToCartAdmin","addEstablishment","getEstablishments","updateEstablishment","getEstablishmentSettings","updateEstablishmentSettings","getOrdersSettingsAdmin","updateOrderSettingAdmin","updateShippingCostsSetting","getMaterialsTypes","addMaterialsType","deleteMaterialType","getEstablishmentTypes","addEstablishmentType","getPaymentMethods","addPaymentMethod","getPaymentDeadlines","addPaymentDeadline","LOGOUT","successCallback","dispatch","axios","get","then","response","type","catch","err","Login","e","preventDefault","stopPropagation","that","this","errorMsg","document","getElementById","classList","remove","add","hideErrorMsg","props","onLogin","target","username","value","password","history","push","_this","react_default","a","createElement","className","href","onSubmit","handleSubmit","index_es","id","name","React","Component","failureCallback","post","Families","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","search","setState","_this2","products","length","role","familiesUniques","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","product","famille","mercurialId","mercurial_id","fam","return","familiesNode","keys","map","toUpperCase","indexOf","imgSrc","split","key","encodeURI","src","onError","onerror","alt","placeholder","intl","formatMessage","Fragment","onChange","mercurials","injectIntl","GET_PANIER","cart","data","Maths","nbr","Math","round","Util","obj","objectSpread","val","String","replace","array","email","test","toLowerCase","PriceUtil","store","quantity","totalHt","s","priceHt","totalTtc","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","priceTtc","totalTva","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","tva","arguments","prix_u_ht_emera","parseFloat","ProductRow","_formatId","_id","disableButton","querySelector","onAdd","designation","slice","notyType","user","Roles","Noty","layout","theme","text","timeout","show","min_cde","formats","format","sous_famille","_this3","productFormat","getProduct","changeFormat","defaultValue","buttonsClassName","ref","getDesignation","caracteristiques","unite_de_vente","disabled","onClick","addMin","min","step","changeQuantity","Products","substrings","product1","product2","isolatedDesignation1","getFormat","trim","isolatedDesignation2","newProducts","outer","p1","p","shallowClone","_i","n","equal","formatP","p2","formatP2","values","htmlObj","getElementsByClassName","innerHTML","productId","id_product","onAddProductToCartAdmin","onAddProductToCart","match","params","productsNode","parseProducts","products_ProductRow","CartRow","cartId","urgent","onUpdateUrgent","onIncreaseQuantity","onDecreaseQuantity","onDeleteCartById","modalTitle","modalContent","switchClassName","checked","htmlFor","openConfModal","ConfirmationModal","closeModal","callback","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","close","stop","apply","sizeClassName","size","title","stopEvent","data-dismiss","aria-label","aria-hidden","content","confirm","PromptModal","GET_ORDERS","getOrdersAction","orders","ProductsTotalUtil","productsCatalog","oldProductsCatalog","getProductsFn","settings","min_order_amount","shipping_costs","max","Infinity","cost","urgent_shipping_cost","min_cost_to_order","priceUtil","_urgent","missingProducts","containsOldProducts","containsMissingProducts","getOldProduct","getOldProducts","_totalHt","_totalTtc","_totalTva","oldProduct","missingProductsIds","ids","lastSetting","getTotal","shipping","shippingCost","total","price","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","shipping_cost","CartConfModalAdmin","clientsNode","clients","client","Cart","modal","comment","clientId","onPassOrderAdmin","onPassOrder","onDeleteAll","modals_ConfirmationModal","isOpen","CartPromptModalAdmin","passOrder","promptModalTitle","promptModalContent","modals_PromptModal","ordersSettings","_this4","ordersSettingsAdmin","productsTotalUtil","successCallbackConfModal","cartNode","cart_CartRow","shoppingAlert","shippingAlert","aboveMinToOrder","freeShipping","openOrderPromptModal","passOrderAdmin","PDFUtil","pdfComponentId","fileName","css","html","zoom","header","footer","url","result","error","addCSS","ApiURL","responseType","pdf","Blob","link","window","URL","createObjectURL","download","body","appendChild","click","removeChild","DateUtil","date","dd","Date","getDate","MM","getMonth","yyyy","getFullYear","concat","hh","getHours","mm","getMinutes","OrderProductRow","urgentIconClassName","OrderProducts","oldProducts","productNode","order","orders_OrderProductRow","commentClassName","commentNode","colSpan","OrderPDF","color","toDate","creation_date","orders_OrderProducts","shipping_delay","PDFViewer","open","style","position","marginLeft","template","toggle","GET_OLD_PRODUCTS","alreadyRequestedIds","idsToSend","removeAlreadyRequestedIds","OrderRow","collapsed","displayPDF","disableExport","alreadySent","outdated","elemId","elem","contains","orderId","onDeleteOrder","status","Role","pdfElemId","pdfFileName","canPDF","onGetOldProducts","missingData","oldData","pdfOrder","orders_OrderPDF","toDateWithHour","collapse","togglePDF","pdf_PDFViewer","onDuplicate","UncontrolledTooltip","placement","hasUrgent","Orders","referenceFilter","dateFilter","statusFilter","order1","order2","ordersNode","sort","sortByDateDesc","Number","orders_OrderRow","statusNode","OrderStatus","option","OrderRowAdmin","onDeleteOrderAdmin","updatedValue","updatedField","onUpdateAdmin","clientName","updateStatus","openSplitModal","onDuplicateAdmin","OrderProductRowAdmin","onClickCallback","updateDisponibility","OrderProductsAdmin","admin_OrderProductRowAdmin","SplitOrderModalAdmin","closeConfModal","productsAvailable","productsUnavailable","inputs","input","getSplittedProducts","onSplitOrderAdmin","admin_OrderProductsAdmin","checkProductsDisponibility","OrdersAdmin","clientFilter","admin_SplitOrderModalAdmin","c","id_client","admin_OrderRowAdmin","ShippingModalAdmin","index","shippingCosts","disabledInputMax","defaultChecked","alert","hasMax","buttonText","onChangeMin","onBlur","onComplete","onClickRadioMax","onChangeMax","onChangeCost","GET_ESTABLISHMENT_SETTINGS","establishmentSettings","GET_ADMIN_ORDERS_SETTINGS","ShippingCostSettingAdminRow","onUpdateShippingCostsSetting","successCallbackUpdate","isLast","openShippingModal","successCallbackDelete","splice","ShippingCostSettingAdmin","ordersSettings_ShippingModalAdmin","shippingCostNode","ordersSettings_ShippingCostSettingAdminRow","OrdersSettingsAdmin","annual_budget","hasInfinity","field","defineProperty","onUpdateOrderSettingAdmin","createShippingCostSetting","ordersSettings_ShippingCostSettingAdmin","onFieldChange","GET_MATERIALS_TYPES","materialsTypes","MaterialsTypesModalAdmin","nameError","newMaterial","onAddMaterialsType","MaterialTypeAdminRow","materialId","onDeleteMaterialType","materialType","MaterialsTypesTable","materialsTypesRowNode","materialsTypes_MaterialTypeAdminRow","MaterialsTypesAdmin","materialsTypes_MaterialsTypesModalAdmin","openMaterialsTypesModal","MaterialsTypesAdminTable","MenuSettingsAdmin","data-toggle","aria-controls","aria-selected","aria-labelledby","ordersSettings_OrdersSettingsAdmin","materialsTypes_MaterialsTypesAdmin","GET_USER","location","GET_PRODUCTS","getProductsAction","GET_CLIENTS","GET_ESTABLISHMENTS","establishments","GET_ORDERS_SETTINGS","MenuProfile","onLogout","onUpdateLang","otherLangsNode","l","first_name","withRouter","Menu","totalProduct","Menus_MenuProfile","data-target","aria-expanded","NotificationModal","GET_NOTIFS","notifications","FileUtil","fragments","acceptedExtensions","extension","normalize","FileDropZone","files","extensionError","acceptedFiles","rejectedFiles","file","extensionIsOk","multiple","onDropFiles","onDropFile","baseStyle","width","borderWidth","borderColor","borderStyle","borderRadius","padding","activeStyle","backgroundColor","rejectStyle","dist_es","onDrop","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","styles","filesNames","i","msg","assign","MercurialFileModal","startDate","endDate","dateError","newDate","onNameChange","onStartDateChange","onEndDateChange","sub_FileDropZone","StringUtil","string","matches","distance","candidate","measurement","sift","s1","s2","offset1","offset2","lcs","charAt","MercurialsMapping","stock","fournisseur","ref_frn","pa_ht","marge","MercurialColumnsModal","autoMatching","formattedValue","substring","firstRowKeys","fileData","closest","optionsNode","formatValue","random","manageSelectChange","select","firstChild","options","selectedIndex","columns","_arr","getSelColumn","updateSelectOptions","selects","value1","checkDisableButton","selectsAllHaveValues","_arr2","_i3","mappingKey","buildSelect","selects1stHalf","selects2ndHalf","updateAutoMatching","MercurialImgsModal","summary","productFiles","familyFiles","declinedFiles","familiesWithNoImg","productsWithNoImg","Axios","mercurial","getMercurialProducts","fileNameWithoutExtension","withoutExtension","emptyArray","families","familiesContent","family","productsContent","productDes","missingImgs","displayMissingImgs","missingFamilyImgs","missingProductImgs","openMissingModal","MercurialUpdModal","GET_MERCURIAL","ExcelUtil","excelData","wb","XLSX","utils","book_new","ws","aoa_to_sheet","book_append_sheet","writeFile","columnsMapping","ignoreCols","excel","d","_i2","reader","FileReader","onload","workbook","read","SheetNames","forEach","sheetName","XL_raw_object","sheet_to_row_object_array","Sheets","readAsBinaryString","MercurialRow","toExcel","toFileName","save","onDeleteMercurial","hasGreaterVersion","m","version","versionXS","isOutDated","end_date","now","start_date","file_name","openMercurialUpdModal","openImgsModal","ErrorModal","Mercurials","mercurialName","nameFilter","startDateFilter","endDateFilter","mercurials_MercurialFileModal","onCompleteStep1","parse","isCorrupt","openCorruptFileModal","mercurials_MercurialColumnsModal","onCompleteStep2","json","nbrKeys","row","errorModalTitle","errorModalContent","modals_ErrorModal","_this5","fixProductsCols","onaddMercurial","newProduct","col","_this6","_this7","mercurials_MercurialImgsModal","productImgs","familyImgs","uploadImgs","_this8","formData","FormData","img","append","onAddProductsImgs","sendProductImgs","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","onAddFamilyImgs","sendFamilyImgs","_this9","mercurials_MercurialUpdModal","onUpd","_this10","_arr3","onUpdateMercurial","_this11","openMercurialImportModal","mercurialsNode","mercurials_MercurialRow","headers","Content-Type","SplitHomeAdmin","onclick","SplitHome","GET_ESTABLISHMENT_TYPES","establishmentTypes","ComboxBox","defaultOption","formatOption","getOptionById","optionId","formattedOptions","label","optionName","emptyString","onCreateOption","newOption","formatOptions","Creatable_default","menuPlacement","createOption","noOptionsMessage","formatCreateLabel","EstablishmentInfo","establishment","phone","address","address_compl","postal_code","city","website","type_id","GOOGLE_MAP_API_KEY","mapComponent","withScriptjs","withGoogleMap","lib","defaultZoom","defaultCenter","lat","lng","isMarkerShown","isNameUnique","onUpdateEstablishment","establishmentId","onAddEstablishment","esta","openModal","autoComplete","sendUpdate","ComboBox_ComboxBox","onAddEstablishmentType","googleMapURL","loadingElement","height","containerElement","mapElement","GET_PAYMENT_METHODS","paymentMethods","GET_PAYMENT_DEADLINES","paymentDeadlines","EstablishmentBudgetModal","START_YEAR","END_YEAR","YEARS","getYears","year","budget","budgetError","parseInt","startYear","endYear","years","budgets","alreadyIn","hasYear","getDefaultYear","getBudget","yearsOptionsNode","EstablishmentBudgets","budget1","budget2","updateBudgets","sendUpdatedBudget","editBudget","budgetsNode","sortByDateAsc","deleteBudget","EstablishmentConfiguration","payment_method_id","payment_deadline_id","fixWithDefaultValues","onUpdateEstablishmentSettings","clients_EstablishmentBudgetModal","mercurialSelectOptions","clients_EstablishmentBudgets","openAnnualBudgetModal","onAddPaymentMethod","onAddPaymentDeadline","UserModal","firstname","function","validator","usernameError","firstnameError","emailError","noErrorCallback","isUsernameEmpty","isNameEmpty","isFirstNameEmpty","isEmailEmpty","isEmail","onCheckIfUsernameExists","onCheckIfEmailExists","scanErrors","establishment_id","onAddClient","onUpdateClient","update","existsCallback","noExistsCallback","EstablishmentUsers","clients_UserModal","tableStyle","cssStyle","Users","EstablishmentDMModal","material_type_id","daily_fee","long_term_fee","maintenance_fee","materials_types","materialTypeId","hasEmptyField","typeSelectOptions","checkMaterialsTypes","EstablishmentDMRow","newMaterialsTypes","materialName","openEstablishmentDMModal","EstablishmentDMTable","clients_EstablishmentDMModal","establishmentDMRowNode","clients_EstablishmentDMRow","getMaterialName","EstablishmentDM","clients_EstablishmentDMTable","ClientsModalAdmin","establishmentsSettings","aClassName","clients_EstablishmentInfo","clients_EstablishmentConfiguration","clients_EstablishmentDM","clients_EstablishmentUsers","EstablishmentsRow","totalHT","getCmdTotalHT","getMercurialName","getTotalHT","Establishments","addressFilter","mercurialFilter","onGetEstablishmentTypes","onGetPaymentMethods","onGetPaymentDeadlines","onGetEstablishmentSettings","clients_ClientsModalAdmin","getSettings","establishmentsNodes","clients_EstablishmentsRow","GET_RESIDENTS","residents","ResidentModal","uniqueError","onCheckIfResidentExists","checkUniqueness","resident","onAddResident","Residents","onDeleteResident","residentsNode","residentId","ResidentsModal","residents_ResidentModal","openResidentModal","residents_Residents","Fleet","onGetResidents","residents_ResidentsModal","openResidentsModal","Homepage","Promise","all","onGetUser","onGetCart","onGetNotifs","onGetProducts","onGetOrders","onGetOrdersSettings","onGetProductsAdmin","onGetOrdersAdmin","onGetClients","onGetEstablishments","onGetOrdersSettingsAdmin","onGetMercurials","onGetMaterialsTypes","notif","onDeleteNotif","notifId","menu","Menus_Menu","switchComponent","Homepage_SwitchComponent","MenuAdmin","Homepage_SwitchComponentAdmin","notifModals","_loop","subject","NotificationSubject","modals_NotificationModal","closeNotifModal","SwitchComponent","Switch","Route","path","component","SwitchComponentAdmin","NotFound","defaults","baseURL","withCredentials","App","interceptors","use","openErrorModal","onLogoutSuccess","HashRouter","exact","LoginForm","addLocaleData","frLocaleData","language","navigator","userLanguage","languages","languageWithoutRegionCode","findTradFor","frMessages","enMessages","appReducer","combineReducers","action","toConsumableArray","rootReducer","require","config","createStore","applyMiddleware","thunk","ReactDOM","render","react_redux_es","ConnectedIntlProvider","src_App"],"mappings":"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","file":"static/js/main.99ff0d2a.chunk.js","sourcesContent":["var Roles = {\r\n    CLIENT: 0,\r\n    ADMIN: 1\r\n}\r\n\r\nmodule.exports = Roles;\r\n","var NotificationSubject = {\r\n    MERCURIAL_DELETE_OR_UPDATE: 0,\r\n};\r\n\r\nmodule.exports = NotificationSubject;","var OrderStatus = {\r\n      NEW: 0,\r\n      PENDING: 1,\r\n      SENT: 2,\r\n      RECEIVED: 3,\r\n      BLOCKED: 4\r\n};\r\n\r\nmodule.exports = OrderStatus;\r\n","import { connect } from 'react-redux';\r\nimport { IntlProvider } from 'react-intl';\r\n\r\n// Map the component to the lang settings, so that all lang features re-render if the lang changes\r\nfunction mapStateToProps(state) {\r\n  return { \r\n      locale: state.i18n.lang, \r\n      messages : state.i18n.messages \r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(IntlProvider);","const rootUrl = process.env.REACT_APP_BE_URL || \"http://localhost:4000\";\r\n\r\nconst APIUrl = {\r\n    // Authentication\r\n    login:               rootUrl + \"/login\",                                           // POST {username, password}\r\n    logout:              rootUrl + \"/logout\",                                          // GET\r\n\r\n    // User\r\n    getUser:             rootUrl + \"/user\",                                            // GET\r\n    updateLang:          rootUrl + \"/user/lang/\",                                      // GET {lang = [\"en\", \"fr\"]}\r\n    checkIfUsernameExists: rootUrl + \"/user/check/username/\",                          // GET {username}\r\n    checkIfEmailExists:  rootUrl + \"/user/check/email/\",                               // GET {email}\r\n\r\n    // Products\r\n    getProducts:         rootUrl + \"/product\",                                         // GET\r\n    getProductImg:       rootUrl + \"/product/img/\",                                    // GET {mercurialId, ref}\r\n    getFamilyImg:        rootUrl + \"/product/fam/img/\",                                // GET {mercurialId, fam}\r\n    getManyProducts:     rootUrl + \"/product/many\",                                    // POST {ids}\r\n\r\n    // Cart\r\n    getCart:             rootUrl + \"/cart\",                                            // GET\r\n    addProductToCart:    rootUrl + \"/cart/add\",                                        // POST {id_product, quantity}\r\n    updateUrgent:        rootUrl + \"/cart/urgent\",                                     // POST {cartId, urgent}\r\n    increaseQuantity:    rootUrl + \"/cart/inc\",                                        // POST {cartId}\r\n    decreaseQuantity:    rootUrl + \"/cart/dec\",                                        // POST {cartId}\r\n    deleteCartById:      rootUrl + \"/cart/delete\",                                     // POST {cartId}\r\n    deleteAll:           rootUrl + \"/cart/delete/all\",                                 // POST\r\n\r\n    // Order\r\n    addOrder:            rootUrl + \"/order/add\",                                       // POST {comment}\r\n    getOrders:           rootUrl + \"/order\",                                           // GET\r\n    deleteOrder:         rootUrl + \"/order/delete\",                                    // POST {orderId}\r\n    duplicate:           rootUrl + \"/order/duplicate\",                                 // POST {orderId}\r\n\r\n    // PDFs\r\n    toPDF:               rootUrl + \"/pdf\",                                             // POST {html, css=[], header, footer}\r\n\r\n    // Notifications\r\n    getNotifs:           rootUrl + \"/notifs\",                                          // GET\r\n    deleteNotif:         rootUrl + \"/notifs/delete\",                                   // POST {notifId}\r\n\r\n    // Orders settings\r\n    getOrdersSettings:   rootUrl + \"/settings/orders\",                                 // GET\r\n\r\n    // Residents\r\n    getResidents:        rootUrl + \"/resident\",                                        // GET\r\n    addResident:         rootUrl + \"/resident/add\",                                    // POST ({name, firstname})\r\n    checkIfResidentExists: rootUrl + \"/resident/check\",                                // POST ({name, firstname})\r\n    deleteResident:      rootUrl + \"/resident/delete/\",                                // GET {residentId}\r\n\r\n    // ======================================================================\r\n    // ============================= ADMIN ==================================\r\n    // ======================================================================\r\n\r\n    // Products\r\n    getProductsAdmin:    rootUrl + \"/admin/product\",                                   // GET\r\n\r\n    // Mercurials\r\n    getMercurials:       rootUrl + \"/admin/mercurial\",                                 // GET\r\n    addMercurial:        rootUrl + \"/admin/mercurial/add\",                             // POST {name, fileName, data, startDate, endDate}\r\n    deleteMercurial:     rootUrl + \"/admin/mercurial/delete\",                          // POST {mercurialId}\r\n    updateMercurial:     rootUrl + \"/admin/mercurial/update\",                          // POST {mercurialId, data}\r\n    addProductsImgs:     rootUrl + \"/admin/mercurial/imgs/products/\",                  // URL {mercuriaId} - POST {imgs}\r\n    addFamilyImgs:       rootUrl + \"/admin/mercurial/imgs/families/\",                  // URL {mercuriaId} - POST {imgs}\r\n    getMercImgOverview:  rootUrl + \"/admin/mercurial/img/overview/\",                   // GET {mercurialId}\r\n\r\n    // Orders\r\n    addOrderAdmin:       rootUrl + \"/admin/order/add\",                                 // POST {comment, clientId}\r\n    getOrdersAdmin:      rootUrl + \"/admin/order\",                                     // GET\r\n    updateAdmin:         rootUrl + \"/admin/order/update\",                              // POST {status}\r\n    deleteOrderAdmin:    rootUrl + \"/admin/order/delete\",                              // POST {orderId}\r\n    splitOrderAdmin:     rootUrl + \"/admin/order/split\",                               // POST {orderId, productsAvailable, productsUnavailable}\r\n    duplicateAdmin:      rootUrl + \"/admin/order/duplicate\",                           // POST {orderId}\r\n\r\n    // Clients\r\n    getClients:          rootUrl + \"/admin/client\",                                    // GET\r\n    addClient:           rootUrl + \"/admin/client/add\",                                // POST {username, name, firstname, function, email, validator}\r\n    updateClient:        rootUrl + \"/admin/client/update\",                             // POST {clientId, updatedField, updatedValue}\r\n\r\n    // Cart\r\n    addProductToCartAdmin:    rootUrl + \"/admin/cart/add\",                             // POST {id_product, quantity}\r\n\r\n    // Establishments\r\n    addEstablishment:    rootUrl + \"/admin/establishment/add\",                         // POST {name, email, phone, address, address_compl, postal_code, city, website}\r\n    getEstablishments:   rootUrl + \"/admin/establishment\",                             // GET\r\n    updateEstablishment: rootUrl + \"/admin/establishment/update\",                      // POST {establishmentId, updatedField, updatedValue}\r\n    getEstablishmentSettings: rootUrl + \"/admin/establishmentsettings/\",               // GET {establishmentId}\r\n    updateEstablishmentSettings: rootUrl + \"/admin/establishmentsettings/update\",      // POST {establishmentId, updatedField, updatedValue}\r\n    \r\n    // Settings\r\n    getOrdersSettingsAdmin:      rootUrl + \"/admin/settings/orders\",                   // GET\r\n    updateOrderSettingAdmin:     rootUrl + \"/admin/settings/orders/update\",            // POST {orderSettingId, updatedField, updatedValue}\r\n    updateShippingCostsSetting:  rootUrl + \"/admin/settings/orders/shipping/update\",   // POST {shippingCosts}\r\n    getMaterialsTypes:           rootUrl + \"/admin/settings/materials/\",               // GET\r\n    addMaterialsType:           rootUrl + \"/admin/settings/materials/add\",             // POST {name}\r\n    deleteMaterialType:          rootUrl + \"/admin/settings/materials/delete\",         // POST {materialId}\r\n\r\n    // Configurables\r\n    getEstablishmentTypes: rootUrl + \"/admin/establishmenttype\",                       // GET\r\n    addEstablishmentType: rootUrl + \"/admin/establishmenttype/add\",                    // POST {name}\r\n    getPaymentMethods:   rootUrl + \"/admin/paymentmethods\",                            // GET\r\n    addPaymentMethod:    rootUrl + \"/admin/paymentmethods/add\",                        // POST {name}\r\n    getPaymentDeadlines:   rootUrl + \"/admin/paymentdeadlines\",                        // GET\r\n    addPaymentDeadline:    rootUrl + \"/admin/paymentdeadlines/add\",                    // POST {name}\r\n};\r\n\r\nexport default APIUrl;\r\n","import APIUrl from \"../../APIUrl\";\r\nimport axios from 'axios';\r\n\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\nfunction getLogoutAction(){return {type: LOGOUT}};\r\n\r\nexport const login = function(username, password, successCallback, failureCallback){\r\n    return function(dispatch){\r\n        return axios.post(APIUrl.login, {username: username, password: password})\r\n            .then(function(response){\r\n                return successCallback();\r\n            })\r\n            .catch(function(err){\r\n                return failureCallback();\r\n            });\r\n    };\r\n};\r\n\r\nexport const logout = function(successCallback){\r\n    return function(dispatch){\r\n        return axios.get(APIUrl.logout)\r\n            .then(function(response){\r\n                dispatch(getLogoutAction());\r\n                successCallback();\r\n            })\r\n            .catch(function(err){\r\n                throw(err);\r\n            });\r\n    };\r\n};","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {login} from '../../actions/authentication/authentication';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nclass Login extends React.Component {\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        let that = this;\r\n        function onLoginSuccess(){\r\n            that.props.history.push('/home');\r\n        };\r\n\r\n        function showErrorMsg(){\r\n            var errorMsg = document.getElementById(\"loginFail\");\r\n            errorMsg.classList.remove(\"d-none\");\r\n            errorMsg.classList.add(\"d-block\");\r\n        };\r\n\r\n        function hideErrorMsg(){\r\n            var errorMsg = document.getElementById(\"loginFail\");\r\n            errorMsg.classList.remove(\"d-block\");\r\n            errorMsg.classList.add(\"d-none\");\r\n        };\r\n\r\n        hideErrorMsg();\r\n\r\n        // Send login information and redirect on success\r\n        this.props.onLogin(e.target.username.value, e.target.password.value, onLoginSuccess, showErrorMsg);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"jumbotron vertical-center no-bg p-0 m-0 bg-light-grey\">\r\n\r\n                <div className=\"container p-5 mw-600 border border-dark bg-light\">\r\n                    <a href=\"/#\" className=\"nostyle-a\">\r\n                        <h3 className=\"text-center text-success mb-3\">E4COLL</h3>\r\n                    </a>\r\n\r\n                    <form onSubmit={(e) => this.handleSubmit(e)}>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label><FormattedMessage id=\"Username\" /></label>\r\n                            <input type=\"text\" id=\"username\" name=\"username\" className=\"form-control\" />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label><FormattedMessage id=\"Password\" /></label>\r\n                            <input type=\"password\" className=\"form-control\" id=\"pwd\" name=\"password\" />\r\n                        </div>\r\n\r\n                        <small id=\"loginFail\" className=\"form-text text-danger mb-3 d-none\"><FormattedMessage id=\"Login.Fail\" /></small>\r\n                        \r\n                        <button type=\"submit\" className=\"btn btn-success btn-block\"><FormattedMessage id=\"Connect\" /></button>\r\n                    </form>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.i18n.lang\r\n    }\r\n  }\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogin: (username, password, successCallback, failureCallback) => dispatch(login(username, password, successCallback, failureCallback))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {FormattedMessage, injectIntl} from 'react-intl';\r\nimport APIUrl from '../../APIUrl';\r\n\r\nimport \"../../css/families/families.css\";\r\n\r\nclass Families extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            search: null\r\n        };\r\n    }\r\n\r\n    search(e){\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n\r\n        this.setState({search: e.target.value});\r\n    }\r\n\r\n    render() {\r\n        // No 'families'? No render\r\n        if(this.props.products.length === 0){\r\n            return <div className=\"alert alert-secondary\" role=\"alert\"><FormattedMessage id=\"Empty.Families\" /></div>;\r\n        } \r\n\r\n        var familiesUniques = {};\r\n        for(let product of this.props.products ){\r\n            familiesUniques[product.famille] = {mercurialId: product.mercurial_id, fam: product.fam};\r\n        }\r\n\r\n        let familiesNode = Object.keys(familiesUniques).map((famille) => {\r\n            // Search filter\r\n            if(this.state.search && this.state.search !== \"\"){\r\n                if(famille.toUpperCase().indexOf(this.state.search.toUpperCase()) === -1) return null;\r\n            }\r\n\r\n            // Href link \r\n            var imgSrc = APIUrl.getFamilyImg + familiesUniques[famille].mercurialId + \"/\" + familiesUniques[famille].fam.split(\".\")[0];\r\n\r\n            return (\r\n                <div className=\"col-12 col-sm-6 col-md-4 col-lg-3 col-xl-2 mt-2 mb-2\" key={famille}>\r\n                    <a href={\"#/home/products/\" + encodeURI(famille)} className=\"nostyle-a\">\r\n                        <div className=\"card hoverable h-200\">\r\n                            <div className=\"h-150\">\r\n                                <img className=\"card-img-top img-big d-block align-middle mx-auto\" \r\n                                    src={imgSrc} onError={(e)=>{e.target.onerror = null; e.target.src='/images/placeholder.png'}} alt=\"\" />\r\n                            </div>\r\n                            <div className=\"card-body famille-title bg-round-grey p-2\">\r\n                                <h4 className=\"card-title text-center famille-title-txt\">{famille}</h4>\r\n                            </div>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        let placeholder = this.props.intl.formatMessage({id: \"Search.Family\"});\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"mw-600 p-3 mx-auto\">\r\n                    <input type=\"search\" className=\"form-control\" onChange={(e) => this.search(e)} placeholder={placeholder} />\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    {familiesNode}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.i18n.lang,\r\n        products: state.products,\r\n        mercurials: state.mercurials,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n     //\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(Families));\r\n","import APIUrl from \"../../APIUrl\";\r\nimport axios from 'axios';\r\n\r\nexport const GET_PANIER = \"GET_PANIER\";\r\n\r\nfunction getCartAction(cart){return {type: GET_PANIER, cart: cart}};\r\n\r\nexport const addProductToCart = function(data, successCallback){\r\n    return function(dispatch){\r\n        return axios.post(APIUrl.addProductToCart, data)\r\n            .then(function(response){\r\n                successCallback();\r\n\r\n                // Immediately refresh the cart so it's up-to-date\r\n                dispatch(getCart());\r\n            })\r\n            .catch(function(err){\r\n                throw(err);\r\n            });\r\n    };\r\n};\r\n\r\nexport const getCart = function(){\r\n    return function(dispatch){\r\n        return axios.get(APIUrl.getCart)\r\n            .then(function(response){\r\n              dispatch(getCartAction(response.data));\r\n            })\r\n            .catch(function(err){\r\n                throw(err);\r\n            });\r\n    };\r\n};\r\n\r\nexport const updateUrgent = function(data){\r\n    return function(dispatch){\r\n        return axios.post(APIUrl.updateUrgent, data)\r\n            .then(function(response){\r\n                // Immediately refresh the cart so it's up-to-date\r\n                dispatch(getCart());\r\n            })\r\n            .catch(function(err){\r\n                throw(err);\r\n            });\r\n    };\r\n};\r\n\r\nexport const increaseQuantity = function(data){\r\n    return function(dispatch){\r\n        return axios.post(APIUrl.increaseQuantity, data)\r\n            .then(function(response){\r\n                // Immediately refresh the cart so it's up-to-date\r\n                dispatch(getCart());\r\n            })\r\n            .catch(function(err){\r\n                throw(err);\r\n            });\r\n    };\r\n};\r\n\r\nexport const decreaseQuantity = function(data){\r\n    return function(dispatch){\r\n        return axios.post(APIUrl.decreaseQuantity, data)\r\n            .then(function(response){\r\n                // Immediately refresh the cart so it's up-to-date\r\n                dispatch(getCart());\r\n            })\r\n            .catch(function(err){\r\n                throw(err);\r\n            });\r\n    };\r\n};\r\n\r\nexport const deleteCartById = function(data){\r\n    return function(dispatch){\r\n        return axios.post(APIUrl.deleteCartById, data)\r\n            .then(function(response){\r\n                // Immediately refresh the cart so it's up-to-date\r\n                dispatch(getCart());\r\n            })\r\n            .catch(function(err){\r\n                throw(err);\r\n            });\r\n    };\r\n};\r\n\r\nexport const deleteAll = function(){\r\n    return function(dispatch){\r\n        return axios.post(APIUrl.deleteAll)\r\n            .then(function(response){\r\n                // Immediately refresh the cart so it's up-to-date\r\n                dispatch(getCart());\r\n            })\r\n            .catch(function(err){\r\n                throw(err);\r\n            });\r\n    };\r\n};\r\n\r\n// =======================================================================\r\n// =============================== ADMIN =================================\r\n// =======================================================================\r\n\r\n\r\nexport const addProductToCartAdmin = function(data, successCallback){\r\n    return function(dispatch){\r\n        return axios.post(APIUrl.addProductToCartAdmin, data)\r\n            .then(function(response){\r\n                successCallback();\r\n\r\n                // Immediately refresh the cart so it's up-to-date\r\n                dispatch(getCart());\r\n            })\r\n            .catch(function(err){\r\n                throw(err);\r\n            });\r\n    };\r\n};","export default class Maths{\r\n\r\n    static round(nbr){\r\n        return Math.round(nbr * 100) / 100;\r\n    }\r\n\r\n}","export default class Util{\r\n\r\n    static shallowClone(obj){\r\n        return {...obj};\r\n    }\r\n\r\n    static emptyString(val){\r\n        if (!(typeof val === 'string' || val instanceof String)) return false;\r\n\r\n        return (!val || (\"\" + val).replace(\" \", \"\") === \"\");\r\n    }\r\n    \r\n    static emptyArray(array){\r\n        return (!array || array.length === 0);\r\n    }\r\n\r\n    static isEmail(email){\r\n        var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n\r\n}","import Maths from \"./Maths\";\r\n\r\nexport default class PriceUtil{\r\n\r\n    constructor(){\r\n        this.store = []; // {product, quantity}\r\n    }\r\n\r\n    // =====================================================\r\n    // ================ IN / OUT OPERATIONS ================\r\n    // =====================================================\r\n\r\n    add(product, quantity){\r\n        this.store.push({product: product, quantity: quantity});\r\n    }\r\n\r\n    reset(){\r\n        this.store = [];\r\n    }\r\n\r\n    // =====================================================\r\n    // ============ SINGLE PRODUCT OPERATIONS ==============\r\n    // =====================================================\r\n\r\n    static priceHt(product, quantity=1){\r\n        return Maths.round(Maths.round(product.prix_u_ht_emera) * quantity);\r\n    }\r\n\r\n    static priceTtc(product, quantity=1){\r\n        return Maths.round(Maths.round(this.priceHt(product) * (1 + this.tva(product))) * quantity);\r\n    }\r\n\r\n    static tva(product, quantity=1){\r\n        return Maths.round(Maths.round(parseFloat(product.tva)) * quantity);\r\n    }\r\n\r\n    // =====================================================\r\n    // ================== TOTAL OPERATIONS =================\r\n    // =====================================================\r\n\r\n    totalHt(){\r\n        var totalHt = 0;\r\n\r\n        for(let s of this.store){\r\n            totalHt = Maths.round(totalHt + PriceUtil.priceHt(s.product) * s.quantity);\r\n        }\r\n\r\n        return totalHt;\r\n    }\r\n\r\n    totalTtc(){\r\n        var totalTtc = 0;\r\n\r\n        for(let s of this.store){\r\n            totalTtc = Maths.round(totalTtc + PriceUtil.priceTtc(s.product) * s.quantity);\r\n        }\r\n\r\n        return totalTtc;\r\n    }\r\n\r\n    totalTva(){\r\n        var totalTva = 0;\r\n\r\n        for(let s of this.store){\r\n            totalTva = Maths.round(totalTva + Maths.round(PriceUtil.priceHt(s.product) * PriceUtil.tva(s.product)) * s.quantity);\r\n        }\r\n\r\n        return totalTva;\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport Noty from 'noty';\r\nimport { connect } from 'react-redux';\r\nimport {FormattedMessage, injectIntl} from 'react-intl';\r\nimport PriceUtil from \"../../util/PriceUtil\";\r\nimport Roles from \"../../enums/Roles\";\r\n\r\nimport \"../../../node_modules/noty/lib/noty.css\";\r\nimport \"../../../node_modules/noty/lib/themes/bootstrap-v4.css\";\r\nimport APIUrl from '../../APIUrl';\r\n\r\nclass ProductRow extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            _formatId: this.props.product._id,\r\n            disableButton: false,\r\n            quantity : 0\r\n        };\r\n    }\r\n\r\n    changeFormat(e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        // Change state so that it now focuses on correct product format\r\n        this.setState({_formatId: e.target.value});\r\n    }\r\n\r\n    changeQuantity(e) {\r\n        this.setState({quantity: e.target.value});\r\n    }\r\n\r\n    add(e, product, quantity){\r\n        // Disable button\r\n        this.setState({disableButton: true});\r\n\r\n        if(!quantity) quantity = document.getElementById(\"product-\" + product._id).querySelector(\"#quantity\").value;\r\n\r\n        var successCallback = () => {\r\n            this.setState({disableButton: false, quantity: 0});\r\n\r\n            var designation = product.designation;\r\n            if(designation[designation.length-1] === \"-\") designation = designation.slice(0, designation.length - 2);\r\n\r\n            let notyType = 'success';\r\n            if(this.props.user.role === Roles.ADMIN) notyType = 'info';\r\n\r\n            new Noty({\r\n               type: notyType,\r\n               layout: 'topRight',\r\n               theme: 'bootstrap-v4',\r\n               text: this.props.intl.formatMessage({id: \"Cart.Add.Success\"}) + \" \" + designation,\r\n               timeout: 3000,\r\n             }).show();\r\n        };\r\n\r\n        // Call parent method\r\n        this.props.onAdd(e, this.state._formatId, quantity, successCallback);\r\n    }\r\n\r\n    addMin(e, product){\r\n        this.add(e, product, product.min_cde);\r\n    }\r\n\r\n    getProduct(id){\r\n        // Id is main product. Return main product\r\n        if(this.props.product._id === id) return this.props.product;\r\n\r\n        // Id corresponds to a specific format. Use this format instead\r\n        for(let format of this.props.product.formats){\r\n            if(format._id === id) return format;\r\n        }\r\n    }\r\n    \r\n    getDesignation(product){\r\n        if (!product.designation) return product.sous_famille;\r\n\r\n        if (product.designation.indexOf('-') === 0) return product.designation;\r\n\r\n        return product.designation.split(\"-\")[0];\r\n    }\r\n\r\n    render() {\r\n        let productFormat = this.getProduct(this.state._formatId);\r\n\r\n        // Show a select list of the formats only if more than 1 format\r\n        let formats = null;\r\n        if(this.props.product.formats.length === 1){\r\n            formats = (<div>{this.props.product.formats[0].format}</div>);\r\n        }else{\r\n            formats = (\r\n                <select className=\"form-control\" onChange={(e) => this.changeFormat(e)} defaultValue={this.state._formatId}>\r\n                    {this.props.product.formats.map(format => \r\n                        <option key={format.format} value={format._id}>{format.format}</option>\r\n                    )}\r\n                </select>\r\n            );\r\n        }\r\n\r\n        let buttonsClassName = \"btn-success\";\r\n        if(this.props.user.role === Roles.ADMIN) buttonsClassName = \"btn-primary\";\r\n\r\n        return (\r\n            <tr key={this.props.product._id} id={\"product-\" + this.props.product._id}>\r\n                <td className=\"d-none d-lg-table-cell\">\r\n                    <img className=\"card-img-top product-img d-block mx-auto\" src={APIUrl.getProductImg + this.props.product.mercurial_id + \"/\" + this.props.product.ref} \r\n                         onError={(e)=>{e.target.onerror = null; e.target.src='/images/placeholder_120x120.png'}} alt=\"\" />\r\n                </td>\r\n                <td className=\"product-desc\">\r\n                    <div className=\"product-sous-famille\">{this.getDesignation(this.props.product)}</div>\r\n                    <div className=\"product-caracteristiques\">{this.props.product.caracteristiques}</div>\r\n                </td>\r\n                <td>\r\n                    <div>\r\n                        {formats}\r\n                    </div>\r\n                    <div className=\"product-ref\">Ref: <span className=\"product-ref-value\">{productFormat.ref}</span></div>\r\n                    <div>{this.props.product.unite_de_vente}</div>\r\n\r\n                    <button type=\"button\" className={\"btn \" + buttonsClassName + \" mt-2 rounded product-button d-md-none\"}\r\n                        disabled={this.state.disableButton}\r\n                        onClick={(e) => this.addMin(e, this.props.product)}><FormattedMessage id=\"Add.Cart\" /></button>\r\n                </td>\r\n                <td className=\"d-none d-md-table-cell\">\r\n                    <div><FormattedMessage id=\"Excl.Tax\" />&nbsp;: <span className=\"product-ht-value\">{PriceUtil.priceHt(productFormat)}</span>€</div>\r\n                    <div><FormattedMessage id=\"Incl.Tax\" />&nbsp;: <span className=\"product-ttc-value\">{PriceUtil.priceTtc(productFormat)}</span>€</div>\r\n                </td>\r\n                <td className=\"d-none d-lg-table-cell\">{PriceUtil.tva(this.props.product) * 100}%</td>\r\n                <td className=\"d-none d-md-table-cell\">\r\n                    <div><FormattedMessage id=\"Quantity\" />&nbsp;: </div>\r\n                    <div><input id=\"quantity\" type=\"number\" value={this.state.quantity} min=\"0\" step={this.props.product.min_cde} onChange={(e) => this.changeQuantity(e, this.props.product)} className=\"product-quantity-input\" /></div>\r\n                </td>\r\n                <td className=\"va-middle d-none d-md-table-cell\">\r\n                    <button type=\"button\" className={\"btn \" + buttonsClassName + \" btn-lg btn-block rounded product-button\"}\r\n                        disabled={this.state.quantity < this.props.product.min_cde || this.state.disableButton}\r\n                        onClick={(e) => this.add(e, this.props.product)}><FormattedMessage id=\"Add.Cart\" /></button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.i18n.lang,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        //\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(ProductRow));\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addProductToCart } from '../../actions/cart/cart';\r\nimport {addProductToCartAdmin} from '../../actions/cart/cart';\r\nimport Maths from \"../../util/Maths\";\r\nimport Util from \"../../util/Util\";\r\nimport ProductRow from \"./ProductRow\";\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport Roles from '../../enums/Roles';\r\n\r\nimport \"../../css/products/products.css\";\r\n\r\nclass Products extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            search: null\r\n        };\r\n    }\r\n\r\n    getFormat(product) {\r\n        if (!product.designation) return null;\r\n\r\n        if (product.designation.indexOf('-') === 0) return null;\r\n\r\n        let substrings = product.designation.split(\"-\");\r\n        return substrings[substrings.length - 1];\r\n    }\r\n\r\n    equal(product1, product2) {\r\n        let isolatedDesignation1 = product1.designation.replace(this.getFormat(product1), \"\").trim();\r\n        let isolatedDesignation2 = product2.designation.replace(this.getFormat(product2), \"\").trim();\r\n\r\n        return (product1.famille === product2.famille\r\n            && product1.sous_famille === product2.sous_famille\r\n            && product1.caracteristiques === product2.caracteristiques\r\n            && isolatedDesignation1 === isolatedDesignation2);\r\n    }\r\n\r\n    parseProducts(products, famille) {\r\n        let newProducts = [];\r\n\r\n        outer: for (let p1 of products) {\r\n            if (p1.famille !== famille) continue;\r\n\r\n            let p = Util.shallowClone(p1);\r\n\r\n            // Make sure p1 is not already in newProducts\r\n            for (let n of newProducts) {\r\n                if (this.equal(p, n)) continue outer;\r\n            }\r\n\r\n            let formats = {};\r\n            let formatP = this.getFormat(p);\r\n            formats[formatP] = {  _id: p1._id, format: formatP, ref: p.ref, prix_u_ht_emera: p.prix_u_ht_emera, tva: p.tva };\r\n            \r\n            // Get all formats for identical products\r\n            for (let p2 of products) {\r\n                if (this.equal(p, p2)){\r\n                    let formatP2 = this.getFormat(p2);\r\n                    if(!formats[formatP2]) formats[formatP2] = { _id: p2._id, format: formatP2, ref: p2.ref, prix_u_ht_emera: p2.prix_u_ht_emera, tva: p2.tva };\r\n                } \r\n            }\r\n\r\n            // Insert product with reformatted designation and formats\r\n            p.designation = p.designation.replace(formatP, \"\");\r\n            p.formats = Object.values(formats);\r\n            newProducts.push(p);\r\n        }\r\n\r\n        return newProducts;\r\n    }\r\n\r\n    changeFormat(e, product) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        for (let format of product.formats) {\r\n            if (format.format === e.target.value) {\r\n                let htmlObj = document.getElementById(\"product-\" + product._id);\r\n\r\n                htmlObj.getElementsByClassName(\"product-ref-value\")[0].innerHTML = format.ref;\r\n                htmlObj.getElementsByClassName(\"product-ht-value\")[0].innerHTML = Maths.round(format.prix_u_ht_emera);\r\n                htmlObj.getElementsByClassName(\"product-ttc-value\")[0].innerHTML = Maths.round(format.prix_u_ht_emera * (1 + parseFloat(format.tva)));\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    add(e, productId, quantity, successCallback) {\r\n        var data = {\r\n            id_product: productId,\r\n            quantity: quantity,\r\n        };\r\n\r\n        // Add product. Careful with role\r\n        if(this.props.user.role === Roles.ADMIN) this.props.onAddProductToCartAdmin(data, successCallback);\r\n        else this.props.onAddProductToCart(data, successCallback);\r\n    }\r\n\r\n    search(e) {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n\r\n        this.setState({ search: e.target.value });\r\n    }\r\n\r\n    render() {\r\n        // No 'families'? No render\r\n        if (this.props.products.length === 0) return null;\r\n\r\n        var famille = this.props.match.params.famille;\r\n\r\n        // Make a special treatment to raw products. Regroup by categories, for instance\r\n        let products = this.parseProducts(this.props.products, famille);\r\n\r\n        let productsNode = products.map((product) => {\r\n            if (product.famille !== famille) return null;\r\n\r\n            // Search filter\r\n            if (this.state.search && this.state.search !== \"\") {\r\n                if (product.sous_famille.toUpperCase().indexOf(this.state.search.toUpperCase()) === -1 \r\n                    && product.caracteristiques.toUpperCase().indexOf(this.state.search.toUpperCase()) === -1) return null;\r\n            }\r\n\r\n            return <ProductRow product={product} key={product._id} onAdd={(e, productId, quantity, successCallback) => this.add(e, productId, quantity, successCallback)} />\r\n        });\r\n\r\n        let placeholder = this.props.intl.formatMessage({ id: \"Search.Product\" });\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div>\r\n                    <span className=\"float-left p-2\">\r\n                        <a href=\"#/home/families\" className=\"d-inline-block align-top iconed-btn nostyle-a hoverable m-0\">\r\n                            <FormattedMessage id=\"Categories\" />\r\n                        </a>\r\n                        <div className=\"d-inline-block align-top pr-2\">/</div>\r\n                        <span className=\"d-inline-block align-top iconed-btn m-0\">\r\n                            {famille}\r\n                        </span>\r\n                    </span>\r\n\r\n                    <div className=\"mw-600 p-3 mx-auto\">\r\n                        <input type=\"search\" className=\"form-control\" onChange={(e) => this.search(e)} placeholder={placeholder} />\r\n                    </div>\r\n                </div>\r\n\r\n                <table className=\"table table-striped table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"d-none d-lg-table-cell\"><FormattedMessage id=\"Product\" /></th>\r\n                            <th><FormattedMessage id=\"Description\" /></th>\r\n                            <th><FormattedMessage id=\"Format\" /></th>\r\n                            <th className=\"d-none d-md-table-cell\"><FormattedMessage id=\"Unit.Price\" /></th>\r\n                            <th className=\"d-none d-lg-table-cell\"><FormattedMessage id=\"VAT\" /></th>\r\n                            <th className=\"d-none d-md-table-cell\"><FormattedMessage id=\"Quantity\" /></th>\r\n                            <th className=\"d-none d-md-table-cell\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {productsNode}\r\n                    </tbody>\r\n                </table>\r\n            </React.Fragment>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        products: state.products\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAddProductToCart: (data, successCallback) => dispatch(addProductToCart(data, successCallback)),\r\n        onAddProductToCartAdmin: (data, successCallback) => dispatch(addProductToCartAdmin(data, successCallback))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(Products));\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PriceUtil from \"../../util/PriceUtil\";\r\nimport { updateUrgent, increaseQuantity, decreaseQuantity, deleteCartById } from '../../actions/cart/cart';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport Roles from \"../../enums/Roles\";\r\n\r\nclass CartRow extends React.Component {\r\n\r\n    updateUrgent(e, cartId, urgent) {\r\n        var data = { cartId: cartId, urgent: !urgent };\r\n        this.props.onUpdateUrgent(data);\r\n    }\r\n\r\n    increaseQuantity(e, cartId) {\r\n        var data = { cartId: cartId };\r\n        this.props.onIncreaseQuantity(data);\r\n    }\r\n\r\n    decreaseQuantity(e, cartId) {\r\n        var data = { cartId: cartId };\r\n        this.props.onDecreaseQuantity(data);\r\n    }\r\n\r\n    deleteCartById(e, cartId) {\r\n        var data = { cartId: cartId };\r\n        this.props.onDeleteCartById(data);\r\n    }\r\n\r\n    render() {\r\n        // 'Delete article' modal setup\r\n        var modalTitle = <FormattedMessage id=\"Confirm\" />;\r\n        var modalContent = <FormattedMessage id=\"Product.Remove.Confirmation\" values={{designation:this.props.product.designation}} />;\r\n        var successCallback = (e) => this.deleteCartById(e, this.props.cart._id);\r\n\r\n        var switchClassName = \"switch-bg-green\";\r\n        if(this.props.user.role === Roles.ADMIN) switchClassName = \"switch-bg-blue\";\r\n\r\n        return (\r\n            <tr key={this.props.cart._id}>\r\n                <td className=\"d-none d-lg-table-cell\">{this.props.product.famille}</td>\r\n                <td>{this.props.product.designation}</td>\r\n                <td className=\"d-none d-md-table-cell\">{this.props.product.unite_de_vente}</td>\r\n                <td className=\"d-none d-lg-table-cell\">{this.props.product.ref}</td>\r\n                <td>{this.props.cart.quantity}</td>\r\n                <td className=\"d-none d-lg-table-cell\">{PriceUtil.priceHt(this.props.product)}€</td>\r\n                <td className=\"d-none d-md-table-cell\">{PriceUtil.priceTtc(this.props.product)}€</td>\r\n                <td className=\"d-none d-lg-table-cell\">{PriceUtil.priceHt(this.props.product, this.props.cart.quantity)}€</td>\r\n                <td>{PriceUtil.priceTtc(this.props.product, this.props.cart.quantity)}€</td>\r\n                <td className=\"text-center card-body d-none d-md-table-cell\">\r\n                    <div className=\"custom-control custom-switch mx-auto switch-success\">\r\n                        <input onChange={(e) => this.updateUrgent(e, this.props.cart._id, this.props.cart.urgent)}\r\n                            type=\"checkbox\"\r\n                            className={\"custom-control-input \" + switchClassName}\r\n                            id={\"switch\" + this.props.product._id}\r\n                            checked={this.props.cart.urgent}/>\r\n                        <label className=\"custom-control-label\" htmlFor={\"switch\" + this.props.product._id}></label>\r\n                    </div>\r\n                </td>\r\n                <td className=\"text-center\">\r\n                    <i onClick={(e) => this.decreaseQuantity(e, this.props.cart._id)} className=\"fa fa-minus-circle icon-big\"></i>\r\n                    <i onClick={(e) => this.increaseQuantity(e, this.props.cart._id)} className=\"fa fa-plus-circle icon-big\"></i>\r\n                    <i className=\"fa fa-trash icon-big\" onClick={(e) => this.props.openConfModal(modalTitle, modalContent, successCallback)}></i>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onUpdateUrgent: (data) => dispatch(updateUrgent(data)),\r\n        onIncreaseQuantity: (data) => dispatch(increaseQuantity(data)),\r\n        onDecreaseQuantity: (data) => dispatch(decreaseQuantity(data)),\r\n        onDeleteCartById: (data) => dispatch(deleteCartById(data)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartRow);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport Roles from \"../../../enums/Roles\";\r\n\r\nclass ConfirmationModal extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            disabled: false\r\n        }\r\n    }\r\n\r\n    close(){\r\n        this.props.closeModal();\r\n    }\r\n\r\n    confirm(){\r\n        // Little hack there. Should have used proper callbacks, but the modal was used everywhere,\r\n        // so used async/await no to break the existing code.\r\n        var callback = async () => {\r\n            await this.props.successCallback();\r\n            this.close();\r\n        };\r\n\r\n        this.setState({disabled: true}, callback);\r\n    }\r\n\r\n    stopEvent(e){\r\n\t\te.preventDefault();\r\n\t\te.stopPropagation();\r\n    }\r\n\r\n    render() {\r\n        let buttonsClassName = \"btn-success\";\r\n        if(this.props.user.role === Roles.ADMIN) buttonsClassName = \"btn-primary\";\r\n\r\n        let sizeClassName = \"\";\r\n        if(this.props.size) sizeClassName = \"modal-\" + this.props.size;\r\n\r\n        var title = <FormattedMessage id=\"Confirm\" />;\r\n        if(this.props.title) title = this.props.title;\r\n\r\n        return (\r\n            <div className=\"modal-bg show\" onClick={() => this.close()}>\r\n                <div className=\"modal fade show\">\r\n                    <div className={\"modal-dialog \" + sizeClassName} role=\"document\" onClick={(e) => this.stopEvent(e)}>\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">{title}</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={() => this.close()}>\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                {this.props.content}\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={() => this.close()}><FormattedMessage id=\"Cancel\" /></button>\r\n                                <button type=\"button\" className={\"btn \" + buttonsClassName} onClick={() => this.confirm()} disabled={this.state.disabled}>\r\n                                    <FormattedMessage id=\"Confirm\" />\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        //\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfirmationModal);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport Roles from \"../../../enums/Roles\";\r\n\r\nclass PromptModal extends React.Component {\r\n\r\n    close(){\r\n        this.props.closeModal();\r\n    }\r\n\r\n    confirm(){\r\n        this.props.successCallback();\r\n        this.close();\r\n    }\r\n\r\n    stopEvent(e){\r\n\t\te.preventDefault();\r\n\t\te.stopPropagation();\r\n    }\r\n\r\n    render() {\r\n        let buttonsClassName = \"btn-success\";\r\n        if(this.props.user.role === Roles.ADMIN) buttonsClassName = \"btn-primary\";\r\n\r\n        return (\r\n            <div className=\"modal-bg show\" onClick={() => this.close()}>\r\n                <div className=\"modal fade show\">\r\n                    <div className=\"modal-dialog\" role=\"document\" onClick={(e) => this.stopEvent(e)}>\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">{this.props.title}</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={() => this.close()}>\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <label htmlFor=\"comment\">{this.props.content} :</label>\r\n                                <div>\r\n                                    <textarea className=\"form-control\" type=\"text\" id=\"comment\" name=\"comment\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={() => this.close()}><FormattedMessage id=\"No\" /></button>\r\n                                <button type=\"button\" className={\"btn \" + buttonsClassName} onClick={() => this.confirm()}><FormattedMessage id=\"Yes\" /></button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        //\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PromptModal);","import APIUrl from \"../../APIUrl\";\r\nimport axios from 'axios';\r\nimport { getCart } from '../cart/cart';\r\n\r\nexport const GET_ORDERS = \"GET_ORDERS\";\r\n\r\nfunction getOrdersAction(orders){return {type: GET_ORDERS, orders: orders}};\r\n\r\nexport const passOrder = function(data){\r\n    return function(dispatch){\r\n        return axios.post(APIUrl.addOrder, data)\r\n            .then(function(response){\r\n                dispatch(getCart());\r\n                dispatch(getOrders());\r\n            })\r\n            .catch(function(err){\r\n                throw(err);\r\n            });\r\n    };\r\n};\r\n\r\nexport const getOrders = function(){\r\n    return function(dispatch){\r\n        return axios.get(APIUrl.getOrders)\r\n            .then(function(response){\r\n              dispatch(getOrdersAction(response.data));\r\n            })\r\n            .catch(function(err){\r\n                throw(err);\r\n            });\r\n    };\r\n};\r\n\r\nexport const deleteOrder = function(data){\r\n    return function(dispatch){\r\n        return axios.post(APIUrl.deleteOrder, data)\r\n            .then(function(response){\r\n                // Immediately refresh the order so it's up-to-date\r\n                dispatch(getOrders());\r\n            })\r\n            .catch(function(err){\r\n                throw(err);\r\n            });\r\n    };\r\n};\r\n\r\nexport const duplicate = function(data){\r\n    return function(dispatch){\r\n        return axios.post(APIUrl.duplicate, data)\r\n            .then(function(response){\r\n                // Immediately refresh the order so it's up-to-date\r\n                dispatch(getOrders());\r\n            })\r\n            .catch(function(err){\r\n                throw(err);\r\n            });\r\n    };\r\n};\r\n\r\n// ======================================================================\r\n// ============================= ADMIN ==================================\r\n// ======================================================================\r\n\r\nexport const passOrderAdmin = function(data){\r\n    return function(dispatch){\r\n        return axios.post(APIUrl.addOrderAdmin, data)\r\n            .then(function(response){\r\n                dispatch(getCart());\r\n                dispatch(getOrdersAdmin());\r\n            })\r\n            .catch(function(err){\r\n                throw(err);\r\n            });\r\n    };\r\n};\r\n\r\nexport const getOrdersAdmin = function(){\r\n    return function(dispatch){\r\n        return axios.get(APIUrl.getOrdersAdmin)\r\n            .then(function(response){\r\n              dispatch(getOrdersAction(response.data));\r\n            })\r\n            .catch(function(err){\r\n                throw(err);\r\n            });\r\n    };\r\n};\r\n\r\nexport const updateAdmin = function(data){\r\n    return function(dispatch){\r\n        return axios.post(APIUrl.updateAdmin, data)\r\n            .then(function(response){\r\n              dispatch(getOrdersAdmin());\r\n            })\r\n            .catch(function(err){\r\n                throw(err);\r\n            });\r\n    };\r\n};\r\n\r\nexport const deleteOrderAdmin = function(data){\r\n    return function(dispatch){\r\n        return axios.post(APIUrl.deleteOrderAdmin, data)\r\n            .then(function(response){\r\n                // Immediately refresh the order so it's up-to-date\r\n                dispatch(getOrdersAdmin());\r\n            })\r\n            .catch(function(err){\r\n                throw(err);\r\n            });\r\n    };\r\n};\r\n\r\nexport const splitOrderAdmin = function(data){\r\n    return function(dispatch){\r\n        return axios.post(APIUrl.splitOrderAdmin, data)\r\n            .then(function(response){\r\n                // Immediately refresh the order so it's up-to-date\r\n                dispatch(getOrdersAdmin());\r\n            })\r\n            .catch(function(err){\r\n                throw(err);\r\n            });\r\n    };\r\n};\r\n\r\nexport const duplicateAdmin = function(data){\r\n    return function(dispatch){\r\n        return axios.post(APIUrl.duplicateAdmin, data)\r\n            .then(function(response){\r\n                // Immediately refresh the order so it's up-to-date\r\n                dispatch(getOrdersAdmin());\r\n            })\r\n            .catch(function(err){\r\n                throw(err);\r\n            });\r\n    };\r\n};\r\n","import PriceUtil from \"./PriceUtil\";\r\nimport Maths from \"./Maths\";\r\n\r\nexport default class ProductsTotalUtil {\r\n\r\n    constructor(products, productsCatalog, oldProductsCatalog=[], getProductsFn, settings) {\r\n        if(!settings) settings = {urgent: false, min_order_amount: 0, shipping_costs: [{min: 0, max: +Infinity, cost: 0}]};\r\n\r\n        // Constants\r\n        this.urgent_shipping_cost = settings.urgent;\r\n        this.min_cost_to_order = settings.min_order_amount;\r\n        this.settings = settings;\r\n\r\n        // Function to fetch products\r\n        this.getProductsFn = getProductsFn;\r\n\r\n        // Helper class for prices calculations\r\n        var priceUtil = new PriceUtil();\r\n\r\n        this._urgent = false;\r\n\r\n        // If the mercurial is outdated, we might have to fetch the old products\r\n        this.missingProducts = [];\r\n\r\n        this.containsOldProducts = false;\r\n        this.containsMissingProducts = false;\r\n\r\n        products.map((p) => {\r\n            if(p.urgent) this._urgent = true;\r\n            \r\n            // Get corresponding product\r\n            var product = this.getProduct(p.id_product, productsCatalog);\r\n\r\n            // Old product? Let's try to get it from the BE\r\n            if(!product){\r\n                product = this.getOldProduct(p.id_product, oldProductsCatalog);\r\n                this.containsOldProducts = true;\r\n            }\r\n\r\n            // No product at all? This order might have been passed on a deleted mercurial\r\n            if(!product){\r\n                this.missingProducts.push(p);\r\n                this.containsMissingProducts = true;\r\n                return null;\r\n            }\r\n\r\n            // Add it to PriceUtil\r\n            priceUtil.add(product, p.quantity);\r\n\r\n            return null;\r\n        });\r\n\r\n        // Fetch missing products\r\n        this.getOldProducts(this.missingProducts);\r\n\r\n        this._totalHt = priceUtil.totalHt();\r\n        this._totalTtc = priceUtil.totalTtc();\r\n        this._totalTva = priceUtil.totalTva();\r\n    }\r\n\r\n    // ==================================================================\r\n    // ========================= GET PRODUCTS ===========================\r\n    // ==================================================================\r\n\r\n    getProduct(productId, productsCatalog) {\r\n        for (let product of productsCatalog) {\r\n            if (product._id === productId) return product;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getOldProduct(productId, oldProductsCatalog){\r\n        for(let oldProduct of oldProductsCatalog){\r\n            if (oldProduct._id === productId) return oldProduct;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getOldProducts(products){\r\n        if(products.length === 0) return;\r\n\r\n        let missingProductsIds = [];\r\n        for(let product of products){\r\n            var id = (product._id || product.id_product);\r\n            missingProductsIds.push(id);\r\n        }\r\n\r\n        // Ask the BE at once\r\n        if(missingProductsIds.length > 0){\r\n            if(this.getProductsFn) this.getProductsFn({ids: missingProductsIds});\r\n        } \r\n    }\r\n\r\n    // ==================================================================\r\n    // =========================== FUNCTIONS ============================\r\n    // ==================================================================\r\n\r\n    aboveMinToOrder() {\r\n        // Let's start with the calculated total\r\n        var totalTtc = this._totalTtc;\r\n\r\n        // If the order is urgent, increase price\r\n        if (this._urgent) {\r\n            totalTtc = Maths.round(totalTtc + this.urgent_shipping_cost);\r\n        }\r\n\r\n        return (totalTtc > this.min_cost_to_order);\r\n    }\r\n\r\n    freeShipping() {\r\n        // Let's tart with the calculated total\r\n        if (this.settings.shipping_costs.length > 0) {\r\n            var lastSetting = this.settings.shipping_costs[this.settings.shipping_costs.length - 1];\r\n\r\n            if (!lastSetting.max && lastSetting.cost === 0) {\r\n                return (this.getTotal(true, false) < lastSetting.min);\r\n            } else if (lastSetting.max) {\r\n                return (this.getTotal(true, false) < lastSetting.max);\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getTotal(urgent = false, shipping = false) {\r\n        // Let's start with the calculated total\r\n        var totalTtc = this._totalTtc;\r\n\r\n        // If the order is urgent, increase price\r\n        if (urgent && this._urgent) {\r\n            totalTtc = Maths.round(totalTtc + this.urgent_shipping_cost);\r\n        }\r\n\r\n        // If the order is under the free shipping amount, increase price with shipping fees\r\n        if (shipping && totalTtc > this.settings.min_order_amount) {\r\n            totalTtc = Maths.round(totalTtc + this.shippingCost);\r\n        }\r\n\r\n        return totalTtc;\r\n    }\r\n\r\n    // ==================================================================\r\n    // ======================= GETTERS & SETTERS ========================\r\n    // ==================================================================\r\n\r\n    get totalHt() {\r\n        return this._totalHt;\r\n    }\r\n\r\n    set totalHt(e) {\r\n        // Read-only\r\n    }\r\n\r\n    get totalTtc() {\r\n        return this.getTotal(true, true);\r\n    }\r\n\r\n    set totalTtc(e) {\r\n        // Read-only\r\n    }\r\n\r\n    get totalTva() {\r\n        return this._totalTva;\r\n    }\r\n\r\n    set totalTva(e) {\r\n        // Read-only\r\n    }\r\n\r\n    get urgent() {\r\n        return this._urgent;\r\n    }\r\n\r\n    set urgent(e) {\r\n        // Read-only\r\n    }\r\n\r\n    get shippingCost() {\r\n        let total = this.getTotal(true, false);\r\n\r\n        var price = 0;\r\n        if (this.settings.shipping_costs.length > 0) {\r\n            for (var shipping_cost of this.settings.shipping_costs) {\r\n                if (!shipping_cost.max && total >= shipping_cost.min) {\r\n                    price = shipping_cost.cost;\r\n                } else if (total >= shipping_cost.min && total <= shipping_cost.max) {\r\n                    price = shipping_cost.cost;\r\n                }\r\n            }\r\n\r\n            return price;\r\n        }\r\n\r\n        return price;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nclass CartConfModalAdmin extends React.Component {\r\n\r\n    close(){\r\n        this.props.closeModal();\r\n    }\r\n\r\n    confirm(){\r\n        this.props.successCallback();\r\n        this.close();\r\n    }\r\n\r\n    stopEvent(e){\r\n\t\te.preventDefault();\r\n\t\te.stopPropagation();\r\n    }\r\n\r\n    render() {\r\n        var clientsNode = this.props.clients.map(client => {\r\n            return <option key={client._id} value={client._id}>{client.username}</option>\r\n        });\r\n\r\n        return (\r\n            <div className=\"modal-bg show\" onClick={() => this.close()}>\r\n                <div className=\"modal fade show\">\r\n                    <div className=\"modal-dialog\" role=\"document\" onClick={(e) => this.stopEvent(e)}>\r\n                        <div className=\"modal-content\">\r\n\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\"><FormattedMessage id=\"Order.Confirm\" /></h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={() => this.close()}>\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div className=\"modal-body\">\r\n                                <label htmlFor=\"comment\"><FormattedMessage id=\"Choose.Client\" /> :</label>\r\n                                <select id=\"order-clientId\" className=\"form-control mb-3 w-100\">\r\n                                    {clientsNode}\r\n                                </select>\r\n\r\n                                <label htmlFor=\"comment\"><FormattedMessage id=\"Comment\" /> :</label>\r\n                                <div>\r\n                                    <textarea className=\"form-control\" type=\"text\" id=\"comment\" name=\"comment\"/>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"modal-footer\">\r\n                            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={() => this.close()}><FormattedMessage id=\"Cancel\" /></button>\r\n                                <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.confirm()} disabled={this.props.clients.length === 0}><FormattedMessage id=\"Confirm\" /></button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.i18n.lang,\r\n        user: state.user,\r\n        clients: state.clients,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        //\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartConfModalAdmin);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CartRow from \"./CartRow\";\r\nimport ConfirmationModal from '../sub/modals/ConfirmationModal';\r\nimport PromptModal from '../sub/modals/PromptModal';\r\nimport { deleteAll } from '../../actions/cart/cart';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { passOrder, passOrderAdmin } from '../../actions/orders/orders';\r\nimport ProductsTotalUtil from '../../util/ProductsTotalUtil';\r\nimport Roles from \"../../enums/Roles\";\r\nimport CartPromptModalAdmin from \"./CartPromptModalAdmin\";\r\n\r\nclass Cart extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            modal: null,\r\n            disableButton: true\r\n        };\r\n    }\r\n\r\n    getProduct(productId) {\r\n        for (let product of this.props.products) {\r\n            if (product._id === productId) return product;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    passOrder(e) {\r\n        var comment = document.getElementById(\"comment\").value;\r\n        var data = {comment: comment};\r\n\r\n        // Admin\r\n        if(this.props.user.role === Roles.ADMIN){\r\n            // Add the clientId to the call\r\n            var clientId = document.getElementById(\"order-clientId\").value;\r\n            data.clientId = clientId;\r\n\r\n            this.props.onPassOrderAdmin(data);\r\n        }\r\n        // User\r\n        else{\r\n            this.props.onPassOrder(data);\r\n        }\r\n    }\r\n\r\n    deleteAll(e) {\r\n        this.props.onDeleteAll();\r\n    }\r\n\r\n    openConfModal(title, content, successCallback) {\r\n        this.setState({\r\n            modal: <ConfirmationModal isOpen={true}\r\n                title={title}\r\n                content={content}\r\n                successCallback={successCallback}\r\n                closeModal={() => this.closeModal()} />\r\n        });\r\n    }\r\n\r\n    openOrderPromptModal() {\r\n        // Admin user\r\n        if (this.props.user.role === Roles.ADMIN) {\r\n            this.setState({\r\n                modal: <CartPromptModalAdmin\r\n                    isOpen={true}\r\n                    successCallback={(e) => this.passOrder()}\r\n                    closeModal={() => this.closeModal()} />\r\n            });\r\n        }\r\n        // Normal user\r\n        else {\r\n            var promptModalTitle = <FormattedMessage id=\"Order.Confirm\" />;\r\n            var promptModalContent = <FormattedMessage id=\"Comment\" />;\r\n\r\n            this.setState({\r\n                modal: <PromptModal isOpen={true}\r\n                    title={promptModalTitle}\r\n                    content={promptModalContent}\r\n                    successCallback={(e) => this.passOrder()}\r\n                    closeModal={() => this.closeModal()} />\r\n            });\r\n        }\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ modal: null });\r\n    }\r\n\r\n    render() {\r\n        var ordersSettings;\r\n        if(this.props.ordersSettings.length === 0 && this.props.ordersSettingsAdmin.length === 0) return null;\r\n        if(this.props.ordersSettings.length !== 0 ) ordersSettings = this.props.ordersSettings;\r\n        if(this.props.ordersSettingsAdmin.length !== 0 ) ordersSettings = this.props.ordersSettingsAdmin;\r\n\r\n        if (this.props.cart.length === 0 || this.props.products.length === 0) {\r\n            return (\r\n                <React.Fragment>\r\n                    <a href=\"#/home/families\" className=\"iconed-btn nostyle-a hoverable\">\r\n                        <span className=\"mt-3 mb-3\">\r\n                            <i className=\"fa fa-arrow-circle-left icon-big text-dark\"></i>\r\n                            <p><FormattedMessage id=\"Categories\" /></p>\r\n                        </span>\r\n                    </a>\r\n                    <div className=\"alert alert-secondary\" role=\"alert\">\r\n                        <FormattedMessage id=\"Empty.Cart\" />\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n\r\n        // Helper that will do all calculations for us\r\n        var productsTotalUtil = new ProductsTotalUtil(this.props.cart, this.props.products, null, null, ordersSettings);\r\n\r\n        // 'Delete cart' modal setup\r\n        var modalTitle = <FormattedMessage id=\"Confirm\" />;\r\n        var modalContent = <FormattedMessage id=\"Empty.Cart.Confirm\" />;\r\n        var successCallbackConfModal = (e) => this.deleteAll(e);\r\n\r\n        let cartNode = this.props.cart.map((cart) => {\r\n            var product = this.getProduct(cart.id_product);\r\n\r\n            return (\r\n                <CartRow\r\n                    key={cart._id}\r\n                    cart={cart}\r\n                    product={product}\r\n                    openConfModal={(title, content, successCallback) => this.openConfModal(title, content, successCallback)} />\r\n            );\r\n        });\r\n\r\n        var shoppingAlert = null;\r\n        var shippingAlert = null;\r\n\r\n        if (!productsTotalUtil.aboveMinToOrder()) {\r\n            shoppingAlert = <div className='alert alert-danger' role='alert'><FormattedMessage id=\"Min.Order.Cost\" values={{ cost: productsTotalUtil.min_cost_to_order }} /></div>;\r\n        }\r\n\r\n        if (productsTotalUtil.freeShipping()) {\r\n            var max = ordersSettings.shipping_costs[ordersSettings.shipping_costs.length - 1].max;\r\n            var min = ordersSettings.shipping_costs[ordersSettings.shipping_costs.length - 1].min\r\n            shippingAlert = <div className='alert alert-info' role='alert'><FormattedMessage id=\"Min.Shipping.Cost\" values={{cost: max || min }}/></div>;\r\n        }\r\n\r\n        let buttonsClassName = \"btn-success\";\r\n        if (this.props.user.role === Roles.ADMIN) buttonsClassName = \"btn-primary\";\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <a href=\"#/home/families\" className=\"iconed-btn nostyle-a hoverable\">\r\n                    <span className=\"mt-3\">\r\n                        <i className=\"fa fa-arrow-circle-left icon-big text-dark\"></i>\r\n                        <p><FormattedMessage id=\"Categories\" /></p>\r\n                    </span>\r\n                </a>\r\n\r\n                <div className=\"content\">\r\n\r\n                    {this.state.modal}\r\n                    {shoppingAlert}\r\n                    {shippingAlert}\r\n\r\n                    <table className=\"table table-striped table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"d-none d-lg-table-cell\"><FormattedMessage id=\"Category\" /></th>\r\n                                <th><FormattedMessage id=\"Designation\" /></th>\r\n                                <th className=\"d-none d-md-table-cell\"><FormattedMessage id=\"Vending.unit\" /></th>\r\n                                <th className=\"d-none d-lg-table-cell\"><FormattedMessage id=\"Reference\" /></th>\r\n                                <th><FormattedMessage id=\"Qty\" /></th>\r\n                                <th className=\"d-none d-lg-table-cell\"><FormattedMessage id=\"Unit.Price.Excl.Tax\" /></th>\r\n                                <th className=\"d-none d-md-table-cell\"><FormattedMessage id=\"Unit.Price.Incl.Tax\" /></th>\r\n                                <th className=\"d-none d-lg-table-cell\"><FormattedMessage id=\"Total\" /> <FormattedMessage id=\"Excl.Tax\" /></th>\r\n                                <th><FormattedMessage id=\"Total\" /> <FormattedMessage id=\"Incl.Tax\" /></th>\r\n                                <th className=\"d-none d-md-table-cell\"><FormattedMessage id=\"Urgent\" /></th>\r\n                                <th><FormattedMessage id=\"Actions\" /></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {cartNode}\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <div className=\"card col-12 col-lg-6 offset-lg-6\">\r\n                        <div className=\"card-body\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    {(productsTotalUtil.aboveMinToOrder()) &&\r\n                                        <tr>\r\n                                            <td><FormattedMessage id=\"Shipping.Cost\" />&nbsp;:</td>\r\n                                            <td><b>{productsTotalUtil.shippingCost}€</b></td>\r\n                                        </tr>\r\n                                    }\r\n                                    {(productsTotalUtil.urgent) &&\r\n                                        <tr>\r\n                                            <td><FormattedMessage id=\"Emergency.Cost\" /></td>\r\n                                            <td><b>{productsTotalUtil.urgent_shipping_cost}€</b></td>\r\n                                        </tr>\r\n                                    }\r\n                                    <tr>\r\n                                        <td><FormattedMessage id=\"Total.Excl.Tax\" /></td>\r\n                                        <td><b>{productsTotalUtil.totalHt}€</b></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><FormattedMessage id=\"VAT\" /></td>\r\n                                        <td><b>{productsTotalUtil.totalTva}€</b></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><FormattedMessage id=\"Total.Incl.Tax\" /></td>\r\n                                        <td><b>{productsTotalUtil.totalTtc}€</b></td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n\r\n                            <div className=\"container\">\r\n                                <div className=\"row text-center\">\r\n                                    <div className=\"col-12 col-sm-6 mb-1\">\r\n                                        <button className={\"btn btn-m \" + buttonsClassName + \" btn-block\"} onClick={(e) => this.openConfModal(modalTitle, modalContent, successCallbackConfModal)}><FormattedMessage id=\"Cart.Empty\" /></button>\r\n                                    </div>\r\n                                    <div className=\"col-12 col-sm-6\">\r\n                                        <button className={\"btn btn-m \" + buttonsClassName + \" btn-block\"} onClick={(e) => this.openOrderPromptModal()} disabled={!productsTotalUtil.aboveMinToOrder()}><FormattedMessage id=\"Order.Pass\" /></button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.i18n.lang,\r\n        cart: state.cart,\r\n        products: state.products,\r\n        user: state.user,\r\n        ordersSettings: state.ordersSettings,\r\n        ordersSettingsAdmin: state.ordersSettingsAdmin\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onDeleteAll: () => dispatch(deleteAll()),\r\n        onPassOrder: (data) => dispatch(passOrder(data)),\r\n        onPassOrderAdmin: (data) => dispatch(passOrderAdmin(data)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\r\n","\r\nimport axios from 'axios';\r\nimport ApiURL from \"../APIUrl\";\r\n\r\nexport default class PDFUtil{\r\n\r\n    static toPDF(pdfComponentId, fileName, successCallback){\r\n        // Prepare form data\r\n        let data = {\r\n            css: [],\r\n            html: document.getElementById(pdfComponentId).innerHTML,\r\n            zoom: process.env.REACT_APP_PDF_ZOOM,\r\n            header: `\r\n                <div style=\"width: 90%; font-style: italic; font-size: 12px; text-align: right; margin: 0 auto; border-bottom: 1px solid;\">\r\n                    {{page}}/{{pages}}\r\n                </div>`,\r\n            footer: `\r\n                <div style=\"font-size: 8px; width: 90%; margin: 0 auto; text-align: center; border-top: 1px solid;\">\r\n                    <p style=\"color: black; font-style: italic; font-size: 12px; line-height: 0px; margin-top: 20px; width: 100%;\">\r\n                        ENTREPRISE (Siège) - 00 Rue de l'Entreprise, 00000 Nom-de-la-commune - Tel : 00 00 00 00 00 - FAX : 00 00 00 00 00\r\n                    </p>\r\n                    <p style=\"color: black; font-style: italic; font-size: 12px; line-height: 0px; margin-top: 20px; width: 100%;\">\r\n                        SAS au capital de 0 000 000,00 € - SIRET : 000 000 000 000 00 - Site : http://www.entreprise.com\r\n                    </p>\r\n                </div>`\r\n        };\r\n\r\n        // Use this to load and add a CSS file to the PDF. You can load as many as you please by chaining the method with itself\r\n        var addCSS = function(url, successCallback){\r\n            axios.get(url)\r\n            .then(function(result){\r\n                // Add CSS to form data\r\n                data.css.push(result.data);\r\n\r\n                return successCallback();\r\n            }).catch(function(error){\r\n                throw error;\r\n            });\r\n        };\r\n\r\n        var sendToBE = function(){\r\n            axios.post(ApiURL.toPDF, data, {responseType: \"arraybuffer\"})\r\n            .then(function(result){\r\n                // Save received data into a PDF file\r\n                let pdf = new Blob([result.data], {type:\"application/pdf\"});\r\n\r\n                let link = document.createElement('a');\r\n                link.href = window.URL.createObjectURL(pdf);\r\n                link.download = fileName + \".pdf\";\r\n\r\n                document.body.appendChild(link);\r\n                link.click();\r\n                document.body.removeChild(link);\r\n\r\n                // Success callback\r\n                if(successCallback) successCallback();\r\n            }).catch(function(error){\r\n                throw error;\r\n            });\r\n        };\r\n        \r\n        // Launch the chain\r\n        addCSS(\"/css/pdf.css\", \r\n            () => sendToBE()\r\n        );\r\n    }\r\n\r\n}","export default class DateUtil{\r\n\r\n    static toDate(date){\r\n        date = new Date(date);\r\n        let dd = date.getDate();\r\n        let MM = date.getMonth()+1; \r\n        const yyyy = date.getFullYear();\r\n\r\n        if(dd < 10) dd = `0${dd}`;\r\n        if(MM < 10)  MM = `0${MM}`;\r\n\r\n        return `${dd}/${MM}/${yyyy}`;\r\n    }\r\n\r\n    static toDateWithHour(date){\r\n        date = new Date(date);\r\n        let dd = date.getDate();\r\n        let MM = date.getMonth()+1; \r\n        const yyyy = date.getFullYear();\r\n\r\n        if(dd < 10) dd = `0${dd}`;\r\n        if(MM < 10)  MM = `0${MM}`;\r\n\r\n        let hh = date.getHours();\r\n        let mm = date.getMinutes();\r\n\r\n        if(mm < 10) mm = `0${mm}`;\r\n\r\n        return `${dd}/${MM}/${yyyy} ${hh}:${mm}`;\r\n    }\r\n\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PriceUtil from \"../../util/PriceUtil\";\r\nimport Roles from \"../../enums/Roles\";\r\n\r\nclass OrderProductRow extends React.Component {\r\n\r\n    render() {\r\n        let urgentIconClassName = \"text-success\";\r\n        if(this.props.user.role === Roles.ADMIN) urgentIconClassName = \"text-info\";\r\n\r\n        return (\r\n            <tr key={this.props.key} id={\"product-\" + this.props.product._id}>\r\n              <td className=\"d-none d-md-table-cell\">{this.props.product.ref}</td>\r\n              <td>{this.props.product.designation} {(this.props.urgent) && <i className={\"fa fa-check \" + urgentIconClassName + \" float-right\"}></i> }</td>\r\n              <td>{this.props.quantity}</td>\r\n              <td className=\"d-none d-md-table-cell\">{PriceUtil.priceHt(this.props.product)}€</td>\r\n              <td>{PriceUtil.priceHt(this.props.product, this.props.quantity)}€</td>\r\n            </tr>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        //\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderProductRow);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PriceUtil from \"../../util/PriceUtil\";\r\nimport { FormattedMessage } from 'react-intl';\r\nimport OrderProductRow from \"./OrderProductRow\";\r\nimport Roles from \"../../enums/Roles\";\r\n\r\nclass OrderProducts extends React.Component {\r\n\r\n    getProduct(productId) {\r\n        // Product from regular mercurial\r\n        for (let product of this.props.products) {\r\n            if (product._id === productId) return product;\r\n        }\r\n\r\n        // Product from outdated mercurial\r\n        for(let oldProduct of this.props.oldProducts){\r\n            if (oldProduct._id === productId) return oldProduct;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.products.length === 0 && this.props.oldProducts.length === 0) return null;\r\n\r\n        // Helper class for prices calculations\r\n        var priceUtil = new PriceUtil();\r\n\r\n        let key = 0;\r\n        let productNode = this.props.order.products.map((p) => {\r\n            var product = this.getProduct(p.id_product);\r\n            priceUtil.add(product, p.quantity);\r\n\r\n            return (\r\n                <OrderProductRow\r\n                    key={++key + \"-\" + product._id}\r\n                    product={product}\r\n                    quantity={p.quantity}\r\n                    urgent={p.urgent}\r\n                    />\r\n            );\r\n        });\r\n\r\n        let commentClassName = (this.props.user.role === Roles.ADMIN) ? \"alert-info\" : \"alert-success\";\r\n\r\n        let commentNode = null;\r\n        if(this.props.order.comment && this.props.order.comment !== \"\"){\r\n            commentNode = (\r\n                <tr>\r\n                    <td colSpan=\"1000\">\r\n                        <div className={\"alert \" + commentClassName + \" mb-0 break-word\"} role=\"alert\">\r\n                            <b><FormattedMessage id=\"Comment\" /></b> : {this.props.order.comment}\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <table className=\"table table-striped table-bordered m-0\">\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"d-none d-md-table-cell\"><FormattedMessage id=\"Reference\" /></th>\r\n                        <th><FormattedMessage id=\"Designation\" /></th>\r\n                        <th><FormattedMessage id=\"Quantity\" /></th>\r\n                        <th className=\"d-none d-md-table-cell\"><FormattedMessage id=\"Unit.Price.Excl.Tax\" /></th>\r\n                        <th><FormattedMessage id=\"Total.Excl.Tax\" /></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {productNode}\r\n                    {commentNode}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        products: state.products,\r\n        oldProducts: state.oldProducts,\r\n        lang: state.i18n.lang,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        //\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderProducts);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport OrderProducts from \"./OrderProducts\";\r\nimport ProductsTotalUtil from '../../util/ProductsTotalUtil';\r\nimport DateUtil from '../../util/DateUtil';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport Roles from \"../../enums/Roles\";\r\n\r\nclass OrderPDF extends React.Component{\r\n\r\n    render() {\r\n        var ordersSettings;\r\n        if(this.props.user.role === Roles.ADMIN) ordersSettings = this.props.ordersSettingsAdmin;\r\n        else ordersSettings = this.props.ordersSettings;\r\n\r\n        // Helper that will do all calculations for us\r\n        var productsTotalUtil = new ProductsTotalUtil(this.props.order.products, this.props.products, this.props.oldProducts, null, ordersSettings);\r\n\r\n        let color = \"green\";\r\n        if(this.props.user.role === Roles.ADMIN) color = \"blue\";\r\n\r\n        return (\r\n            <div id={this.props.id} className=\"pdf-container\">\r\n\r\n                <div className=\"pdf\">\r\n\r\n                    <div>\r\n\r\n                        <div className=\"w-50-perc in-block\">\r\n                            <div className=\"e4coll-logo\"></div>\r\n                        </div>\r\n\r\n                        <div className=\"w-50-perc in-block\">\r\n                            <div className={\"stamp \" + color + \"-bg\"}>\r\n                                COMMANDE N°{this.props.order.ref} du {DateUtil.toDate(this.props.order.creation_date)}\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div>\r\n\r\n                        <div className=\"w-50-perc in-block\">\r\n                            <div className=\"contacts\">\r\n                                <h1>Responsable Commercial</h1>\r\n                                <p>Prénom NOM</p>\r\n                                <p>Tel : 06.00.00.00.00</p>\r\n                                <p>Email : nom.prenom@domain.com</p>\r\n                                <h1>Administration des ventes</h1>\r\n                                <p>Prénom NOM</p>\r\n                                <p>Tel : 06.00.00.00.00</p>\r\n                                <p>Email : nom.prenom@domain.com</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"w-50-perc in-block\">\r\n                            <div className=\"address text-left\">\r\n                                <p>ADRESSE DE L'ETABLISSEMENT</p>\r\n                                <p className=\"mention\">Ordere passée par Nom Prénom</p>\r\n                                <br/>\r\n                                <p>00 RUE DE L'ETABLISSEMENT</p>\r\n                                <p>0000 VILLE</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <br/><br/>\r\n\r\n                    <div className={color + \"-table\"}>\r\n\r\n                        <OrderProducts order={this.props.order} />\r\n\r\n                    </div>\r\n\r\n                    <div className=\"fl-fix\">\r\n\r\n                        <div className=\"fl-right\">\r\n\r\n                            <div className=\"summary\">\r\n                                <table className={color + \"-bg\"}>\r\n                                    <tbody>\r\n                                        {(productsTotalUtil.aboveMinToOrder()) &&\r\n                                            <tr>\r\n                                                <td><FormattedMessage id=\"Shipping.Cost\" />&nbsp;:</td>\r\n                                                <td><b>{productsTotalUtil.shippingCost}€</b></td>\r\n                                            </tr>\r\n                                        }\r\n                                        {(productsTotalUtil.urgent) &&\r\n                                            <tr>\r\n                                                <td><FormattedMessage id=\"Emergency.Cost\" /></td>\r\n                                                <td><b>{productsTotalUtil.urgent_shipping_cost}€</b></td>\r\n                                            </tr>\r\n                                        }\r\n                                        <tr>\r\n                                            <td><FormattedMessage id=\"Total.Excl.Tax\" /></td>\r\n                                            <td><b>{productsTotalUtil.totalHt}€</b></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td><FormattedMessage id=\"VAT\" /></td>\r\n                                            <td><b>{productsTotalUtil.totalTva}€</b></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td><FormattedMessage id=\"Total.Incl.Tax\" /></td>\r\n                                            <td><b>{productsTotalUtil.totalTtc}€</b></td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n\r\n                            <div className=\"contacts\">\r\n                                <p>Durée de livraison: {ordersSettings.shipping_delay} jours</p>\r\n                                <p>Moyens de paiment: Chèque</p>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.i18n.lang,\r\n        user: state.user,\r\n        ordersSettings: state.ordersSettings,\r\n        ordersSettingsAdmin: state.ordersSettingsAdmin,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        //\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderPDF);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport Roles from \"../../enums/Roles\";\r\nimport PDFUtil from \"../../util/PDFUtil\";\r\n\r\nclass PDFViewer extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            open: true\r\n        };\r\n    }\r\n\r\n    close(e){\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        this.setState({open: false});\r\n    }\r\n\r\n    render(){\r\n        // The viewer is not really 'closed', because for PDF export the element needs to be in the HTML.\r\n        // We just hide it very far away.\r\n        if(!this.props.open){\r\n            return (\r\n                <div style={{position: \"absolute\", marginLeft: \"-10000px\"}}>\r\n                    {this.props.template}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        let buttonsClassName = \"pdf-overview-green-btn\";\r\n        if(this.props.user.role === Roles.ADMIN) buttonsClassName = \"pdf-overview-blue-btn\";\r\n\r\n        return (\r\n            <div className=\"pdf-overview-bg\" onClick={(e) => this.props.toggle(e)}>\r\n\r\n                <button \r\n                    className={\"pdf-overview-export-button \" + buttonsClassName}\r\n                    onClick={(e) => PDFUtil.toPDF(this.props.template.props.id, this.props.fileName)}>\r\n                    <FormattedMessage id=\"Export.PDF\" />\r\n                </button>\r\n\r\n                <div className=\"pdf-overview\">\r\n                    {this.props.template}\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.i18n.lang,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        //\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PDFViewer);","import APIUrl from \"../../APIUrl\";\r\nimport axios from 'axios';\r\n\r\nexport const GET_OLD_PRODUCTS = \"GET_OLD_PRODUCTS\";\r\n\r\nfunction getOldProductsAction(oldProducts){return {type: GET_OLD_PRODUCTS, oldProducts: oldProducts}};\r\n\r\n// Small hack that enables us to not ask the BE twice for an old product\r\nvar alreadyRequestedIds = {};\r\nvar removeAlreadyRequestedIds = function(ids){\r\n    let idsToSend = [];\r\n\r\n    for(let id of ids){\r\n        if(!alreadyRequestedIds[id]){\r\n            idsToSend.push(id);\r\n            alreadyRequestedIds[id] = true;\r\n        }\r\n    }\r\n\r\n    return idsToSend;\r\n};\r\n\r\nexport const getOldProducts = function(data){\r\n    return function(dispatch){\r\n        // Careful, don't ask the BE twice for a product\r\n        let idsToSend = removeAlreadyRequestedIds(data.ids);\r\n        if(idsToSend.length === 0) return;\r\n    \r\n        return axios.post(APIUrl.getManyProducts, {ids: idsToSend})\r\n            .then(function(response){\r\n                dispatch(getOldProductsAction(response.data));\r\n            })\r\n            .catch(function(err){\r\n                throw(err);\r\n            });\r\n    };\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PDFUtil from \"../../util/PDFUtil\";\r\nimport DateUtil from \"../../util/DateUtil\";\r\nimport { FormattedMessage } from 'react-intl';\r\nimport OrderProducts from \"./OrderProducts\";\r\nimport Roles from \"../../enums/Roles\";\r\nimport { UncontrolledTooltip } from 'reactstrap';\r\n\r\nimport OrderPDF from \"./OrderPDF\";\r\nimport PDFViewer from \"../pdf/PDFViewer\";\r\nimport Role from '../../enums/OrderStatus';\r\nimport ProductsTotalUtil from '../../util/ProductsTotalUtil';\r\n\r\nimport { deleteOrder, duplicate } from '../../actions/orders/orders';\r\nimport { getOldProducts } from '../../actions/products/oldProducts';\r\n\r\nimport \"../../css/orders/orders.css\";\r\n\r\nclass OrderRow extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            collapsed: false,\r\n            displayPDF: false,\r\n            disableExport: false,\r\n        };\r\n\r\n        // List of products we have already attempted to fetch from BE\r\n        this.alreadySent = {};\r\n\r\n        // Enabled to know if the order contains outdated products or not\r\n        this.outdated = false;\r\n    }\r\n\r\n    collapse(elemId){\r\n        var elem = document.getElementById(elemId);\r\n\r\n        if(elem.classList.contains(\"table-hidden\")){\r\n            this.setState({collapsed: true});\r\n            elem.classList.remove(\"table-hidden\");\r\n            elem.classList.add(\"table-visible-green\");\r\n        }else{\r\n            this.setState({collapsed: false});\r\n            elem.classList.remove(\"table-visible-green\");\r\n            elem.classList.add(\"table-hidden\");\r\n        }\r\n    }\r\n\r\n    deleteOrder(e, orderId, role) {\r\n        var data = { orderId: orderId};\r\n        this.props.onDeleteOrder(data);\r\n    }\r\n\r\n    hasUrgent(products){\r\n      for(var product of products){\r\n        if(product.urgent) return true;\r\n      }\r\n\r\n      return false;\r\n    }\r\n\r\n    canPDF(order){\r\n      return (order.status === Role.PENDING || order.status === Role.SENT || order.status === Role.RECEIVED);\r\n    }\r\n\r\n    togglePDF(pdfElemId, pdfFileName){\r\n        if(this.state.disableExport || !this.canPDF(this.props.order)) return;\r\n        \r\n        if(process.env.REACT_APP_PDF_OVERVIEW === \"true\"){\r\n            // Possibility n°1 (dev env) : display preview of PDF (without header, footer, pages etc.)\r\n            this.setState({displayPDF: !this.state.displayPDF});\r\n        }else{\r\n            // Possibility n°2 (prod env) : directly save to PDF\r\n            this.setState({disableExport: true});\r\n            var successCallback = () => this.setState({disableExport: false});\r\n            PDFUtil.toPDF(pdfElemId, pdfFileName, successCallback);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var order = this.props.order;\r\n\r\n        // Use productsTotalUtil to get all totals & also automatically fetch missing products\r\n        var productsTotalUtil = new ProductsTotalUtil(order.products, \r\n            this.props.products, \r\n            this.props.oldProducts, \r\n            (data) => this.props.onGetOldProducts(data));\r\n\r\n        var missingData = productsTotalUtil.containsMissingProducts;\r\n        var oldData = productsTotalUtil.containsOldProducts;\r\n\r\n        // 'Delete order' modal setup\r\n        var modalTitle = <FormattedMessage id=\"Confirm\" />;\r\n        var modalContent = <FormattedMessage id=\"Order.Remove.Confirmation\" />;\r\n        var successCallback = (e) => this.deleteOrder(e, this.props.order._id);\r\n\r\n        let pdfElemId = \"order-pdf-\" + this.props.order._id;\r\n        let pdfFileName = \"order-\" + this.props.order._id;\r\n        let pdfOrder = null;\r\n        if(!missingData){\r\n            pdfOrder = (\r\n                <OrderPDF\r\n                    id={pdfElemId}\r\n                    order={this.props.order}\r\n                    products={this.props.products}\r\n                    oldProducts={this.props.oldProducts} />\r\n            );\r\n        }\r\n\r\n        let urgentIconClassName = \"text-success\";\r\n        if(this.props.user.role === Roles.ADMIN) urgentIconClassName = \"text-info\";\r\n\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <tr key={this.props.order._id} className={(missingData) ? \"order-tr font-italic text-muted\" : \"order-tr\"}>\r\n                    <td className=\"d-none d-md-table-cell mw-200 break-word align-middle\">\r\n                        {this.props.order.ref}\r\n                        {(this.props.order.comment && this.props.comment !== \"\") && <i className=\"fa fa-commenting-o icon-big float-right\" disabled></i>}\r\n                    </td>\r\n                    <td className=\"align-middle\">{DateUtil.toDateWithHour(this.props.order.creation_date)}</td>\r\n                    <td className=\"d-none d-lg-table-cell align-middle\">{productsTotalUtil.totalHt}€</td>\r\n                    <td className=\"align-middle\">{productsTotalUtil.totalTtc}€</td>\r\n                    <td className=\"align-middle\"><FormattedMessage id={\"Order.Status.\" + this.props.order.status} /></td>\r\n                    <td className=\"text-center align-middle\">\r\n                        <i className={\"fa fa-sort-down icon-big \" + ((this.state.collapsed) ? \"flip-ver\" : \"\")}  onClick={(e) => {if(!missingData) this.collapse(\"prods-\" + this.props.order._id)}} disabled={missingData}></i>\r\n                        <i className=\"fa fa-trash icon-big\" onClick={(e) => {if(!missingData) this.props.openConfModal(modalTitle, modalContent, successCallback)}} disabled={missingData}></i>\r\n                        <i className=\"fa fa-file-pdf-o icon-big\" onClick={(e) => {if(!missingData) this.togglePDF(pdfElemId, pdfFileName)}} disabled={this.state.disableExport || !this.canPDF(this.props.order) || missingData}></i>\r\n                        {<PDFViewer open={this.state.displayPDF} toggle={(pdfElemId, pdfFileName) => {if(!missingData) this.togglePDF(pdfElemId, pdfFileName)}} template={pdfOrder} fileName={pdfFileName} disabled={missingData} />}\r\n                        <i id={\"duplicate-btn\" + this.props.order._id} className=\"fa fa-files-o icon-big\" onClick={(e) => {if(!missingData && !oldData) this.props.onDuplicate({orderId: this.props.order._id})}} disabled={missingData || oldData}></i>\r\n                        {(oldData && !missingData) && <UncontrolledTooltip placement=\"top\" target={\"duplicate-btn\" + this.props.order._id}><FormattedMessage id=\"Order.ToolTip.NoDuplicate\" /></UncontrolledTooltip>}\r\n                    </td>\r\n                    <td className=\"text-center d-none d-lg-table-cell align-middle\">\r\n                        {(!missingData && this.hasUrgent(this.props.order.products)) ? <i className={\"fa fa-check icon-big \" + urgentIconClassName + \" static\"}></i> : <i className=\"fa fa-close icon-big text-muted op-3 static\"></i>}\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr id={\"prods-\" + this.props.order._id} className=\"table-hidden\">\r\n                    <td colSpan=\"1000\" className=\"p-1\">\r\n                        {(!missingData) && <OrderProducts order={this.props.order} />}\r\n                    </td>\r\n                </tr>\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        oldProducts: state.oldProducts\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onDeleteOrder: (data) => dispatch(deleteOrder(data)),\r\n        onDuplicate: (data) => dispatch(duplicate(data)),\r\n        onGetOldProducts: (data) => dispatch(getOldProducts(data))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderRow);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {FormattedMessage, injectIntl} from 'react-intl';\r\nimport OrderRow from \"./OrderRow\";\r\nimport ConfirmationModal from '../sub/modals/ConfirmationModal';\r\nimport OrderStatus from '../../enums/OrderStatus';\r\n\r\nclass Orders extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            modal: null,\r\n            referenceFilter: null,\r\n            dateFilter: null,\r\n            statusFilter: null\r\n        };\r\n    }\r\n\r\n    openConfModal(title, content, successCallback){\r\n        this.setState({\r\n            modal: <ConfirmationModal isOpen={true}\r\n                title={title}\r\n                content={content}\r\n                successCallback={successCallback}\r\n                closeModal={() => this.closeModal()} />\r\n        });\r\n    }\r\n\r\n    closeModal(){\r\n        this.setState({modal: null});\r\n    }\r\n\r\n    sortByDateDesc(order1, order2){\r\n        if (order1.creation_date > order2.creation_date) return -1;\r\n        if (order1.creation_date < order2.creation_date) return 1;\r\n        return 0;\r\n    }\r\n\r\n    render() {\r\n        if (this.props.orders.length === 0){\r\n            return (\r\n                <React.Fragment>\r\n                    <a href=\"#/home/families\" className=\"iconed-btn nostyle-a hoverable\">\r\n                        <span className=\"mt-3 mb-3\">\r\n                            <i className=\"fa fa-plus-circle icon-big text-dark\"></i>\r\n                            <p><FormattedMessage id=\"Order.Pass.Some\" /></p>\r\n                        </span>\r\n                    </a>\r\n                    <div className=\"alert alert-secondary\" role=\"alert\">\r\n                        <FormattedMessage id=\"Empty.Orders\" />\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n\r\n        let orders = this.props.orders.sort(this.sortByDateDesc);\r\n\r\n        let ordersNode = orders.map((order) => {\r\n            if(this.state.referenceFilter && this.state.referenceFilter !== \"\"){\r\n                if(order.ref.indexOf(this.state.referenceFilter) === -1) return null;\r\n            }\r\n\r\n            if(this.state.dateFilter && this.state.dateFilter !== \"\"){\r\n                if(new Date(order.creation_date) < new Date(this.state.dateFilter)) return null;\r\n            }\r\n\r\n            if(this.state.statusFilter && this.state.statusFilter !== \"\"){\r\n                if(order.status !== Number(this.state.statusFilter)) return null;\r\n            }\r\n\r\n            return (\r\n              <OrderRow\r\n                  key={order._id}\r\n                  order={order}\r\n                  products={this.props.products}\r\n                  openConfModal={(title, content, successCallback) => this.openConfModal(title, content, successCallback)}\r\n                   />\r\n            );\r\n        });\r\n\r\n        var statusNode = Object.values(OrderStatus).map(option => {\r\n            return <option key={option} value={option}>{this.props.intl.formatMessage({ id: \"Order.Status.\" + option })}</option>\r\n        });\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.modal}\r\n\r\n                <a href=\"#/home/families\" className=\"iconed-btn nostyle-a hoverable\">\r\n                    <span className=\"mt-3 mb-3\">\r\n                        <i className=\"fa fa-plus-circle icon-big text-dark\"></i>\r\n                        <p><FormattedMessage id=\"Order.Pass.Some\" /></p>\r\n                    </span>\r\n                </a>\r\n\r\n                <table className=\"table table-striped-3 table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"d-none d-md-table-cell\"><FormattedMessage id=\"Reference\" /></th>\r\n                            <th><FormattedMessage id=\"Date\" /></th>\r\n                            <th className=\"d-none d-lg-table-cell\"><FormattedMessage id=\"Total\" /> <FormattedMessage id=\"Excl.Tax\" /></th>\r\n                            <th><FormattedMessage id=\"Total\" /> <FormattedMessage id=\"Incl.Tax\" /></th>\r\n                            <th><FormattedMessage id=\"Order.Status\" /></th>\r\n                            <th><FormattedMessage id=\"Actions\" /></th>\r\n                            <th className=\"d-none d-lg-table-cell\"><FormattedMessage id=\"Urgent\" /></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                        <tr className=\"d-none d-xl-table-row filter-row\">\r\n                            <td className=\"d-none d-md-table-cell\"><input className=\"form-control\" type=\"search\" onChange={(e) => {this.setState({referenceFilter: e.target.value})}} /></td>\r\n                            <td className=\"d-none d-md-table-cell\"><input className=\"form-control\" type=\"date\" onChange={(e) => {this.setState({dateFilter: e.target.value})}} /></td>\r\n                            <td className=\"d-none d-lg-table-cell\"></td>\r\n                            <td className=\"d-none d-md-table-cell\"></td>\r\n                            <td>\r\n                                <select id=\"order-filter-status\" className=\"form-control w-100\" onChange={(e) => {this.setState({statusFilter: e.target.value})}}>\r\n                                    <option value=\"\">{this.props.intl.formatMessage({id: \"All\"})}</option>\r\n                                    {statusNode}\r\n                                </select>\r\n                            </td>\r\n                            <td></td>\r\n                            <td className=\"d-none d-lg-table-cell\"></td>\r\n                        </tr>\r\n\r\n                        {ordersNode}\r\n\r\n                    </tbody>\r\n                </table>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.i18n.lang,\r\n        orders: state.orders,\r\n        products: state.products,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n       //\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(Orders));\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PDFUtil from \"../../../util/PDFUtil\";\r\nimport DateUtil from \"../../../util/DateUtil\";\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport OrderProducts from \"../OrderProducts\";\r\nimport { UncontrolledTooltip } from 'reactstrap';\r\n\r\nimport OrderPDF from \"../OrderPDF\";\r\nimport PDFViewer from \"../../pdf/PDFViewer\";\r\nimport OrderStatus from '../../../enums/OrderStatus';\r\nimport ProductsTotalUtil from '../../../util/ProductsTotalUtil';\r\n\r\nimport { deleteOrderAdmin, updateAdmin, duplicateAdmin } from '../../../actions/orders/orders';\r\nimport { getOldProducts } from '../../../actions/products/oldProducts';\r\n\r\nimport \"../../../css/orders/orders.css\";\r\n\r\nclass OrderRowAdmin extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            collapsed: false,\r\n            displayPDF: false,\r\n            disableExport: false,\r\n        };\r\n\r\n        // List of products we have already attempted to fetch from BE\r\n        this.alreadySent = {};\r\n\r\n        // Enabled to know if the order contains outdated products or not\r\n        this.outdated = false;\r\n    }\r\n\r\n    collapse(elemId) {\r\n        var elem = document.getElementById(elemId);\r\n\r\n        if (elem.classList.contains(\"table-hidden\")) {\r\n            this.setState({ collapsed: true });\r\n            elem.classList.remove(\"table-hidden\");\r\n            elem.classList.add(\"table-visible-blue\");\r\n        } else {\r\n            this.setState({ collapsed: false });\r\n            elem.classList.remove(\"table-visible-blue\");\r\n            elem.classList.add(\"table-hidden\");\r\n        }\r\n    }\r\n\r\n    deleteOrderAdmin(e, orderId) {\r\n        var data = { orderId: orderId };\r\n        this.props.onDeleteOrderAdmin(data);\r\n    }\r\n\r\n    togglePDF(pdfElemId, pdfFileName) {\r\n        if(this.state.disableExport) return;\r\n        \r\n        if(process.env.REACT_APP_PDF_OVERVIEW === \"true\"){\r\n            // Possibility n°1 (dev env) : display preview of PDF (without header, footer, pages etc.)\r\n            this.setState({displayPDF: !this.state.displayPDF});\r\n        }else{\r\n            // Possibility n°2 (prod env) : directly save to PDF\r\n            this.setState({disableExport: true});\r\n            var successCallback = () => this.setState({disableExport: false});\r\n            PDFUtil.toPDF(pdfElemId, pdfFileName, successCallback);\r\n        }\r\n    }\r\n\r\n    updateStatus(e, order) {\r\n        var data = {\r\n            updatedValue: e.target.value,\r\n            updatedField: \"status\",\r\n            orderId: order._id\r\n        };\r\n\r\n        this.props.onUpdateAdmin(data);\r\n    }\r\n\r\n    render() {\r\n        if(!this.props.clientName) return null;\r\n\r\n        var order = this.props.order;\r\n\r\n        // Use productsTotalUtil to get all totals & also automatically fetch missing products\r\n        var productsTotalUtil = new ProductsTotalUtil(order.products, \r\n            this.props.products, \r\n            this.props.oldProducts, \r\n            (data) => this.props.onGetOldProducts(data));\r\n\r\n        var missingData = productsTotalUtil.containsMissingProducts;\r\n        var oldData = productsTotalUtil.containsOldProducts;\r\n\r\n        // 'Delete order' modal setup\r\n        var modalTitle = <FormattedMessage id=\"Confirm\" />;\r\n        var modalContent = <FormattedMessage id=\"Order.Remove.Confirmation\" />;\r\n        var successCallback = (e) => this.deleteOrderAdmin(e, this.props.order._id);\r\n\r\n        let pdfElemId = \"order-pdf-\" + this.props.order._id;\r\n        let pdfFileName = \"order-\" + this.props.order._id;\r\n        let pdfOrder = null;\r\n        \r\n        if(!missingData){\r\n            pdfOrder = (\r\n                <OrderPDF\r\n                    id={pdfElemId}\r\n                    order={this.props.order}\r\n                    products={this.props.products}\r\n                    oldProducts={this.props.oldProducts} />\r\n                );\r\n        }\r\n\r\n        var statusNode = Object.values(OrderStatus).map(option => {\r\n            return <option key={option} value={option}>{this.props.intl.formatMessage({ id: \"Order.Status.\" + option })}</option>\r\n        });\r\n\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <tr key={this.props.order._id} className={(missingData) ? \"font-italic text-muted break-word\" : \"break-word\"}>\r\n                    <td className=\"align-middle\">\r\n                        {this.props.clientName}\r\n                        <div className=\"d-md-none text-muted mt-2\">\r\n                            <FormattedMessage id=\"Total\" /> <FormattedMessage id=\"Incl.Tax\" />&nbsp;: {productsTotalUtil.totalTtc}€\r\n                        </div>\r\n                    </td>\r\n                    <td className=\"d-none d-md-table-cell mw-200 align-middle\">\r\n                        {this.props.order.ref}\r\n                        {(this.props.order.comment && this.props.comment !== \"\") && <i className=\"fa fa-commenting-o icon-big float-right\" disabled></i>}\r\n                    </td>\r\n                    <td className=\"d-none d-md-table-cell align-middle\">{DateUtil.toDateWithHour(this.props.order.creation_date)}</td>\r\n                    <td className=\"d-none d-lg-table-cell align-middle\">{productsTotalUtil.totalHt}€</td>\r\n                    <td className=\"d-none d-md-table-cell align-middle\">{productsTotalUtil.totalTtc}€</td>\r\n                    <td>\r\n                        <select className=\"form-control\" onChange={(e) => this.updateStatus(e, this.props.order)} defaultValue={this.props.order.status} disabled={missingData}>\r\n                            {statusNode}\r\n                        </select>\r\n                    </td>\r\n                    <td className=\"text-center align-middle\">\r\n                        <i className={\"fa fa-sort-down icon-big \" + ((this.state.collapsed) ? \"flip-ver\" : \"\")}  onClick={(e) => {if(!missingData) this.collapse(\"prods-\" + this.props.order._id)}} disabled={missingData}></i>\r\n                        <i className=\"fa fa-trash icon-big\" onClick={(e) => {if(!missingData) this.props.openConfModal(modalTitle, modalContent, successCallback)}} disabled={missingData}></i>\r\n                        <i className=\"fa fa-cut icon-big\" onClick={(e) => {if(!missingData) this.props.openSplitModal(order)}} disabled={missingData}></i>\r\n                        <i className=\"fa fa-file-pdf-o icon-big\" onClick={(e) => {if(!missingData) this.togglePDF(pdfElemId, pdfFileName)}} disabled={this.state.disableExport || missingData}></i>\r\n                        {<PDFViewer open={this.state.displayPDF} toggle={(pdfElemId, pdfFileName) => {if(!missingData) this.togglePDF(pdfElemId, pdfFileName)}} template={pdfOrder} fileName={pdfFileName} />}\r\n                        <i id={\"duplicate-btn\" + this.props.order._id} className=\"fa fa-files-o icon-big\" onClick={(e) => {if(!missingData && !oldData) this.props.onDuplicateAdmin({orderId: order._id})}} disabled={missingData || oldData}></i>\r\n                        {(oldData && !missingData) && <UncontrolledTooltip placement=\"top\" target={\"duplicate-btn\" + this.props.order._id}><FormattedMessage id=\"Order.ToolTip.NoDuplicate\" /></UncontrolledTooltip>}\r\n                    </td>\r\n                    <td className=\"text-center d-none d-lg-table-cell align-middle\">\r\n                        {(!missingData && productsTotalUtil.urgent) ? <i className={\"fa fa-check icon-big text-info static\"}></i> : <i className=\"fa fa-close icon-big text-muted op-3 static\"></i>}\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr id={\"prods-\" + this.props.order._id} className=\"table-hidden\">\r\n                    <td colSpan=\"1000\" className=\"p-1\">\r\n                        {(!missingData) && <OrderProducts order={this.props.order} />}\r\n                    </td>\r\n                </tr>\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.i18n.lang,\r\n        user: state.user,\r\n        oldProducts: state.oldProducts\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onDeleteOrderAdmin: (data) => dispatch(deleteOrderAdmin(data)),\r\n        onUpdateAdmin: (data) => dispatch(updateAdmin(data)),\r\n        onDuplicateAdmin: (data) => dispatch(duplicateAdmin(data)),\r\n        onGetOldProducts: (data) => dispatch(getOldProducts(data))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(OrderRowAdmin));\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PriceUtil from \"../../../util/PriceUtil\";\r\n\r\nclass OrderProductRowAdmin extends React.Component {\r\n\r\n    constructor(props){\r\n      super(props);\r\n\r\n      this.state = {\r\n        checked: false,\r\n      };\r\n    }\r\n\r\n    updateDisponibility(e){\r\n        this.setState({checked: !this.state.checked}, this.props.onClickCallback);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <tr key={this.props.key} id={\"product-\" + this.props.product._id}>\r\n              <td className=\"d-none d-lg-table-cell\">{this.props.product.ref}</td>\r\n              <td>{this.props.product.designation}</td>\r\n              <td>{this.props.quantity}</td>\r\n              <td className=\"d-none d-lg-table-cell\">{PriceUtil.priceHt(this.props.product)}€</td>\r\n              <td className=\"d-none d-lg-table-cell\">{PriceUtil.priceHt(this.props.product, this.props.quantity)}€</td>\r\n              <td className=\"text-center d-none d-lg-table-cell align-middle\">\r\n                  {(this.props.urgent) ? <i className={\"fa fa-check icon-big text-info static\"}></i> : <i className=\"fa fa-close icon-big text-muted op-3 static\"></i>}\r\n              </td>\r\n              <td className=\"text-center card-body\">\r\n                  <div className=\"custom-control custom-switch mx-auto switch-success\" onClick={(e) => this.updateDisponibility(e)}>\r\n                      <input onChange={(e) => this.updateDisponibility(e)}\r\n                          type=\"checkbox\"\r\n                          className={\"custom-control-input switch-bg-blue disponibility\"}\r\n                          id={\"switch-av-\" + this.props.order._id + this.props.product._id }\r\n                          value={this.props.product._id}\r\n                          checked={this.state.checked}/>\r\n                       <label className=\"custom-control-label\" htmlFor={\"switch-av-\" + this.props.order._id + this.props.product._id}></label>\r\n                  </div>\r\n              </td>\r\n            </tr>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        //\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderProductRowAdmin);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PriceUtil from \"../../../util/PriceUtil\";\r\nimport { FormattedMessage } from 'react-intl';\r\nimport OrderProductRowAdmin from \"./OrderProductRowAdmin\";\r\n\r\nclass OrderProductsAdmin extends React.Component {\r\n\r\n    getProduct(productId) {\r\n        // Product from regular mercurial\r\n        for (let product of this.props.products) {\r\n            if (product._id === productId) return product;\r\n        }\r\n\r\n        // Product from outdated mercurial\r\n        for(let oldProduct of this.props.oldProducts){\r\n            if (oldProduct._id === productId) return oldProduct;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.products.length === 0) return null;\r\n\r\n        // Helper class for prices calculations\r\n        var priceUtil = new PriceUtil();\r\n\r\n        let key = 0;\r\n        let productNode = this.props.order.products.map((p) => {\r\n            var product = this.getProduct(p.id_product);\r\n            priceUtil.add(product, p.quantity);\r\n            return (\r\n                <OrderProductRowAdmin\r\n                    key={++key + \"-\" + product._id}\r\n                    order={this.props.order}\r\n                    product={product}\r\n                    quantity={p.quantity}\r\n                    urgent={p.urgent}\r\n                    onClickCallback={this.props.onClickCallback}\r\n                    />\r\n            );\r\n        });\r\n\r\n        return (\r\n            <table id=\"bootstrap-data-table-export\" className=\"table table-striped table-bordered m-0\">\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"d-none d-lg-table-cell\"><FormattedMessage id=\"Reference\" /></th>\r\n                        <th><FormattedMessage id=\"Designation\" /></th>\r\n                        <th><FormattedMessage id=\"Quantity\" /></th>\r\n                        <th className=\"d-none d-lg-table-cell\"><FormattedMessage id=\"Unit.Price.Excl.Tax\" /></th>\r\n                        <th className=\"d-none d-lg-table-cell\"><FormattedMessage id=\"Total.Excl.Tax\" /></th>\r\n                        <th className=\"d-none d-lg-table-cell\"><FormattedMessage id=\"Urgent\" /></th>\r\n                        <th><FormattedMessage id=\"Actions\" /></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {productNode}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.i18n.lang,\r\n        products: state.products,\r\n        oldProducts: state.oldProducts,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        //\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderProductsAdmin);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport OrderProductsAdmin from \"./OrderProductsAdmin\";\r\nimport { splitOrderAdmin } from \"../../../actions/orders/orders\";\r\n\r\n\r\nimport \"../../../css/cart/cart.css\";\r\n\r\nclass SplitOrderModalAdmin extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            disabled: true,\r\n        };\r\n    }\r\n\r\n    close() {\r\n        this.props.closeConfModal();\r\n    }\r\n\r\n    getSplittedProducts() {\r\n        var productsAvailable = [];\r\n        var productsUnavailable = [];\r\n\r\n        var inputs = document.getElementsByClassName(\"disponibility\");\r\n        for (var product of this.props.order.products) {\r\n            for (var input of inputs) {\r\n                if (input.checked && input.value === product.id_product) {\r\n                    productsAvailable.push(product);\r\n                }\r\n                if (!input.checked && input.value === product.id_product) {\r\n                    productsUnavailable.push(product);\r\n                }\r\n            }\r\n        }\r\n\r\n        return {\r\n            productsAvailable: productsAvailable,\r\n            productsUnavailable: productsUnavailable\r\n        };\r\n    }\r\n\r\n    checkProductsDisponibility() {\r\n        var data = this.getSplittedProducts();\r\n        this.setState({ disabled: (data.productsAvailable.length === 0 || data.productsUnavailable.length === 0) });\r\n    }\r\n\r\n    split(e, order) {\r\n        var data = this.getSplittedProducts();\r\n        data.orderId = order._id;\r\n\r\n        this.props.onSplitOrderAdmin(data);\r\n        this.close();\r\n    }\r\n\r\n    stopEvent(e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"modal-bg show\" onClick={() => this.close()}>\r\n                <div className=\"modal fade show\">\r\n                    <div className=\"modal-dialog modal-lg\" role=\"document\" onClick={(e) => this.stopEvent(e)}>\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\"><span> <FormattedMessage id=\"Order\" /> {this.props.order.ref} </span></h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={() => this.close()}>\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <div className=\"row text-center\">\r\n                                    <div className=\"col-12 col-sm-6 p-3\">\r\n                                        <span className=\"d-inline-block mr-3\"><FormattedMessage id=\"Product.Available\" /></span>\r\n                                        <div className=\"custom-control custom-switch mx-auto d-inline-block\">\r\n                                            <input onChange={(e) => this.stopEvent(e)}\r\n                                                type=\"checkbox\"\r\n                                                className={\"custom-control-input switch-bg-blue\"}\r\n                                                id={\"switch-av\"}\r\n                                                checked={true} />\r\n                                            <label className=\"custom-control-label cursor-pointer\" htmlFor={\"switch-av\"}></label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12 col-sm-6 p-3\">\r\n                                        <span className=\"d-inline-block mr-3\"><FormattedMessage id=\"Product.Unavailable\" /></span>\r\n                                        <div className=\"custom-control custom-switch mx-auto d-inline-block\">\r\n                                            <input onChange={(e) => this.stopEvent(e)}\r\n                                                type=\"checkbox\"\r\n                                                className={\"custom-control-input switch-bg-blue\"}\r\n                                                id={\"switch-av-f\"}\r\n                                                checked={false} />\r\n                                            <label className=\"custom-control-label cursor-pointer\" htmlFor={\"switch-av-f\"}></label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <OrderProductsAdmin order={this.props.order} onClickCallback={() => this.checkProductsDisponibility()} />\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={() => this.close()}><FormattedMessage id=\"Cancel\" /></button>\r\n                                <button type=\"button\" className=\"btn btn-primary\" onClick={(e) => this.split(e, this.props.order)} disabled={this.state.disabled}><FormattedMessage id=\"Split\" /></button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.i18n.lang,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSplitOrderAdmin: (data) => dispatch(splitOrderAdmin(data))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SplitOrderModalAdmin);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport OrderRowAdmin from \"./OrderRowAdmin\";\r\nimport ConfirmationModal from '../../sub/modals/ConfirmationModal';\r\nimport SplitModal from './SplitOrderModalAdmin';\r\nimport OrderStatus from '../../../enums/OrderStatus';\r\n\r\nclass OrdersAdmin extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            modal: null,\r\n            clientFilter: null,\r\n            referenceFilter: null,\r\n            dateFilter: null,\r\n            statusFilter: null\r\n        };\r\n    }\r\n\r\n    openSplitModal(order) {\r\n        this.setState({\r\n            modal: <SplitModal isOpen={true}\r\n                order={order}\r\n                closeConfModal={() => this.closeModal()} />\r\n        });\r\n    }\r\n\r\n    openConfModal(title, content, successCallback) {\r\n        this.setState({\r\n            modal: <ConfirmationModal isOpen={true}\r\n                title={title}\r\n                content={content}\r\n                successCallback={successCallback}\r\n                closeModal={() => this.closeModal()} />\r\n        });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ modal: null });\r\n    }\r\n\r\n    sortByDateDesc(order1, order2){\r\n        if (order1.creation_date > order2.creation_date)\r\n            return -1;\r\n        if (order1.creation_date < order2.creation_date)\r\n            return 1;\r\n        return 0;\r\n    }\r\n\r\n    render() {\r\n        if(this.props.products.length === 0) return null;\r\n\r\n        if (this.props.orders.length === 0){\r\n            return (\r\n                <React.Fragment>\r\n                    <a href=\"#/home/families\" className=\"iconed-btn nostyle-a hoverable\">\r\n                        <span className=\"mt-3 mb-3\">\r\n                            <i className=\"fa fa-plus-circle icon-big text-dark\"></i>\r\n                            <p><FormattedMessage id=\"Order.Pass.Some\" /></p>\r\n                        </span>\r\n                    </a>\r\n                    <div className=\"alert alert-secondary\" role=\"alert\">\r\n                        <FormattedMessage id=\"Empty.Orders\" />\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n\r\n        let orders = this.props.orders.sort(this.sortByDateDesc);\r\n\r\n        let ordersNode = orders.map((order) => {\r\n            var clientName;\r\n            var clientId;\r\n            for (var c of this.props.clients) {\r\n                if (c._id === order.id_client){\r\n                    clientName = c.username;\r\n                    clientId = c._id;\r\n                }\r\n            }\r\n\r\n            if(this.state.clientFilter && this.state.clientFilter !== \"\"){\r\n                if(clientId !== this.state.clientFilter) return null;\r\n            }\r\n\r\n            if(this.state.referenceFilter && this.state.referenceFilter !== \"\"){\r\n                if(order.ref.indexOf(this.state.referenceFilter) === -1) return null;\r\n            }\r\n\r\n            if(this.state.dateFilter && this.state.dateFilter !== \"\"){\r\n                if(new Date(order.creation_date) < new Date(this.state.dateFilter)) return null;\r\n            }\r\n\r\n            if(this.state.statusFilter && this.state.statusFilter !== \"\"){\r\n                if(order.status !== Number(this.state.statusFilter)) return null;\r\n            }\r\n\r\n            return (\r\n                <OrderRowAdmin\r\n                    key={order._id}\r\n                    order={order}\r\n                    products={this.props.products}\r\n                    clientName={clientName}\r\n                    openConfModal={(title, content, successCallback) => this.openConfModal(title, content, successCallback)}\r\n                    openSplitModal={(order) => this.openSplitModal(order)}\r\n                />\r\n            );\r\n        });\r\n\r\n        var clientsNode = this.props.clients.map(client => {\r\n            return <option key={client._id} value={client._id}>{client.username}</option>\r\n        });\r\n\r\n        var statusNode = Object.values(OrderStatus).map(option => {\r\n            return <option key={option} value={option}>{this.props.intl.formatMessage({ id: \"Order.Status.\" + option })}</option>\r\n        });\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.modal}\r\n\r\n                <a href=\"#/home/families\" className=\"iconed-btn nostyle-a hoverable\">\r\n                    <span className=\"mt-3 mb-3\">\r\n                        <i className=\"fa fa-plus-circle icon-big text-dark\"></i>\r\n                        <p><FormattedMessage id=\"Order.Pass.Some\" /></p>\r\n                    </span>\r\n                </a>\r\n\r\n                <table className=\"table table-striped-3 table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th><FormattedMessage id=\"Client\" /></th>\r\n                            <th className=\"d-none d-md-table-cell\"><FormattedMessage id=\"Reference\" /></th>\r\n                            <th className=\"d-none d-md-table-cell\"><FormattedMessage id=\"Date\" /></th>\r\n                            <th className=\"d-none d-lg-table-cell\"><FormattedMessage id=\"Total\" /> <FormattedMessage id=\"Excl.Tax\" /></th>\r\n                            <th className=\"d-none d-md-table-cell\"><FormattedMessage id=\"Total\" /> <FormattedMessage id=\"Incl.Tax\" /></th>\r\n                            <th><FormattedMessage id=\"Order.Status\" /></th>\r\n                            <th><FormattedMessage id=\"Actions\" /></th>\r\n                            <th className=\"d-none d-lg-table-cell\"><FormattedMessage id=\"Urgent\" /></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                        <tr className=\"d-none d-xl-table-row filter-row\">\r\n                            <td>\r\n                                <select id=\"order-filter-clientId\" className=\"form-control w-100\" onChange={(e) => {this.setState({clientFilter: e.target.value})}}>\r\n                                    <option value=\"\">{this.props.intl.formatMessage({id: \"All\"})}</option>\r\n                                    {clientsNode}\r\n                                </select>\r\n                            </td>\r\n                            <td className=\"d-none d-md-table-cell\"><input className=\"form-control\" type=\"search\" onChange={(e) => {this.setState({referenceFilter: e.target.value})}} /></td>\r\n                            <td className=\"d-none d-md-table-cell\"><input className=\"form-control\" type=\"date\" onChange={(e) => {this.setState({dateFilter: e.target.value})}} /></td>\r\n                            <td className=\"d-none d-lg-table-cell\"></td>\r\n                            <td className=\"d-none d-md-table-cell\"></td>\r\n                            <td>\r\n                                <select id=\"order-filter-status\" className=\"form-control w-100\" onChange={(e) => {this.setState({statusFilter: e.target.value})}}>\r\n                                    <option value=\"\">{this.props.intl.formatMessage({id: \"All\"})}</option>\r\n                                    {statusNode}\r\n                                </select>\r\n                            </td>\r\n                            <td></td>\r\n                            <td className=\"d-none d-lg-table-cell\"></td>\r\n                        </tr>\r\n\r\n                        {ordersNode}\r\n\r\n                    </tbody>\r\n                </table>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.i18n.lang,\r\n        orders: state.orders,\r\n        clients: state.clients,\r\n        products: state.products,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        //\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(OrdersAdmin));\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nimport \"../../../../css/cart/cart.css\";\r\n\r\nclass ShippingModalAdmin extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if (this.props.index === -1) {\r\n            let max = (this.props.shippingCosts.length > 0) ? this.props.shippingCosts[this.props.shippingCosts.length - 1].max : 0;\r\n\r\n            this.state = {\r\n                min: max,\r\n                max: max + 1,\r\n                cost: 0,\r\n                disabledInputMax: true,\r\n                defaultChecked: true,\r\n                alert: null\r\n            };\r\n        } else {\r\n            var hasMax = (this.props.shippingCosts[this.props.index].max);\r\n\r\n            this.state = {\r\n                min: this.props.shippingCosts[this.props.index].min,\r\n                max: this.props.shippingCosts[this.props.index].max,\r\n                cost: this.props.shippingCosts[this.props.index].cost,\r\n                disabledInputMax: !hasMax,\r\n                defaultChecked: !hasMax,\r\n                alert: null\r\n            };\r\n        }\r\n    }\r\n\r\n    close() {\r\n        this.props.closeModal();\r\n    }\r\n\r\n    onComplete() {\r\n        if(this.state.min >= this.state.max && !this.state.disabledInputMax) {\r\n            this.setState({ alert: <FormattedMessage id=\"Min.Greater.Max\" />});\r\n            return false;\r\n        }\r\n\r\n        let shippingCosts = this.props.shippingCosts || [];\r\n\r\n        let shippingCost = {\r\n            min: this.state.min,\r\n            max: this.state.max,\r\n            cost: this.state.cost || 0\r\n        };\r\n\r\n        if (this.state.disabledInputMax) shippingCost.max = \"\";\r\n\r\n        // Costs exist, modify appropriate line\r\n        if (this.props.index !== -1) shippingCosts[this.props.index] = shippingCost;\r\n        // Costs do not exist, add a new line\r\n        else shippingCosts.push(shippingCost);\r\n\r\n        this.props.successCallback(shippingCosts);\r\n\r\n        // This is an update, so don't close the window\r\n        if(this.props.index === -1) this.close();\r\n    }\r\n\r\n    stopEvent(e) {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    onChangeMin(min) {\r\n        this.setState({ min: min });\r\n    }\r\n\r\n    onChangeMax(max) {\r\n        this.setState({ max: max });\r\n    }\r\n\r\n    onChangeCost(cost) {\r\n        this.setState({ cost: cost });\r\n    }\r\n\r\n    onClickRadioMax(e) {\r\n        if (this.state.disabledInputMax) this.setState({ max: document.getElementById(\"maxShippingCost\").value, disabledInputMax: false });\r\n        else this.setState({ disabledInputMax: true });\r\n    }\r\n\r\n    render() {\r\n        var buttonText = <FormattedMessage id=\"Create\" />;\r\n        if (this.props.shippingCost) buttonText = <FormattedMessage id=\"Modify\" />;\r\n\r\n        return (\r\n            <div className=\"modal-bg show\" onClick={() => this.close()}>\r\n                <div className=\"modal fade show\">\r\n                    <div className=\"modal-dialog\" role=\"document\" onClick={(e) => this.stopEvent(e)}>\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\"><FormattedMessage id=\"Shipping.Cost\" /></h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={() => this.close()}>\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <div className=\"form-group row\">\r\n                                    <div className=\"col-10 m-auto\">\r\n                                        <label htmlFor=\"Min\" className=\"col-form-label\"><FormattedMessage id=\"Minimum\" /></label>\r\n                                        <input type=\"number\" disabled={true}\r\n                                        onChange={(e) => this.onChangeMin(e.target.value)}\r\n                                        className=\"form-control\" min=\"0\" value={this.state.min} id=\"minShippingCost\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"col-10 m-auto\">\r\n                                        <label htmlFor=\"Max\" className=\"col-form-label\"><FormattedMessage id=\"Maximum\" /></label><br/>\r\n                                        <div className=\"m-auto align-items-center row\">\r\n                                            <div className=\"row m-0 align-items-center col-8 p-0\">\r\n                                                <input className=\"btnRadioMax\" type=\"radio\" name=\"max\"\r\n                                                 onBlur={() => (this.props.index !== -1) && this.onComplete()}\r\n                                                 onChange={(e) => this.onClickRadioMax(e)}\r\n                                                 value=\"number\" defaultChecked={!this.state.defaultChecked} />\r\n                                                <input type=\"number\"\r\n                                                 onBlur={() => (this.props.index !== -1) && this.onComplete()}\r\n                                                 onChange={(e) => this.onChangeMax(e.target.value)}\r\n                                                 disabled={this.state.disabledInputMax} className=\"form-control ml-2 col-10\" min=\"0\" value={this.state.max || this.state.min + 1} id=\"maxShippingCost\" />\r\n                                            </div>\r\n                                            <div className=\"row m-0 align-items-center col-3 p-0\">\r\n                                                <input className=\"btnRadioMax\" type=\"radio\" name=\"max\"\r\n                                                 onBlur={() => (this.props.index !== -1) && this.onComplete()}\r\n                                                 onChange={(e) => this.onClickRadioMax(e)}\r\n                                                 defaultChecked={this.state.defaultChecked} value=\"infinity\" />\r\n                                                <h4 className=\"m-0 ml-2\">&infin;</h4>\r\n                                            </div>\r\n                                        </div>\r\n                                        <small className='ml-2 col-8 row text-danger'>{this.state.alert}</small>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group row\">\r\n                                    <div className=\"col-10 m-auto\">\r\n                                        <label htmlFor=\"Cost\" className=\"col-form-label\"><FormattedMessage id=\"Shipping.Cost.Excl.Tax\" /></label>\r\n                                        <input type=\"number\"\r\n                                        onBlur={() => (this.props.index !== -1) && this.onComplete()}\r\n                                        onChange={(e) => this.onChangeCost(e.target.value)}\r\n                                        className=\"form-control\" min=\"0\" value={this.state.cost} id=\"cost\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {(this.props.index === -1) &&\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={() => this.close()}><FormattedMessage id=\"Cancel\" /></button>\r\n                                    <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.onComplete()}>{buttonText}</button>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.user.lang\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        //\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShippingModalAdmin);\r\n","import APIUrl from \"../../APIUrl\";\r\nimport axios from 'axios';\r\n\r\nexport const GET_ESTABLISHMENT_SETTINGS = \"GET_ESTABLISHMENT_SETTINGS\";\r\n\r\nfunction getEstablishmentSettingsAction(establishmentSettings){return {type: GET_ESTABLISHMENT_SETTINGS, establishmentSettings: establishmentSettings}};\r\n\r\nexport const getEstablishmentSettings = function(successCallback){\r\n    return function(dispatch){\r\n        return axios.get(APIUrl.getEstablishmentSettings)\r\n            .then(function(response){\r\n                dispatch(getEstablishmentSettingsAction(response.data));\r\n                if(successCallback) successCallback();\r\n            })\r\n            .catch(function(err){\r\n                throw err;\r\n            });\r\n    };\r\n};\r\n\r\nexport const updateEstablishmentSettings = function(data, successCallback){\r\n    return function(dispatch){\r\n        return axios.post(APIUrl.updateEstablishmentSettings, data)\r\n            .then(function(response){\r\n                dispatch(getEstablishmentSettings(successCallback));\r\n            })\r\n            .catch(function(err){\r\n                throw err;\r\n            });\r\n    };\r\n};\r\n","import APIUrl from \"../../../../APIUrl\";\r\nimport axios from 'axios';\r\nimport { getEstablishmentSettings } from \"../../../establishments/establishmentSettings\";\r\n\r\nexport const GET_ADMIN_ORDERS_SETTINGS = \"GET_ADMIN_ORDERS_SETTINGS\";\r\n\r\nfunction getOrdersSettingsAdminAction(ordersSettingsAdmin){return {type: GET_ADMIN_ORDERS_SETTINGS, ordersSettingsAdmin: ordersSettingsAdmin}};\r\n\r\nexport const getOrdersSettingsAdmin = function(){\r\n    return function(dispatch){\r\n        return axios.get(APIUrl.getOrdersSettingsAdmin)\r\n            .then(function(response){\r\n                dispatch(getOrdersSettingsAdminAction(response.data));\r\n            })\r\n            .catch(function(err){\r\n                throw(err);\r\n            });\r\n    };\r\n};\r\n\r\nexport const updateOrderSettingAdmin = function(data){\r\n    return function(dispatch){\r\n        return axios.post(APIUrl.updateOrderSettingAdmin, data)\r\n            .then(function(response){\r\n                dispatch(getOrdersSettingsAdmin());\r\n                dispatch(getEstablishmentSettings())\r\n            })\r\n            .catch(function(err){\r\n                throw(err);\r\n            });\r\n    };\r\n};\r\n\r\nexport const updateShippingCostsSetting = function(data){\r\n    return function(dispatch){\r\n        return axios.post(APIUrl.updateShippingCostsSetting, data)\r\n            .then(function(response){\r\n                dispatch(getOrdersSettingsAdmin());\r\n            })\r\n            .catch(function(err){\r\n                throw(err);\r\n            });\r\n    };\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { updateShippingCostsSetting } from \"../../../../actions/settings/ordersSettings/admin/ordersSettings\";\r\n\r\nclass ShippingCostSettingAdminRow extends React.Component {\r\n\r\n  updateShippingCostsSetting(shippingCosts) {\r\n    // Send to BE\r\n    this.props.onUpdateShippingCostsSetting({shippingCosts: shippingCosts});\r\n  }\r\n\r\n  isLast(){\r\n    return (this.props.index === this.props.shippingCosts.length - 1);\r\n  }\r\n\r\n  openShippingModal(index, successCallbackUpdate){\r\n      if(!this.isLast()) return;\r\n\r\n      this.props.openShippingModal(index, successCallbackUpdate);\r\n  }\r\n\r\n  openConfModal(modalTitle, modalContent, successCallbackDelete){\r\n     if(!this.isLast()) return;\r\n\r\n      this.props.openConfModal(modalTitle, modalContent, successCallbackDelete);\r\n  }\r\n\r\n  splice(array, index){\r\n    array.splice(index, 1);\r\n    return array;\r\n  }\r\n\r\n  render() {\r\n    // 'Delete shipping setting' modal setup\r\n    var modalTitle = <FormattedMessage id=\"Confirm\" />;\r\n    var modalContent = <FormattedMessage id=\"Remove.Row.Confirmation\" />;\r\n    var successCallbackDelete = () => this.updateShippingCostsSetting(this.splice(this.props.shippingCosts, this.props.index));\r\n\r\n    // Shipping modal set up\r\n    var successCallbackUpdate = (shippingCosts) => this.updateShippingCostsSetting(shippingCosts);\r\n\r\n    var max = (!this.props.shippingCost.max) ? <FormattedMessage id=\"Infinity\" /> : <span>{this.props.shippingCost.max}</span>;\r\n\r\n    return (\r\n      <tr key={this.props.key}>\r\n        <td>\r\n          <span className=\"d-sm-none\">{this.props.shippingCost.min} / {max}</span>\r\n          <span className=\"d-none d-sm-table-cell\">{this.props.shippingCost.min}</span>\r\n\r\n        </td>\r\n        <td className=\"d-none d-sm-table-cell\">{max}</td>\r\n        <td>{this.props.shippingCost.cost}</td>\r\n        <td className=\"text-center\">\r\n          <i className=\"fa fa-edit icon-big\" onClick={(index, successCallback) => this.openShippingModal(this.props.index, successCallbackUpdate)} disabled={!this.isLast()}></i>\r\n          <i className=\"fa fa-trash icon-big\" onClick={(e) => this.openConfModal(modalTitle, modalContent, successCallbackDelete)} disabled={!this.isLast()}></i>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    lang: state.user.lang,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onUpdateShippingCostsSetting: (data) => dispatch(updateShippingCostsSetting(data))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShippingCostSettingAdminRow);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage, FormattedHTMLMessage } from 'react-intl';\r\nimport ShippingCostSettingAdminRow from \"./ShippingCostSettingAdminRow\";\r\nimport ShippingModalAdmin from './ShippingModalAdmin';\r\nimport ConfirmationModal from '../../../sub/modals/ConfirmationModal';\r\n\r\nclass ShippingCostSettingAdmin extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            modal: null,\r\n        };\r\n    }\r\n\r\n    openShippingModal(index, successCallback) {\r\n        this.setState({\r\n            modal: <ShippingModalAdmin\r\n                isOpen={true}\r\n                index={index}\r\n                shippingCosts={this.props.ordersSettingsAdmin.shipping_costs}\r\n                successCallback={successCallback}\r\n                closeModal={() => this.closeModal()} />\r\n        });\r\n    }\r\n\r\n    openConfModal(title, content, successCallback){\r\n        this.setState({\r\n            modal: <ConfirmationModal isOpen={true}\r\n                title={title}\r\n                content={content}\r\n                successCallback={successCallback}\r\n                closeModal={() => this.closeModal()} />\r\n        });\r\n    }\r\n\r\n    closeModal(){\r\n        this.setState({modal: null});\r\n    }\r\n\r\n    render() {\r\n        var index=-1;\r\n        let shippingCostNode = this.props.ordersSettingsAdmin.shipping_costs.map((shippingCost) => {\r\n            return <ShippingCostSettingAdminRow\r\n                        index={++index}\r\n                        key={index}\r\n                        shippingCost={shippingCost}\r\n                        shippingCosts={this.props.ordersSettingsAdmin.shipping_costs}\r\n                        openConfModal={(title, content, successCallback) => this.openConfModal(title, content, successCallback)}\r\n                        openShippingModal={(index, successCallback) => this.openShippingModal(index, successCallback)}/>;\r\n\r\n        });\r\n\r\n        return (\r\n          <React.Fragment>\r\n            {this.state.modal}\r\n            <table className=\"table table-striped table-bordered col-12\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                            <span className=\"d-sm-none\"><FormattedHTMLMessage id=\"Min.Max\" /></span>\r\n                            <span className=\"d-none d-sm-table-cell\"><FormattedMessage id=\"Minimum\" /></span>\r\n                        </th>\r\n                        <th className=\"d-none d-sm-table-cell\"><FormattedMessage id=\"Maximum\" /></th>\r\n                        <th><FormattedMessage id=\"Shipping.Cost.Excl.Tax\" /></th>\r\n                        <th><FormattedMessage id=\"Actions\" /></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {shippingCostNode}\r\n                </tbody>\r\n            </table>\r\n          </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      lang: state.user.lang,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShippingCostSettingAdmin);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport ShippingModalAdmin from './ShippingModalAdmin';\r\nimport ShippingCostSettingAdmin from \"./ShippingCostSettingAdmin\";\r\nimport { updateOrderSettingAdmin, updateShippingCostsSetting } from \"../../../../actions/settings/ordersSettings/admin/ordersSettings\";\r\n\r\nclass OrdersSettingsAdmin extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      modal: null,\r\n      shipping_delay: this.props.ordersSettingsAdmin.shipping_delay,\r\n      min_order_amount: this.props.ordersSettingsAdmin.min_order_amount,\r\n      annual_budget: this.props.ordersSettingsAdmin.annual_budget,\r\n      urgent: this.props.ordersSettingsAdmin.urgent,\r\n    };\r\n  }\r\n\r\n  openShippingModal(successCallback) {\r\n    if (this.hasInfinity()) return;\r\n\r\n    this.setState({\r\n      modal: <ShippingModalAdmin\r\n        isOpen={true}\r\n        index={-1}\r\n        shippingCosts={this.props.ordersSettingsAdmin.shipping_costs}\r\n        successCallback={successCallback}\r\n        closeModal={() => this.closeModal()} />\r\n    });\r\n  }\r\n\r\n  closeModal() {\r\n    this.setState({ modal: null });\r\n  }\r\n\r\n  createShippingCostSetting(shippingCosts) {\r\n    // Send to BE\r\n    this.props.onUpdateShippingCostsSetting({ shippingCosts: shippingCosts });\r\n  }\r\n\r\n  onFieldChange(field, value = 0) {\r\n    this.setState({ [field]: value });\r\n  }\r\n\r\n  updateOrderSettingAdmin(field, value = 0) {\r\n    var data = {\r\n      updatedField: field,\r\n      updatedValue: value\r\n    };\r\n\r\n    this.props.onUpdateOrderSettingAdmin(data);\r\n  }\r\n\r\n  hasInfinity() {\r\n    return (this.props.ordersSettingsAdmin.shipping_costs.length !== 0\r\n      && !this.props.ordersSettingsAdmin.shipping_costs[this.props.ordersSettingsAdmin.shipping_costs.length - 1].max);\r\n  }\r\n\r\n  render() {\r\n    if (this.props.ordersSettingsAdmin.length === 0) return null;\r\n    // Shipping modal set up\r\n    var successCallback = (e) => this.createShippingCostSetting(this.props.ordersSettingsAdmin.shipping_costs);\r\n\r\n    let shippingCostNode = null;\r\n    if (this.props.ordersSettingsAdmin.shipping_costs.length !== 0) {\r\n      shippingCostNode = <ShippingCostSettingAdmin ordersSettingsAdmin={this.props.ordersSettingsAdmin} />\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.modal}\r\n\r\n        <div className=\"col-12 col-lg-7 col-xl-6\">\r\n          <div className=\"form-group row\">\r\n            <label htmlFor=\"shippingDelay\" className=\"col-12 col-md-7 col-form-label\"><FormattedMessage id=\"Shipping.Delay\" /></label>\r\n            <div className=\"col-12 col-md-5\">\r\n              <input type=\"number\" className=\"form-control\" id=\"shippingDelay\" min=\"0\" value={this.state.shipping_delay}\r\n                onChange={(e) => this.onFieldChange('shipping_delay', e.target.value)}\r\n                onBlur={(e) => this.updateOrderSettingAdmin('shipping_delay', e.target.value)} />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label htmlFor=\"minPrice\" className=\"col-12 col-md-7 col-form-label\"><FormattedMessage id=\"Min.Price\" /></label>\r\n            <div className=\"col-12 col-md-5\">\r\n              <input type=\"number\" className=\"form-control\" id=\"minPrice\" min=\"0\" value={this.state.min_order_amount}\r\n                onChange={(e) => this.onFieldChange('min_order_amount', e.target.value)}\r\n                onBlur={(e) => this.updateOrderSettingAdmin('min_order_amount', e.target.value)} />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label htmlFor=\"annualBudget\" className=\"col-12 col-md-7 col-form-label\"><FormattedMessage id=\"Budget.Annual\" /></label>\r\n            <div className=\"col-12 col-md-5\">\r\n              <input type=\"number\" className=\"form-control\" id=\"annualBudget\" min=\"0\" value={this.state.annual_budget}\r\n                onChange={(e) => this.onFieldChange('annual_budget', e.target.value)}\r\n                onBlur={(e) => this.updateOrderSettingAdmin('annual_budget', e.target.value)} />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label htmlFor=\"annualBudget\" className=\"col-12 col-md-7 col-form-label\"><FormattedMessage id=\"Settings.Urgent.Cost\" /></label>\r\n            <div className=\"col-12 col-md-5\">\r\n              <input type=\"number\" className=\"form-control\" id=\"urgent\" min=\"0\" value={this.state.urgent}\r\n                onChange={(e) => this.onFieldChange('urgent', e.target.value)}\r\n                onBlur={(e) => this.updateOrderSettingAdmin('urgent', e.target.value)} />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label htmlFor=\"shippingCost\" className=\"col-10 col-sm-11 col-md-7 col-form-label\"><FormattedMessage id=\"Shipping.Cost\" /></label>\r\n            <div className=\"col-2 col-sm-1 col-md-5\">\r\n              <i className=\"fa fa-plus-square icon-big hoverable clickable p-0 pt-2\" id=\"shippingCost\" onClick={(e) => this.openShippingModal(successCallback)} disabled={this.hasInfinity()}></i>\r\n            </div>\r\n          </div>\r\n          {shippingCostNode}\r\n        </div>\r\n\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    lang: state.user.lang,\r\n    user: state.user,\r\n    ordersSettingsAdmin: state.ordersSettingsAdmin,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onUpdateOrderSettingAdmin: (data) => dispatch(updateOrderSettingAdmin(data)),\r\n    onUpdateShippingCostsSetting: (data) => dispatch(updateShippingCostsSetting(data))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrdersSettingsAdmin);\r\n","import APIUrl from \"../../../APIUrl\";\r\nimport axios from 'axios';\r\nimport {getEstablishmentSettings} from \"../../establishments/establishmentSettings\";\r\n\r\nexport const GET_MATERIALS_TYPES = \"GET_MATERIALS_TYPES\";\r\n\r\nfunction getMaterialsTypesAction(materialsTypes){return {type: GET_MATERIALS_TYPES, materialsTypes: materialsTypes}};\r\n\r\nexport const getMaterialsTypes = function(){\r\n    return function(dispatch){\r\n        return axios.get(APIUrl.getMaterialsTypes)\r\n            .then(function(response){\r\n                dispatch(getMaterialsTypesAction(response.data));\r\n            })\r\n            .catch(function(err){\r\n                throw(err);\r\n            });\r\n    };\r\n};\r\n\r\nexport const addMaterialsType = function(data, successCallback){\r\n    return function(dispatch){\r\n        return axios.post(APIUrl.addMaterialsType, data)\r\n            .then(function(response){\r\n                dispatch(getMaterialsTypes());\r\n                successCallback();\r\n            })\r\n            .catch(function(err){\r\n                throw(err);\r\n            });\r\n    };\r\n};\r\n\r\nexport const deleteMaterialType = function(data){\r\n    return function(dispatch){\r\n        return axios.post(APIUrl.deleteMaterialType, data)\r\n            .then(function(response){\r\n                dispatch(getMaterialsTypes());\r\n                dispatch(getEstablishmentSettings());\r\n            })\r\n            .catch(function(err){\r\n                throw(err);\r\n            });\r\n    };\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport {addMaterialsType} from \"../../../../actions/settings/materialsTypes/materialsTypes\";\r\n\r\n\r\nclass MaterialsTypesModalAdmin extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: \"\",\r\n            nameError: null,\r\n            disabled: false,\r\n        };\r\n    }\r\n\r\n    close() {\r\n        this.props.closeModal();\r\n    }\r\n\r\n    onChange(value) {\r\n        // Check that this material type does not already exist\r\n        for (var materialTypeName of this.props.materialsTypes) {\r\n            if (materialTypeName.name.toUpperCase() === value.toUpperCase().trim()) {\r\n                this.setState({\r\n                    name: value,\r\n                    nameError: <FormattedMessage id=\"Material.Exist\" />,\r\n                    disabled: true\r\n                });\r\n\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            name: value,\r\n            nameError: null,\r\n            disabled: false\r\n        });\r\n    }\r\n\r\n    add() {\r\n        this.setState({disabled: true});\r\n\r\n        var data = {newMaterial: this.state.name.trim()};\r\n\r\n        this.props.onAddMaterialsType(data, () => this.close());\r\n    }\r\n\r\n    stopEvent(e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"modal-bg show\" onClick={() => this.close()}>\r\n                <div className=\"modal fade show\">\r\n                    <div className=\"modal-dialog\" role=\"document\" onClick={(e) => this.stopEvent(e)}>\r\n                        <div className=\"modal-content\">\r\n\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\"><FormattedMessage id=\"Add.Material\" /></h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={() => this.close()}>\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div className=\"modal-body\">\r\n\r\n                                <div className=\"form-group row\">\r\n                                    <label htmlFor=\"name\" className=\"col-sm-4 col-form-label\"><FormattedMessage id=\"Name\" /></label>\r\n                                    <div id=\"name\" className=\"col-sm-8\">\r\n                                        <input className=\"form-control\" type=\"text\" id=\"materialName\" name=\"name\" onChange={(e) => this.onChange(e.target.value)} />\r\n                                        <small className=\"text-danger\">{this.state.nameError}</small>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={() => this.close()}><FormattedMessage id=\"Cancel\" /></button>\r\n                                <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.add()}\r\n                                    disabled={this.state.disabled || this.state.nameError || this.state.name === \"\"}><FormattedMessage id=\"Add\" /></button>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        materialsTypes: state.materialsTypes,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAddMaterialsType: (data, successCallback) => dispatch(addMaterialsType(data, successCallback))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MaterialsTypesModalAdmin);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {deleteMaterialType} from \"../../../../actions/settings/materialsTypes/materialsTypes\";\r\n\r\nclass MaterialTypeAdminRow extends React.Component {\r\n\r\n  deleteMaterialType(materialId){\r\n    var data = {materialId: materialId}\r\n    this.props.onDeleteMaterialType(data)\r\n  }\r\n\r\n  render() {\r\n    // 'Delete shipping setting' modal setup\r\n    var modalTitle = <FormattedMessage id=\"Confirm\" />;\r\n    var modalContent = <FormattedMessage id=\"Material.Type.Remove.Confirmation\" />;\r\n    var successCallback = () => this.deleteMaterialType(this.props.materialType._id);\r\n    return (\r\n      <React.Fragment>\r\n        <tr key={this.props.key}>\r\n          <td>{this.props.materialType.name}</td>\r\n          <td className=\"text-center\">\r\n            <i className=\"fa fa-trash icon-big\" onClick={(e) => this.props.openConfModal(modalTitle, modalContent, successCallback)}></i>\r\n          </td>\r\n        </tr>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    lang: state.user.lang,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onDeleteMaterialType: (data) => dispatch(deleteMaterialType(data)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MaterialTypeAdminRow);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport MaterialTypeAdminRow from './MaterialTypeAdminRow.js';\r\nimport ConfirmationModal from '../../../sub/modals/ConfirmationModal';\r\n\r\nclass MaterialsTypesTable extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            modal: null,\r\n        };\r\n    }\r\n\r\n    openConfModal(title, content, successCallback) {\r\n        this.setState({\r\n            modal: <ConfirmationModal isOpen={true}\r\n                title={title}\r\n                content={content}\r\n                successCallback={successCallback}\r\n                closeModal={() => this.closeModal()} />\r\n        });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ modal: null });\r\n    }\r\n\r\n    render() {\r\n        let materialsTypesRowNode = this.props.materialsTypes.map((materialType) => {\r\n            return <MaterialTypeAdminRow\r\n                key={materialType._id}\r\n                materialType={materialType}\r\n                openConfModal={(title, content, successCallback) => this.openConfModal(title, content, successCallback)} />;\r\n\r\n        });\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.modal}\r\n                <table className=\"table table-striped table-bordered col-12 col-md-10 col-xl-6\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"col-8\"><FormattedMessage id=\"Type\" /></th>\r\n                            <th className=\"col-4\"><FormattedMessage id=\"Actions\" /></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {materialsTypesRowNode}\r\n                    </tbody>\r\n                </table>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        //\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        //\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MaterialsTypesTable);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport MaterialsTypesModalAdmin from './MaterialsTypesModalAdmin';\r\nimport MaterialsTypesTableAdmin from './MaterialsTypesAdminTable';\r\n\r\nclass MaterialsTypesAdmin extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      modal: null,\r\n    };\r\n  }\r\n\r\n  openMaterialsTypesModal() {\r\n    this.setState({\r\n      modal: <MaterialsTypesModalAdmin\r\n        isOpen={true}\r\n        closeModal={() => this.closeModal()} />\r\n    });\r\n  }\r\n\r\n  closeModal() {\r\n    this.setState({ modal: null });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n\r\n        <span onClick={(e) => this.openMaterialsTypesModal()} className=\"iconed-btn nostyle-a hoverable clickable\">\r\n          <span className=\"mt-3 mb-3\">\r\n            <i className=\"fa fa-plus-square icon-big text-dark\"></i>\r\n            <p><FormattedMessage id=\"Add.Material\" /></p>\r\n          </span>\r\n        </span>\r\n\r\n        {(this.props.materialsTypes.length !== 0) && <MaterialsTypesTableAdmin materialsTypes={this.props.materialsTypes} />}\r\n\r\n        {this.state.modal}\r\n\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.user,\r\n    materialsTypes: state.materialsTypes,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    //\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MaterialsTypesAdmin);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport OrdersSettingsAdmin from \"./ordersSettings/OrdersSettingsAdmin\";\r\nimport MaterialsTypesAdmin from \"./materialsTypes/MaterialsTypesAdmin\";\r\n\r\nclass MenuSettingsAdmin extends React.Component {\r\n\r\n    render() {\r\n        if(Object.keys(this.props.ordersSettingsAdmin).length === 0) return null;\r\n\r\n        return (\r\n            <React.Fragment>\r\n\r\n              <nav>\r\n                <div className=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\r\n                  <a className=\"nav-item nav-link p-2 pr-sm-3 pl-sm-3 rounded-0\" id=\"nav-home-tab\" data-toggle=\"tab\" href=\"#nav-general\" role=\"tab\" aria-controls=\"nav-home\" aria-selected=\"false\"><FormattedMessage id=\"General\" /></a>\r\n                  <a className=\"nav-item nav-link active p-2 pr-sm-3 pl-sm-3 rounded-0\" id=\"nav-profile-tab\" data-toggle=\"tab\" href=\"#nav-profile\" role=\"tab\" aria-controls=\"nav-profile\" aria-selected=\"true\"><FormattedMessage id=\"Orders\" /></a>\r\n                  <a className=\"nav-item nav-link p-2 pr-sm-3 pl-sm-3 rounded-0\" id=\"nav-contact-tab\" data-toggle=\"tab\" href=\"#nav-contact\" role=\"tab\" aria-controls=\"nav-contact\" aria-selected=\"false\"><FormattedMessage id=\"Emails\" /></a>\r\n                  <a className=\"nav-item nav-link p-2 pr-sm-3 pl-sm-3 rounded-0\" id=\"nav-contact-tab\" data-toggle=\"tab\" href=\"#nav-contact\" role=\"tab\" aria-controls=\"nav-contact\" aria-selected=\"false\">API</a>\r\n                  <a className=\"nav-item nav-link p-2 pr-sm-3 pl-sm-3 rounded-0\" id=\"nav-contact-tab\" data-toggle=\"tab\" href=\"#nav-types-dm\" role=\"tab\" aria-controls=\"nav-contact\" aria-selected=\"false\"><FormattedMessage id=\"Types.Dm\" /></a>\r\n                </div>\r\n              </nav>\r\n              <div className=\"tab-content mt-3 p-0 p-md-4\" id=\"nav-tabContent\">\r\n                <div className=\"tab-pane fade\" id=\"nav-general\" role=\"tabpanel\" aria-labelledby=\"nav-home-tab\"></div>\r\n                <div className=\"tab-pane fade show active\" id=\"nav-profile\" role=\"tabpanel\" aria-labelledby=\"nav-profile-tab\"><OrdersSettingsAdmin ordersSettings={this.props.ordersSettingsAdmin}/></div>\r\n                <div className=\"tab-pane fade\" id=\"nav-contact\" role=\"tabpanel\" aria-labelledby=\"nav-contact-tab\"><FormattedMessage id=\"Emails\" /></div>\r\n                <div className=\"tab-pane fade\" id=\"nav-contact\" role=\"tabpanel\" aria-labelledby=\"nav-contact-tab\">api</div>\r\n                <div className=\"tab-pane fade\" id=\"nav-types-dm\" role=\"tabpanel\" aria-labelledby=\"nav-contact-tab\"><MaterialsTypesAdmin/></div>\r\n              </div>\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      ordersSettingsAdmin: state.ordersSettingsAdmin,\r\n      user: state.user,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n       //\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuSettingsAdmin);\r\n","import APIUrl from \"../../APIUrl\";\r\nimport axios from 'axios';\r\n\r\nexport const GET_USER = \"GET_USER\";\r\n\r\nfunction getUserAction(user){return {type: GET_USER, user: user}};\r\n\r\nexport const getUser = function(){\r\n    return function(dispatch){\r\n        return axios.get(APIUrl.getUser)\r\n            .then(function(response){\r\n                if (!response || !response.status) window.location.href = \"/\";\r\n                \r\n                dispatch(getUserAction(response.data));\r\n            })\r\n            .catch(function(err){\r\n                window.location.href = \"/\";\r\n            });\r\n    };\r\n};\r\n\r\nexport const updateLang = function(lang){\r\n    return function(dispatch){\r\n        return axios.get(APIUrl.updateLang + lang)\r\n            .then(function(response){\r\n                // Refresh the user state\r\n                dispatch(getUser());\r\n            })\r\n            .catch(function(err){\r\n                throw err;\r\n            });\r\n    };\r\n};\r\n\r\nexport const checkIfUsernameExists = function(username, existsCallback, noExistsCallback){\r\n    return function(dispatch){\r\n        return axios.get(APIUrl.checkIfUsernameExists + username)\r\n            .then(function(response){\r\n                if(response.status === 200) existsCallback();\r\n                else noExistsCallback();\r\n            });\r\n    };\r\n};\r\n\r\nexport const checkIfEmailExists = function(email, existsCallback, noExistsCallback){\r\n    return function(dispatch){\r\n        return axios.get(APIUrl.checkIfEmailExists + email)\r\n            .then(function(response){\r\n                if(response.status === 200) existsCallback();\r\n                else noExistsCallback();\r\n            });\r\n    };\r\n};","import APIUrl from \"../../APIUrl\";\r\nimport axios from 'axios';\r\n\r\nexport const GET_PRODUCTS = \"GET_PRODUCTS\";\r\n\r\nfunction getProductsAction(products){return {type: GET_PRODUCTS, products: products}};\r\n\r\nexport const getProducts = function(){\r\n    return function(dispatch){\r\n        return axios.get(APIUrl.getProducts)\r\n            .then(function(response){\r\n                dispatch(getProductsAction(response.data));\r\n            })\r\n            .catch(function(err){\r\n                throw(err);\r\n            });\r\n    };\r\n};\r\n\r\n// ==================================================================================\r\n// ================================== ADMIN =========================================\r\n// ==================================================================================\r\n\r\nexport const getProductsAdmin = function(){\r\n    return function(dispatch){\r\n        return axios.get(APIUrl.getProductsAdmin)\r\n            .then(function(response){\r\n                dispatch(getProductsAction(response.data));\r\n            })\r\n            .catch(function(err){\r\n                throw(err);\r\n            });\r\n    };\r\n};\r\n\r\n","import APIUrl from \"../../APIUrl\";\r\nimport axios from 'axios';\r\n\r\nexport const GET_CLIENTS = \"GET_CLIENTS\";\r\n\r\nfunction getClientsAction(clients){return {type: GET_CLIENTS, clients: clients}};\r\n\r\nexport const getClients = function(){\r\n    return function(dispatch){\r\n        return axios.get(APIUrl.getClients)\r\n            .then(function(response){\r\n                dispatch(getClientsAction(response.data));\r\n            })\r\n            .catch(function(err){\r\n                throw err;\r\n            });\r\n    };\r\n};\r\n\r\nexport const addClient = function(data, successCallback){\r\n    return function(dispatch){\r\n        return axios.post(APIUrl.addClient, data)\r\n            .then(function(response){\r\n                dispatch(getClients());\r\n                successCallback();\r\n            })\r\n            .catch(function(err){\r\n                throw err;\r\n            });\r\n    };\r\n};\r\n\r\nexport const updateClient = function(data){\r\n    return function(dispatch){\r\n        return axios.post(APIUrl.updateClient, data)\r\n            .then(function(response){\r\n                dispatch(getClients());\r\n            })\r\n            .catch(function(err){\r\n                throw err;\r\n            });\r\n    };\r\n};","import APIUrl from \"../../APIUrl\";\r\nimport axios from 'axios';\r\nimport {getEstablishmentSettings} from \"./establishmentSettings\";\r\n\r\nexport const GET_ESTABLISHMENTS = \"GET_ESTABLISHMENTS\";\r\n\r\nfunction getEstablishmentsAction(establishments){return {type: GET_ESTABLISHMENTS, establishments: establishments}};\r\n\r\nexport const getEstablishments = function(){\r\n    return function(dispatch){\r\n        return axios.get(APIUrl.getEstablishments)\r\n            .then(function(response){\r\n                dispatch(getEstablishmentsAction(response.data));\r\n            })\r\n            .catch(function(err){\r\n                throw err;\r\n            });\r\n    };\r\n};\r\n\r\nexport const addEstablishment = function(data, successCallback){\r\n    return function(dispatch){\r\n        return axios.post(APIUrl.addEstablishment, data)\r\n            .then(function(response){\r\n                dispatch(getEstablishments());\r\n                dispatch(getEstablishmentSettings());\r\n\r\n                successCallback(response.data);\r\n            })\r\n            .catch(function(err){\r\n                throw err;\r\n            });\r\n    };\r\n};\r\n\r\nexport const updateEstablishment = function(data){\r\n    return function(dispatch){\r\n        return axios.post(APIUrl.updateEstablishment, data)\r\n            .then(function(response){\r\n                dispatch(getEstablishments());\r\n            })\r\n            .catch(function(err){\r\n                throw err;\r\n            });\r\n    };\r\n};\r\n","import APIUrl from \"../../../APIUrl\";\r\nimport axios from 'axios';\r\n\r\nexport const GET_ORDERS_SETTINGS = \"GET_ORDERS_SETTINGS\";\r\n\r\nfunction getOrdersSettingsAction(ordersSettings){return {type: GET_ORDERS_SETTINGS, ordersSettings: ordersSettings}};\r\n\r\nexport const getOrdersSettings = function(){\r\n    return function(dispatch){\r\n        return axios.get(APIUrl.getOrdersSettings)\r\n            .then(function(response){\r\n                dispatch(getOrdersSettingsAction(response.data));\r\n            })\r\n            .catch(function(err){\r\n                throw(err);\r\n            });\r\n    };\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { withRouter } from \"react-router\";\r\nimport { logout } from '../../../actions/authentication/authentication';\r\nimport { updateLang } from '../../../actions/user/user';\r\n\r\nclass MenuProfile extends React.Component {\r\n\r\n    logout(e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        let that = this;\r\n        function onLogoutSuccess() {\r\n            that.props.history.push('/');\r\n        };\r\n\r\n        // Call logout and redirect on success\r\n        this.props.onLogout(onLogoutSuccess);\r\n    }\r\n\r\n    updateLang(lang){\r\n        this.props.onUpdateLang(lang);\r\n    }\r\n\r\n    render() {\r\n        var lang = this.props.lang;\r\n\r\n        if(!lang) return;\r\n\r\n        // Available langs to chose from\r\n        var availableLangs = [\"en\", \"fr\"];\r\n\r\n        var otherLangsNode = availableLangs.map((l) => {\r\n            // Lang is the one currently selected. Return\r\n            if(l === lang) return null;\r\n\r\n            // Add option to pick this lang\r\n            return (\r\n                <li key={l} className=\"dropdown-item\" onClick={(e) => this.updateLang(l)}><FormattedMessage id={\"Lang.\" + l} /></li>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"dropdown dropleft\">\r\n                <span className=\"\" data-toggle=\"dropdown\">\r\n                    <span className=\"a-like\">\r\n                        <i className=\"fa fa-user-circle icon-big text-light d-none d-md-block\"></i>\r\n                        <i className=\"fa fa-user-circle icon-small text-light d-inline d-md-none\"></i>\r\n                        {this.props.user.first_name} {this.props.user.name}\r\n                    </span>\r\n                </span>\r\n                <ul className=\"dropdown-menu multi-level\">\r\n                    <li className=\"dropdown-submenu\">\r\n                        <span className=\"dropdown-item\"><FormattedMessage id=\"Lang\" />&nbsp;: <FormattedMessage id={\"Lang.\" + this.props.lang} /></span>\r\n                        <ul className=\"dropdown-menu\">\r\n                            {otherLangsNode}\r\n                        </ul>\r\n                    </li>\r\n                    <li className=\"dropdown-divider\"></li>\r\n                    <li className=\"dropdown-item\" onClick={(e) => this.logout(e)}>Disconnect</li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.i18n.lang,\r\n        user: state.user,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: (successCallback) => dispatch(logout(successCallback)),\r\n        onUpdateLang: (lang) => dispatch(updateLang(lang))\r\n    };\r\n};\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MenuProfile));\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { withRouter } from \"react-router\";\r\nimport MenuProfile from './MenuProfile';\r\n\r\nclass Menu extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-md navbar-dark bg-custom-blue\">\r\n\r\n                <div id=\"menu\" className=\"collapse navbar-collapse mb-3 mb-md-0\">\r\n\r\n                    <ul className=\"navbar-nav text-center\">\r\n\r\n                        <a href=\"#/home\">\r\n                            <li className=\"nav-item mx-2 p-2\">\r\n                                <i className=\"fa fa-home icon-big text-light d-none d-md-block\"></i>\r\n                                <i className=\"fa fa-home icon-small text-light d-inline d-md-none\"></i>\r\n                                <FormattedMessage id=\"Home\" />\r\n                            </li>\r\n                        </a>\r\n\r\n                        <a href=\"#/home/orders\">\r\n                            <li className=\"nav-item mx-2 p-2\">\r\n                                <i className=\"fa fa-clipboard icon-big text-light d-none d-md-block\"></i>\r\n                                <i className=\"fa fa-clipboard icon-small text-light d-inline d-md-none\"></i>\r\n                                <span className=\"relative\">\r\n                                    <FormattedMessage id=\"Orders\" />\r\n                                    {this.props.orders.length > 0 && <span className=\"count bg-warning\">{this.props.orders.length}</span>}\r\n                                </span>\r\n                            </li>\r\n                        </a>\r\n\r\n                        <a href=\"#/home/mercurials\">\r\n                            <li className=\"nav-item mx-2 p-2\">\r\n                                <i className=\"fa fa-file-excel-o icon-big text-light d-none d-md-block\"></i>\r\n                                <i className=\"fa fa-file-excel-o icon-small text-light d-inline d-md-none\"></i>\r\n                                <FormattedMessage id=\"Mercurials\" />\r\n                            </li>\r\n                        </a>\r\n\r\n                        <a href=\"#/home/settings\">\r\n                            <li className=\"nav-item mx-2 p-2\">\r\n                                <i className=\"fa fa-cogs icon-big text-light d-none d-md-block\"></i>\r\n                                <i className=\"fa fa-cogs icon-small text-light d-inline d-md-none\"></i>\r\n                                <FormattedMessage id=\"Settings\" />\r\n                            </li>\r\n                        </a>\r\n\r\n                        <a href=\"#/home/clients\">\r\n                            <li className=\"nav-item mx-2 p-2\">\r\n                                <i className=\"fa fa-users icon-big text-light d-none d-md-block\"></i>\r\n                                <i className=\"fa fa-users icon-small text-light d-inline d-md-none\"></i>\r\n                                <FormattedMessage id=\"Clients\" />\r\n                            </li>\r\n                        </a>\r\n\r\n                        <a href=\"#/home/cart\" className=\"ml-md-auto\">\r\n                            <li className=\"nav-item mx-2 p-2\">\r\n                                <i className=\"fa fa-shopping-cart icon-big text-light d-none d-md-block\"></i>\r\n                                <i className=\"fa fa-shopping-cart icon-small text-light d-inline d-md-none\"></i>\r\n                                <span className=\"relative\">\r\n                                    <FormattedMessage id=\"Cart\" />\r\n                                    {this.props.cart.length > 0 && <span className=\"count bg-warning\">{this.props.totalProduct}</span>}\r\n                                </span>\r\n                            </li>\r\n                        </a>\r\n\r\n                        <li className=\"nav-item mx-2 p-2\">\r\n                            <MenuProfile />\r\n                        </li>\r\n\r\n                    </ul>\r\n\r\n                </div>\r\n\r\n                <button className=\"navbar-toggler m-auto\" type=\"button\" data-toggle=\"collapse\" data-target=\"#menu\" aria-controls=\"menu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.i18n.lang,\r\n        cart: state.cart,\r\n        orders: state.orders\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        //\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Menu));\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { withRouter } from \"react-router\";\r\nimport MenuProfile from './MenuProfile';\r\n\r\nclass Menu extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-md navbar-dark bg-custom-green\">\r\n\r\n                <div id=\"menu\" className=\"collapse navbar-collapse mb-3 mb-md-0\">\r\n\r\n                    <ul className=\"navbar-nav text-center\">\r\n\r\n                        <a href=\"#/home\">\r\n                            <li className=\"nav-item mx-2 p-2\">\r\n                                <i className=\"fa fa-home icon-big text-light d-none d-md-block\"></i>\r\n                                <i className=\"fa fa-home icon-small text-light d-inline d-md-none\"></i>\r\n                                <FormattedMessage id=\"Home\" />\r\n                            </li>\r\n                        </a>\r\n\r\n                        <a href=\"#/home/orders\">\r\n                            <li className=\"nav-item mx-2 p-2\">\r\n                                <i className=\"fa fa-clipboard icon-big text-light d-none d-md-block\"></i>\r\n                                <i className=\"fa fa-clipboard icon-small text-light d-inline d-md-none\"></i>\r\n                                <span className=\"relative\">\r\n                                    <FormattedMessage id=\"Orders\" />\r\n                                    {this.props.orders.length > 0 && <span className=\"count bg-warning\">{this.props.orders.length}</span>}\r\n                                </span>\r\n                            </li>\r\n                        </a>\r\n\r\n                        <a href=\"#/home/fleet\">\r\n                            <li className=\"nav-item mx-2 p-2\">\r\n                                <i className=\"fa fa-building icon-big text-light d-none d-md-block\"></i>\r\n                                <i className=\"fa fa-building icon-small text-light d-inline d-md-none\"></i>\r\n                                <span className=\"relative\">\r\n                                    <FormattedMessage id=\"Fleet\" />\r\n                                </span>\r\n                            </li>\r\n                        </a>\r\n\r\n                        <a href=\"#/home/cart\" className=\"ml-md-auto\">\r\n                            <li className=\"nav-item mx-2 p-2\">\r\n                                <i className=\"fa fa-shopping-cart icon-big text-light d-none d-md-block\"></i>\r\n                                <i className=\"fa fa-shopping-cart icon-small text-light d-inline d-md-none\"></i>\r\n                                <span className=\"relative\">\r\n                                    <FormattedMessage id=\"Cart\" />\r\n                                    {this.props.cart.length > 0 && <span className=\"count bg-warning\">{this.props.totalProduct}</span>}\r\n                                </span>\r\n                            </li>\r\n                        </a>\r\n\r\n                        <li className=\"nav-item mx-2 p-2\">\r\n                            <MenuProfile />\r\n                        </li>\r\n\r\n                    </ul>\r\n\r\n                </div>\r\n\r\n                <button className=\"navbar-toggler m-auto\" type=\"button\" data-toggle=\"collapse\" data-target=\"#menu\" aria-controls=\"menu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.i18n.lang,\r\n        cart: state.cart,\r\n        orders: state.orders\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        //\r\n    };\r\n};\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Menu));\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nclass NotificationModal extends React.Component {\r\n\r\n    close(){\r\n        this.props.closeModal();\r\n    }\r\n\r\n    confirm(){\r\n        this.props.successCallback();\r\n        this.close();\r\n    }\r\n\r\n    stopEvent(e){\r\n\t\te.preventDefault();\r\n\t\te.stopPropagation();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"modal-bg show\" onClick={() => this.close()}>\r\n                <div className=\"modal fade show\">\r\n                    <div className=\"modal-dialog\" role=\"document\" onClick={(e) => this.stopEvent(e)}>\r\n                        <div className=\"modal-content  border border-warning\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                                    <i className=\"fa fa-info-circle  fa-big mr-3\"></i>\r\n                                    {this.props.title}\r\n                                </h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={() => this.close()}>\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                {this.props.content}\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-warning text-white\" onClick={() => this.confirm()}><FormattedMessage id=\"Ok\" /></button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        //\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        //\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NotificationModal);\r\n","import APIUrl from \"../../APIUrl\";\r\nimport axios from 'axios';\r\n\r\nexport const GET_NOTIFS = \"GET_NOTIFS\";\r\n\r\nfunction getNotifsAction(notifications){return {type: GET_NOTIFS, notifications: notifications}};\r\n\r\nexport const getNotifs = function(successCallback){\r\n    return function(dispatch){\r\n        return axios.get(APIUrl.getNotifs)\r\n            .then(function(response){\r\n                dispatch(getNotifsAction(response.data));\r\n            })\r\n            .catch(function(err){\r\n                throw err;\r\n            });\r\n    };\r\n};\r\n\r\nexport const deleteNotif = function(data, successCallback){\r\n    return function(dispatch){\r\n        return axios.post(APIUrl.deleteNotif, data)\r\n            .then(function(){\r\n                dispatch(getNotifs());\r\n            })\r\n            .catch(function(err){\r\n                throw err;\r\n            });\r\n    };\r\n};\r\n","export default class FileUtil{\r\n\r\n    static extension(fileName){\r\n        var fragments = fileName.split(\".\");\r\n        return fragments[fragments.length-1];\r\n    }\r\n\r\n    static extensionIsOk(fileName, acceptedExtensions){\r\n        var extension = FileUtil.extension(fileName);\r\n\r\n        for(let ext of acceptedExtensions){\r\n            if(extension === ext) return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static withoutExtension(fileName){\r\n        let extension = FileUtil.extension(fileName);\r\n        return fileName.replace(\".\" + extension, \"\");\r\n    }\r\n\r\n    // This will normalize the name to fit file names requirements (no accents, lowercase, special characters etc.)\r\n    static toFileName(name){\r\n        return name.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\").replace(/[^a-z0-9]/gi, '_').toLowerCase();\r\n    }\r\n\r\n}","import React from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport { connect } from 'react-redux';\r\nimport FileUtil from '../../util/FileUtil';\r\n\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nclass FileDropZone extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            files: [],\r\n            extensionError: null\r\n        };\r\n    }\r\n\r\n    onDrop(acceptedFiles, rejectedFiles){\r\n        this.setState({extensionError: null});\r\n\r\n        for(let file of acceptedFiles){\r\n            if(!FileUtil.extensionIsOk(file.name, this.props.acceptedExtensions)){\r\n                this.setState({extensionError: <FormattedMessage id=\"Unsupported.File.Type.Ext\" values={{extension: FileUtil.extension(file.name)}} />});\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.setState({files: acceptedFiles});\r\n\r\n        if(this.props.multiple) this.props.onDropFiles(acceptedFiles);\r\n        else this.props.onDropFile(acceptedFiles[0]);\r\n    }\r\n\r\n    render() {\r\n        const baseStyle = {width: \"100%\", borderWidth: 2, borderColor: '#666', borderStyle: 'dashed', borderRadius: 5, padding: 10};\r\n        const activeStyle = {borderStyle: 'solid', borderColor: '#6c6', backgroundColor: '#eee'};\r\n        const rejectStyle = {borderColor: '#c66', color: '#c66', backgroundColor: '#eee'};\r\n\r\n        return (\r\n            <Dropzone onDrop={(acceptedFiles, rejectedFiles) => this.onDrop(acceptedFiles, rejectedFiles)} multiple={this.props.multiple}>\r\n                {({ getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject, acceptedFiles, rejectedFiles }) => {\r\n                    let styles = { ...baseStyle };\r\n                    styles = (isDragActive && isDragAccept) ? { ...styles, ...activeStyle } : styles\r\n                    styles = ((isDragActive && isDragReject) || this.state.extensionError) ? { ...styles, ...rejectStyle } : styles\r\n\r\n                    let filesNames = \"\";\r\n                    if(this.state.files.length <= 10){\r\n                        for(let file of this.state.files) filesNames += \" \" + file.name;\r\n                        filesNames = <span>{filesNames}</span>;\r\n                    }else{\r\n                        var i = 0;\r\n                        for(; i<10; i++) filesNames += \" \" + this.state.files[i].name;\r\n                        filesNames = <span>{filesNames}... <small><em>(<FormattedMessage id=\"More.items\" values={{nbr: this.state.files.length - i}} />)</em></small></span>;\r\n                    }\r\n                    \r\n\r\n                    let msg = null;\r\n                    if(this.state.extensionError) msg = this.state.extensionError;\r\n                    else if(isDragReject) msg = <FormattedMessage id=\"Unsupported.File.Type\" />;\r\n                    else if(!this.props.multiple && this.state.files.length === 0) msg = <FormattedMessage id=\"Drag.Drop\" />;\r\n                    else if(this.props.multiple && this.state.files.length === 0) msg = <FormattedMessage id=\"Drag.Drop.Multiple\" />;\r\n                    else if(this.state.files.length > 0) msg = <div>{filesNames}</div>;\r\n\r\n                    return (\r\n                        <div {...getRootProps()} style={styles} className=\"text-center\">\r\n                            <input {...getInputProps()} />\r\n                            <div>\r\n                                <i className=\"fa fa-cloud-upload icon-giant d-block\" disabled={!this.props.multiple && this.state.files.length > 0}></i>\r\n                                <div>{msg}</div>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Dropzone>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        //\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        //\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FileDropZone);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FileDropZone from '../sub/FileDropZone';\r\n\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nclass MercurialFileModal extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            disabled: false,\r\n            file: null, \r\n            name: null,\r\n            startDate: null,\r\n            endDate: null,\r\n            nameError: null,\r\n            dateError: null,\r\n        };\r\n    }\r\n\r\n    close() {\r\n        this.props.closeModal();\r\n    }\r\n\r\n    stopEvent(e) {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    onDropFile(file){\r\n        this.setState({file: file});\r\n    }\r\n\r\n    onNameChange(e){\r\n        var name = e.target.value;\r\n\r\n        for(let mercurial of this.props.mercurials){\r\n            if(mercurial.name === name){\r\n                this.setState({name: name, nameError: <FormattedMessage id=\"Mercurials.Already.Imported\" />});\r\n                return;\r\n            } \r\n        }\r\n        \r\n        this.setState({name: name, nameError: null});\r\n    }\r\n\r\n    onStartDateChange(e){\r\n        let newDate = e.target.value;\r\n\r\n        var error = null;\r\n        if(this.state.endDate && newDate && newDate > this.state.endDate){\r\n            error = <FormattedMessage id=\"StartDate.Superior.EndDate\" />\r\n        }\r\n\r\n        this.setState({startDate: newDate, dateError: error});       \r\n    }\r\n\r\n    onEndDateChange(e){\r\n        let newDate = e.target.value;\r\n\r\n        var error = null;\r\n        if(this.state.startDate && newDate && this.state.startDate > newDate){\r\n            error = <FormattedMessage id=\"StartDate.Superior.EndDate\" />\r\n        }\r\n\r\n        this.setState({endDate: newDate, dateError: error});\r\n    }\r\n\r\n    onComplete(){\r\n        this.setState({disabled: true});\r\n\r\n        this.props.onComplete(this.state.name, this.state.file, this.state.startDate, this.state.endDate);\r\n    }\r\n\r\n    disableButton(){\r\n       return (\r\n           !this.state.file || \r\n            !this.state.name || \r\n            !this.state.startDate || \r\n            !this.state.endDate || \r\n            (this.state.startDate > this.state.endDate) ||\r\n            this.state.disabled ||\r\n            this.state.nameError\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"modal-bg show\" onClick={() => this.close()}>\r\n                <div className=\"modal fade show\">\r\n                    <div className=\"modal-dialog modal-lg\" role=\"document\" onClick={(e) => this.stopEvent(e)}>\r\n\r\n                        <div className=\"modal-content\">\r\n\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\"><FormattedMessage id=\"Mercurials.Add.Some\" /></h5>\r\n                                \r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={() => this.close()}>\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div className=\"modal-body p-4\">\r\n                                <h4 className=\"mb-5 w-100 text-center \"><FormattedMessage id=\"Mercurials.Step.1\" /></h4>\r\n\r\n                                <div className=\"form-group row\">\r\n                                    <label htmlFor=\"fam\" className=\"col-sm-4 col-form-label\"><FormattedMessage id=\"Mercurials.Name.Of\" />&nbsp;: </label>\r\n                                    <div id=\"fam\" className=\"col-sm-8 pb-3\">\r\n                                        <input type=\"text\" className=\"form-control\" id=\"file-name\" onChange={(e) => this.onNameChange(e)} />\r\n                                        <div className=\"text-danger\"><small>{this.state.nameError}</small></div>\r\n                                    </div>\r\n\r\n                                    <label htmlFor=\"file-start-date\" className=\"col-sm-4 col-form-label\"><FormattedMessage id=\"Start.Date\" />&nbsp;: </label>\r\n                                    <div className=\"col-sm-8 pb-3\">\r\n                                        <input type=\"date\" className=\"form-control\" id=\"file-start-date\" onChange={(e) => this.onStartDateChange(e)} />\r\n                                        <div className=\"text-danger\"><small>{this.state.dateError}</small></div>\r\n                                    </div>\r\n\r\n                                    <label htmlFor=\"file-end-date\" className=\"col-sm-4 col-form-label\"><FormattedMessage id=\"End.Date\" />&nbsp;: </label>\r\n                                    <div className=\"col-sm-8 pb-3\">\r\n                                        <input type=\"date\" className=\"form-control\" id=\"file-end-date\" onChange={(e) => this.onEndDateChange(e)} />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <FileDropZone \r\n                                    onDropFile={(file) => this.onDropFile(file)} \r\n                                    acceptedExtensions={[\"xls\", \"xlsx\"]}\r\n                                    multiple={false}\r\n                                    />\r\n\r\n                                <div className=\"w-100 text-center mt-3\">\r\n                                    <a role=\"button\" href=\"templates/template_mercurial.xlsx\" download=\"template_mercurial.xlsx\">\r\n                                        <i className=\"fa fa-file-excel-o text-blue mr-2\"></i>\r\n                                        \r\n                                        <FormattedMessage id=\"Mercurials.Download.Template\" />\r\n                                    </a>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={() => this.close()}><FormattedMessage id=\"Cancel\" /></button>\r\n                                <button type=\"button\" className=\"btn btn-primary\" \r\n                                    disabled={this.disableButton()} \r\n                                    onClick={() => this.onComplete()}><FormattedMessage id=\"Mercurials.Step.2\" /></button>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        mercurials: state.mercurials\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        //\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MercurialFileModal);\r\n\r\n","export default class StringUtil {\r\n\r\n    static closest(string, matches) {\r\n        if (!string || !matches) return false;\r\n\r\n        var THRESHOLD = 50;\r\n\r\n        var distance, match;\r\n        var candidate;\r\n        for (var i = 0; i < matches.length; i++) {\r\n            candidate = matches[i]\r\n            \r\n            if (string === candidate) return string;\r\n\r\n            var measurement = StringUtil.sift(string, candidate);\r\n\r\n            if (!distance || measurement < distance) {\r\n                distance = measurement;\r\n                match = candidate;\r\n            }\r\n        }\r\n\r\n        if (distance > THRESHOLD) return false;\r\n\r\n        return match;\r\n    }\r\n\r\n    static sift(s1, s2) {\r\n        if (s1 === null || s1.length === 0) {\r\n            if (s2 === null || s2.length === 0) {\r\n                return 0;\r\n            } else {\r\n                return s2.length;\r\n            }\r\n        }\r\n\r\n        if (s2 === null || s2.length === 0) {\r\n            return s1.length;\r\n        }\r\n\r\n        var c = 0;\r\n        var offset1 = 0;\r\n        var offset2 = 0;\r\n        var lcs = 0;\r\n        var maxOffset = 5;\r\n\r\n        while ((c + offset1 < s1.length) && (c + offset2 < s2.length)) {\r\n            if (s1.charAt(c + offset1) === s2.charAt(c + offset2)) {\r\n                lcs++;\r\n            } else {\r\n                offset1 = 0;\r\n                offset2 = 0;\r\n                for (var i = 0; i < maxOffset; i++) {\r\n                    if ((c + i < s1.length) && (s1.charAt(c + i) === s2.charAt(c))) {\r\n                        offset1 = i;\r\n                        break;\r\n                    }\r\n                    if ((c + i < s2.length) && (s1.charAt(c) === s2.charAt(c + i))) {\r\n                        offset2 = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            c++;\r\n        }\r\n\r\n        return (s1.length + s2.length) / 2 - lcs;\r\n    }\r\n\r\n}","const MercurialsMapping = {\r\n    fam: \"FAM\",\r\n    famille: \"FAMILLE\",\r\n    sous_famille: \"SOUS FAMILLE\",\r\n    caracteristiques: \"CARACTERISTIQUES\",\r\n    designation: \"DESIGNATION\",\r\n    unite_de_vente: \"UNITE DE VENTE\",\r\n    min_cde: \"MIN CDE\",\r\n    ref: \"REF\",\r\n    prix_u_ht_emera: \"PRIX U. HT\",\r\n    stock: \"STOCK\",\r\n    tva: \"TVA\",\r\n    fournisseur: \"FOURNISSEUR\",\r\n    ref_frn: \"REF FRN\",\r\n    pa_ht: \"PA HT\",\r\n    marge: \"MARGE\",\r\n};\r\n\r\nexport default MercurialsMapping;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport StringUtil from '../../util/StringUtil';\r\nimport MercurialsMapping from '../../util/MercurialsMapping';\r\n\r\nimport {FormattedMessage, injectIntl} from 'react-intl';\r\n\r\nclass MercurialColumnsModal extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            disabled: false,\r\n            autoMatching: false\r\n        };\r\n    }\r\n\r\n    close() {\r\n        this.props.closeModal();\r\n    }\r\n\r\n    stopEvent(e) {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    formatValue(value){\r\n        let formattedValue = \"\" + value;\r\n        if(formattedValue.length > 30) formattedValue = formattedValue.substring(0, 30) + \"...\";\r\n\r\n        return formattedValue;\r\n    }\r\n\r\n    buildSelect(key){\r\n        let firstRowKeys = Object.keys(this.props.fileData[0]);\r\n\r\n        // Help user and pre-select the closest column (select default value)\r\n        let closest = StringUtil.closest(key, firstRowKeys);\r\n\r\n        var optionsNode = firstRowKeys.map(key => {\r\n                let value = this.props.fileData[0][key];\r\n\r\n                return <option key={key + \"-\" + value} value={key}>{key} - {this.formatValue(value)}</option>\r\n            }\r\n        );\r\n\r\n        return (\r\n            <select key={Math.random()} className=\"form-control column-select\" defaultValue={(this.state.autoMatching && closest) && closest} onChange={(e) => this.manageSelectChange(e)}>\r\n                <option value=\"\">{this.props.intl.formatMessage({id: \"Select\"})}...</option>\r\n                {optionsNode}\r\n            </select>\r\n        );\r\n    }\r\n\r\n    getSelColumn(key){\r\n        let famDiv = document.getElementById(key);\r\n        let select = famDiv.firstChild;\r\n        return select.options[select.selectedIndex].value;\r\n    }\r\n\r\n    onComplete(){\r\n        this.setState({disabled: true});\r\n\r\n        var columns = {};\r\n\r\n        for(let key of Object.keys(MercurialsMapping)){\r\n            columns[key] = this.getSelColumn(key);\r\n        }\r\n\r\n        this.props.onComplete(columns);\r\n    }\r\n\r\n    manageSelectChange(e) {\r\n        this.updateSelectOptions();\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.updateSelectOptions();\r\n    }\r\n\r\n    updateSelectOptions(){\r\n        let selects = document.getElementsByClassName(\"column-select\");\r\n\r\n        for (let s of selects) {\r\n            for (let i = 0; i < s.length; i++) {\r\n                s.options[i].disabled = false;\r\n            }\r\n        }\r\n\r\n        for (let s1 of selects) {\r\n            var value1 = s1.value;\r\n\r\n            for (let s2 of selects) {\r\n                if (s1 === s2) continue;\r\n                \r\n                for (let i = 0; i < s2.length; i++) {\r\n                    if (s2.options[i].value !== \"\" && s2.options[i].value === value1) s2.options[i].disabled = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.checkDisableButton();\r\n    }\r\n\r\n    updateAutoMatching(){\r\n        this.setState({autoMatching: !this.state.autoMatching}, this.updateSelectOptions);\r\n    }\r\n\r\n    checkDisableButton(){\r\n        let button = document.getElementById(\"submit-button\");\r\n        button.disabled = (this.state.disabled || !this.selectsAllHaveValues());\r\n    }\r\n\r\n    selectsAllHaveValues(){\r\n        let selects = document.getElementsByClassName(\"column-select\");\r\n\r\n        for (let s of selects) {\r\n            if (!s.value || s.value === \"\") return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        // Prepare as many selects as required for the mapping\r\n        let selects = [];\r\n        for(let mappingKey of Object.keys(MercurialsMapping)){\r\n            selects.push(\r\n                <React.Fragment key={mappingKey}>\r\n                    <label htmlFor={mappingKey} className=\"col-sm-4 col-form-label\">{MercurialsMapping[mappingKey]}&nbsp;: </label>\r\n                    <div id={mappingKey} className=\"col-sm-8 pb-3\">{this.buildSelect(MercurialsMapping[mappingKey])}</div>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n\r\n        // Split the selects on 2 displayed columns\r\n        let selects1stHalf = [];\r\n        let selects2ndHalf = [];\r\n        for(let i = 0; i < selects.length; i++){\r\n            if(i <= (selects.length/2)) selects1stHalf.push(selects[i]);\r\n            else selects2ndHalf.push(selects[i]);\r\n        }\r\n\r\n        return (\r\n            <div className=\"modal-bg show\" onClick={() => this.close()}>\r\n                <div className=\"modal fade show\">\r\n                    <div className=\"modal-dialog modal-xl\" role=\"document\" onClick={(e) => this.stopEvent(e)}>\r\n\r\n                        <div className=\"modal-content\">\r\n\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\"><FormattedMessage id=\"Mercurials.Add.Some\" /></h5>\r\n                                \r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={() => this.close()}>\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div className=\"modal-body text-left p-4\">\r\n                                <h4 className=\"w-100 text-center\"><FormattedMessage id=\"Mercurials.Step2.Desc\" /></h4>\r\n                                <h5 className=\"mb-4 w-100 text-center font-weight-light\"><FormattedMessage id=\"Mercurials.Step2.Read.1st.Line\" /></h5>\r\n                                <div className=\"custom-control custom-switch mx-auto switch-success mb-3\">\r\n                                    <input onChange={(e) => this.updateAutoMatching()}\r\n                                        type=\"checkbox\"\r\n                                        className=\"custom-control-input switch-bg-blue\"\r\n                                        id=\"auto-matching\"\r\n                                        checked={this.state.autoMatching}/>\r\n                                    <label className=\"custom-control-label\" htmlFor=\"auto-matching\"><FormattedMessage id=\"Mercurials.Auto.Detect\" /></label>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n\r\n                                    <div className=\"col-12 col-lg-6\">\r\n                                        <div className=\"form-group row\">\r\n                                            {selects1stHalf}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-12 col-lg-6\">\r\n                                        <div className=\"form-group row\">\r\n                                            {selects2ndHalf}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div> \r\n\r\n                            </div>\r\n\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={() => this.close()}><FormattedMessage id=\"Cancel\" /></button>\r\n                                <button id=\"submit-button\" type=\"button\" className=\"btn btn-primary\" onClick={() => this.onComplete()} disabled={this.state.disabled}>\r\n                                    <FormattedMessage id=\"Mercurials.Step.3\" />\r\n                                    </button>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        //\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        //\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(MercurialColumnsModal));\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FileDropZone from '../sub/FileDropZone';\r\n\r\nimport {FormattedMessage} from 'react-intl';\r\nimport Util from '../../util/Util';\r\nimport FileUtil from '../../util/FileUtil';\r\nimport APIUrl from '../../APIUrl';\r\nimport Axios from 'axios';\r\nimport ConfirmationModal from '../sub/modals/ConfirmationModal';\r\n\r\nclass MercurialImgsModal extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            modal: null,\r\n            disabled: false,\r\n            // Uploaded files\r\n            summary: null,\r\n            productFiles: null,\r\n            familyFiles: null,\r\n            declinedFiles: null,\r\n            // Info\r\n            familiesWithNoImg: null,\r\n            productsWithNoImg: null,\r\n        };\r\n    }\r\n\r\n    componentWillMount(){\r\n        if(!this.state.summary){\r\n            Axios.get(APIUrl.getMercImgOverview + this.props.mercurial._id)\r\n                .then((response) => {\r\n                    this.setState({\r\n                        familiesWithNoImg: response.data.familiesWithNoImg,\r\n                        productsWithNoImg: response.data.productsWithNoImg,\r\n                    });\r\n                });\r\n        }\r\n    }\r\n\r\n    close() {\r\n        this.props.closeModal();\r\n    }\r\n\r\n    stopEvent(e) {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    onComplete(){\r\n        this.setState({disabled: true});\r\n\r\n        this.props.onComplete(this.props.mercurial._id, this.state.productFiles, this.state.familyFiles);\r\n    }\r\n\r\n    onDropFiles(files){\r\n        let productFiles = [];\r\n        let familyFiles = [];\r\n        let declinedFiles = [];\r\n\r\n        let products = this.getMercurialProducts(this.props.mercurial);\r\n\r\n        outer:for(let file of files){\r\n\r\n            for(let product of products){\r\n                let fileNameWithoutExtension = FileUtil.withoutExtension(file.name);\r\n\r\n                // Product img\r\n                if(fileNameWithoutExtension === product.ref){\r\n                    productFiles.push(file);\r\n                    continue outer;\r\n                }\r\n                // Family img\r\n                else if(fileNameWithoutExtension === product.fam.split(\".\")[0]){\r\n                    familyFiles.push(file);\r\n                    continue outer;\r\n                }\r\n            }\r\n\r\n            declinedFiles.push(file);\r\n        }\r\n\r\n        this.setState({\r\n            productFiles: productFiles,\r\n            familyFiles: familyFiles,\r\n            declinedFiles: declinedFiles\r\n        });\r\n    }\r\n\r\n    disabled(){\r\n        return this.state.disabled || (Util.emptyArray(this.state.productFiles) && Util.emptyArray(this.state.familyFiles));\r\n    }\r\n\r\n    openMissingModal(families, products) {\r\n        var title = <FormattedMessage id=\"Mercurials.Missing.Items\" />;\r\n\r\n        var familiesContent = null;\r\n        if(families.length > 0){\r\n            familiesContent = (\r\n                <div>\r\n                    <div><FormattedMessage id=\"Mercurials.Missing.Families\" /> :</div>\r\n                    <ul>\r\n                        {families.map(family => <li>{family.fam.split(\".\")[0]} : {family.famille}</li>)}\r\n                    </ul>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        var productsContent = null;\r\n        if(products.length > 0){\r\n            productsContent = (\r\n                <div>\r\n                    <div><FormattedMessage id=\"Mercurials.Missing.Products\" /> :</div>\r\n                    <ul>\r\n                        {products.map(product => {\r\n                            let productDes = product.designation;\r\n                            if(productDes[productDes.length-1] === \"-\") productDes = productDes.slice(0, -1);\r\n                            \r\n                            return <li><span className=\"text-muted\">({product.famille})</span> {product.ref} : {productDes}</li>}\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        var content = <span>{familiesContent}{productsContent}</span>\r\n\r\n        this.setState({\r\n            modal: <ConfirmationModal isOpen={true}\r\n                size={\"xl\"}\r\n                title={title}\r\n                content={content}\r\n                successCallback={() => this.closeModal()}\r\n                closeModal={() => this.closeModal()} />\r\n        });\r\n    }\r\n\r\n    closeModal(){\r\n        this.setState({modal: null});\r\n    }\r\n\r\n    displayMissingImgs(){\r\n        // Users has dropped stuff, don't show\r\n        if(this.state.productFiles || this.state.familyFiles || this.state.declinedFiles) return false;\r\n\r\n        return this.state.familiesWithNoImg && \r\n            this.state.productsWithNoImg && \r\n            (this.state.familiesWithNoImg.length !== 0 || this.state.productsWithNoImg.length !== 0);\r\n    }\r\n    \r\n    getMercurialProducts(mercurial){\r\n        let products = [];\r\n\r\n        for(let product of this.props.products){\r\n            if(product.mercurial_id === mercurial._id){\r\n                products.push(product);\r\n            }\r\n        }\r\n\r\n        return products;\r\n    }\r\n\r\n    render() {\r\n        // Alert box with info about how much missing imgs this mercurial has, with the list of the items\r\n        var missingImgs = null;\r\n        if(this.displayMissingImgs()){\r\n            var missingFamilyImgs = null;\r\n            if(this.state.familiesWithNoImg.length !== 0){\r\n                missingFamilyImgs = (<li>{this.state.familiesWithNoImg.length} <FormattedMessage id=\"Mercurials.Missing.Family.Images\" /></li>);\r\n            } \r\n            \r\n            var missingProductImgs = null;\r\n            if(this.state.productsWithNoImg.length !== 0){\r\n                missingProductImgs = (<li>{this.state.productsWithNoImg.length} <FormattedMessage id=\"Mercurials.Missing.Product.Images\" /></li>);\r\n            }\r\n\r\n            missingImgs = (\r\n                <div className=\"alert alert-danger hoverable clickable\" onClick={() => this.openMissingModal(this.state.familiesWithNoImg, this.state.productsWithNoImg)} role=\"alert\">\r\n                    <FormattedMessage id=\"Mercurials.Missing\" /> :\r\n                    <ul className=\"pb-0 mb-0\">\r\n                        {missingFamilyImgs}\r\n                        {missingProductImgs}\r\n                    </ul>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <div className=\"modal-bg show\" onClick={() => this.close()}>\r\n                    <div className=\"modal fade show\">\r\n                        <div className=\"modal-dialog modal-lg\" role=\"document\" onClick={(e) => this.stopEvent(e)}>\r\n\r\n                            <div className=\"modal-content\">\r\n\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"exampleModalLabel\"><FormattedMessage id=\"Mercurials.Import.Imgs\" /></h5>\r\n                                    \r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={() => this.close()}>\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n\r\n                                <div className=\"modal-body p-4\">\r\n                                    <h4 className=\"w-100 text-center \"><FormattedMessage id=\"Mercurials.Upload.Imgs\" /></h4>\r\n                                    <p className=\"mb-3 w-100 text-center font-weight-light\"><FormattedMessage id=\"Mercurials.Upload.Imgs.Rules\" /></p>\r\n                                    <p className=\"mb-3 w-100 text-center font-weight-light text-success\"><FormattedMessage id=\"Mercurials.Upload.Imgs.Recommended.Dimensions\" /></p>\r\n\r\n                                    {missingImgs}\r\n\r\n                                    <FileDropZone \r\n                                        onDropFiles={(files) => this.onDropFiles(files)} \r\n                                        acceptedExtensions={[\"jpg\", \"png\"]}\r\n                                        multiple={true}\r\n                                        />\r\n\r\n                                    <div className=\"text-center pt-3\">\r\n                                        <span className=\"text-success\">{(this.state.familyFiles) && <span> {this.state.familyFiles.length} <FormattedMessage id=\"Mercurials.Missing.Family.Images\" /> / </span>}</span>\r\n                                        <span className=\"text-success\">{(this.state.productFiles) && <span> {this.state.productFiles.length} <FormattedMessage id=\"Mercurials.Missing.Product.Images\" /> / </span>}</span>\r\n                                        <span className=\"text-danger\">{(this.state.declinedFiles) && <span> {this.state.declinedFiles.length} <FormattedMessage id=\"Mercurials.Invlid.Images\" /></span>}</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={() => this.close()}><FormattedMessage id=\"Cancel\" /></button>\r\n                                    <button type=\"button\" className=\"btn btn-primary\" \r\n                                        disabled={this.disabled()}\r\n                                        onClick={() => this.onComplete()}><FormattedMessage id=\"Import\" /></button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n                {this.state.modal}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        mercurials: state.mercurials,\r\n        products: state.products\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        //\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MercurialImgsModal);\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FileDropZone from '../sub/FileDropZone';\r\n\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nclass MercurialUpdModal extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            disabled: false,\r\n            file: null\r\n        };\r\n    }\r\n\r\n    close() {\r\n        this.props.closeModal();\r\n    }\r\n\r\n    stopEvent(e) {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    onDropFile(file){\r\n        this.setState({file: file});\r\n    }\r\n\r\n    onComplete(){\r\n        this.setState({disabled: true});\r\n\r\n        this.props.onComplete(this.props.mercurial, this.state.file);\r\n    }\r\n\r\n    disableButton(){\r\n       return (!this.state.file || this.state.disabled);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"modal-bg show\" onClick={() => this.close()}>\r\n                <div className=\"modal fade show\">\r\n                    <div className=\"modal-dialog modal-lg\" role=\"document\" onClick={(e) => this.stopEvent(e)}>\r\n\r\n                        <div className=\"modal-content\">\r\n\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\"><FormattedMessage id=\"Mercurials.Update\" /></h5>\r\n                                \r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={() => this.close()}>\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div className=\"modal-body p-4\">\r\n                                <h4 className=\"mb-3 w-100 text-center\"><FormattedMessage id=\"Mercurials.Update.Upload\" /></h4>\r\n                                <p className=\"mb-3 w-100 text-center font-weight-light\"><FormattedMessage id=\"Mercurials.Update.Upload.Info\" /></p>\r\n\r\n                                <div className=\"card text-white bg-warning  mb-3\">\r\n                                    <div className=\"card-header\">\r\n                                        <i className=\"fa fa-warning mr-2\"></i>\r\n                                        <FormattedMessage id=\"Mercurials.Update.Warning.Title\" />\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                        <p className=\"card-text\"><FormattedMessage id=\"Mercurials.Update.Warning.Content\" /></p>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <FileDropZone \r\n                                    onDropFile={(file) => this.onDropFile(file)} \r\n                                    acceptedExtensions={[\"xls\", \"xlsx\"]}\r\n                                    multiple={false}\r\n                                    />\r\n\r\n                            </div>\r\n\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={() => this.close()}><FormattedMessage id=\"Cancel\" /></button>\r\n                                <button type=\"button\" className=\"btn btn-primary\" \r\n                                    disabled={this.disableButton()} \r\n                                    onClick={() => this.onComplete()}><FormattedMessage id=\"Update\" /></button>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        //\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        //\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MercurialUpdModal);\r\n\r\n","import APIUrl from \"../../APIUrl\";\r\nimport axios from 'axios';\r\nimport {getProductsAdmin} from \"../products/products\";\r\nimport {getCart} from \"../cart/cart\";\r\nimport {getNotifs} from \"../notifications/notifications\";\r\nimport {getOrdersAdmin} from \"../orders/orders\";\r\nimport { getEstablishmentSettings } from \"../establishments/establishmentSettings\";\r\n\r\nexport const GET_MERCURIAL = \"GET_MERCURIAL\";\r\n\r\nfunction getMercurialsAction(mercurials){return {type: GET_MERCURIAL, mercurials: mercurials}};\r\n\r\nexport const getMercurials = function(successCallback){\r\n    return function(dispatch){\r\n        return axios.get(APIUrl.getMercurials)\r\n            .then(function(response){\r\n                dispatch(getMercurialsAction(response.data));\r\n            })\r\n            .catch(function(err){\r\n                throw err;\r\n            });\r\n    };\r\n};\r\n\r\nexport const addMercurial = function(data, successCallback){\r\n    return function(dispatch){\r\n        return axios.post(APIUrl.addMercurial, data)\r\n            .then(function(response){\r\n                dispatch(getMercurials());\r\n                dispatch(getProductsAdmin());\r\n\r\n                return successCallback(response.data);\r\n            })\r\n            .catch(function(err){\r\n                throw err;\r\n            });\r\n    };\r\n};\r\n\r\nexport const updateMercurial = function(data, successCallback){\r\n    return function(dispatch){\r\n        return axios.post(APIUrl.updateMercurial, data)\r\n            .then(function(response){\r\n                dispatch(getMercurials());\r\n                dispatch(getProductsAdmin());\r\n                dispatch(getCart());\r\n                dispatch(getNotifs());\r\n                dispatch(getOrdersAdmin());\r\n                dispatch(getEstablishmentSettings());\r\n\r\n                return successCallback(response.data);\r\n            })\r\n            .catch(function(err){\r\n                throw err;\r\n            });\r\n    };\r\n};\r\n\r\nexport const deleteMercurial = function(data){\r\n    return function(dispatch){\r\n        return axios.post(APIUrl.deleteMercurial, data)\r\n            .then(function(response){\r\n                dispatch(getMercurials());\r\n                dispatch(getProductsAdmin());\r\n                dispatch(getCart());\r\n                dispatch(getNotifs());\r\n                dispatch(getOrdersAdmin());\r\n                dispatch(getEstablishmentSettings());\r\n            })\r\n            .catch(function(err){\r\n                throw(err);\r\n            });\r\n    };\r\n};\r\n\r\nexport const addProductsImgs = function(mercurialId, data, successCallback){\r\n    return function(dispatch){\r\n        return axios.post(APIUrl.addProductsImgs + mercurialId, data, {headers: {'Content-Type': 'multipart/form-data'}})\r\n            .then(function(response){\r\n                return successCallback();\r\n            })\r\n            .catch(function(err){\r\n                throw(err);\r\n            });\r\n    };\r\n};\r\n\r\nexport const addFamilyImgs = function(mercurialId, data, successCallback){\r\n    return function(dispatch){\r\n        return axios.post(APIUrl.addFamilyImgs + mercurialId, data, {headers: {'Content-Type': 'multipart/form-data'}})\r\n            .then(function(response){\r\n                return successCallback();\r\n            })\r\n            .catch(function(err){\r\n                throw(err);\r\n            });\r\n    };\r\n};","import XLSX from 'xlsx';\r\n\r\nexport default class ExcelUtil{\r\n\r\n    // Will save your excelData into a file. Make sure the excelData is aoa (array of array). See method ExcelUtil.toExcel()\r\n    static save(excelData, fileNameWithoutExtension){\r\n        var wb = XLSX.utils.book_new();\r\n        var ws = XLSX.utils.aoa_to_sheet(excelData);\r\n \r\n        XLSX.utils.book_append_sheet(wb, ws, \"SheetJS\");\r\n\r\n        XLSX.writeFile(wb, fileNameWithoutExtension + \".xlsx\");\r\n    }\r\n\r\n    // 'data' must be an array of data like this : [{field1: value1, field2: value2...}, {field1: value1, field2: value2...}, ...]\r\n    // 'ignoreCols' : columns to ignore ('_id' etc.)\r\n    static toExcel(data, columnsMapping, ignoreCols=[]){\r\n        // Excel format is an array of arrays (aoa). Column names are the first array of the list\r\n        let excel = [];\r\n\r\n        // First, the columns\r\n        let keys = [];\r\n        outer:for(let key of Object.keys(data[0])){\r\n            for(let col of ignoreCols) if(key === col) continue outer;\r\n            keys.push(columnsMapping[key] || key);\r\n        };\r\n        excel.push(keys);\r\n\r\n        // Then, the data\r\n        for(let d of data){\r\n            let values = [];\r\n            outer:for(let key of Object.keys(d)){\r\n                for(let col of ignoreCols) if(key === col) continue outer;\r\n                values.push(d[key]);\r\n            }\r\n            excel.push(values);\r\n        }\r\n\r\n        return excel;\r\n    }\r\n\r\n    static parse(file, callback) {\r\n        var reader = new FileReader();\r\n\r\n        reader.onload = function (e) {\r\n            var data = e.target.result;\r\n            var workbook = XLSX.read(data, {type: 'binary'});\r\n\r\n            workbook.SheetNames.forEach(function (sheetName) {\r\n                var XL_raw_object = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);\r\n\r\n                callback(XL_raw_object);\r\n            });\r\n        };\r\n\r\n        reader.onerror = function (err) {\r\n            throw err\r\n        };\r\n\r\n        reader.readAsBinaryString(file);\r\n    };\r\n\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport DateUtil from \"../../util/DateUtil\";\r\nimport { FormattedMessage } from 'react-intl';\r\nimport {deleteMercurial} from \"../../actions/mercurials/mercurials\";\r\nimport ExcelUtil from '../../util/ExcelUtil';\r\nimport FileUtil from '../../util/FileUtil';\r\n\r\nimport MercurialsMapping from '../../util/MercurialsMapping';\r\n\r\nimport \"../../css/orders/orders.css\";\r\n\r\nclass MercurialRow extends React.Component {\r\n\r\n    getMercurialProducts(mercurial){\r\n        let products = [];\r\n\r\n        for(let product of this.props.products){\r\n            if(product.mercurial_id === mercurial._id){\r\n                products.push(product);\r\n            }\r\n        }\r\n\r\n        return products;\r\n    }\r\n\r\n    download(mercurial){\r\n        // Convert data to Excel format\r\n        let products = this.getMercurialProducts(mercurial);\r\n        let excelData = ExcelUtil.toExcel(products, MercurialsMapping, [\"_id\", \"__v\", \"mercurial_id\"]);\r\n\r\n        // Sanitize the file name\r\n        let fileName = FileUtil.toFileName(mercurial.name);\r\n\r\n        // Save the file\r\n        ExcelUtil.save(excelData, fileName);\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.mercurial) return null;\r\n\r\n        var mercurial = this.props.mercurial;\r\n\r\n        // 'Delete order' modal setup\r\n        var modalTitle = <FormattedMessage id=\"Confirm\" />;\r\n        var modalContent = (\r\n            <React.Fragment>\r\n                <FormattedMessage id=\"Mercurial.Remove.Confirmation\" />\r\n                <br/><br/>\r\n                <div className=\"card text-white bg-danger\">\r\n                    <div className=\"card-header\">\r\n                        <i className=\"fa fa-warning mr-2 text-white\"></i>\r\n                        <FormattedMessage id=\"Warning\" />\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <p className=\"card-text\"><FormattedMessage id=\"Mercurials.Delete.Warning.Content\" /></p>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n        var successCallback = (e) => this.props.onDeleteMercurial({mercurialId: mercurial._id});\r\n\r\n        var hasGreaterVersion = false;\r\n        for(let m of this.props.mercurials){\r\n            if(m.name === mercurial.name && m.version > mercurial.version){\r\n                hasGreaterVersion = true;\r\n                break;\r\n            } \r\n        }\r\n\r\n        let versionXS = null;\r\n        if(hasGreaterVersion || mercurial.version > 1) versionXS = <span className=\"d-table-cell d-md-none\">(<FormattedMessage id=\"Version\" /> {mercurial.version})</span>;\r\n\r\n        let isOutDated = (new Date(mercurial.end_date) < Date.now());\r\n\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <tr className={(isOutDated) ? \"font-italic text-muted\" : \"\"}>\r\n                    <td>\r\n                        {mercurial.name}\r\n                        {versionXS}\r\n                    </td>\r\n                    <td className=\"d-none d-md-table-cell\">{DateUtil.toDate(mercurial.start_date)}</td>\r\n                    <td className=\"d-none d-md-table-cell\">{DateUtil.toDate(mercurial.end_date)}</td>\r\n                    <td className=\"d-none d-sm-table-cell\">{mercurial.file_name}</td>\r\n                    <td className=\"d-none d-md-table-cell\">{mercurial.version}</td>\r\n                    <td className=\"text-center align-middle\">\r\n                        <i className=\"fa fa-upload icon-big\" onClick={(e) => {if(!isOutDated) this.props.openMercurialUpdModal(mercurial)}} disabled={isOutDated}></i>\r\n                        <i className=\"fa fa-download icon-big\" onClick={(e) => {if(!isOutDated) this.download(mercurial)}} disabled={isOutDated}></i>\r\n                        <i className=\"fa fa-file-image-o icon-big\" onClick={(e) => {if(!isOutDated) this.props.openImgsModal(mercurial)}} disabled={isOutDated}></i>\r\n                        <i className=\"fa fa-trash icon-big\" onClick={(e) => {if(!isOutDated) this.props.openConfModal(modalTitle, modalContent, successCallback)}} disabled={isOutDated}></i>\r\n                    </td>\r\n                </tr>\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        products: state.products\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onDeleteMercurial: (data) => dispatch(deleteMercurial(data))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MercurialRow);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nclass ErrorModal extends React.Component {\r\n\r\n    close(){\r\n        this.props.closeModal();\r\n    }\r\n\r\n    confirm(){\r\n        this.props.successCallback();\r\n        this.close();\r\n    }\r\n\r\n    stopEvent(e){\r\n\t\te.preventDefault();\r\n\t\te.stopPropagation();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"modal-bg show\" onClick={() => this.close()}>\r\n                <div className=\"modal fade show\">\r\n                    <div className=\"modal-dialog\" role=\"document\" onClick={(e) => this.stopEvent(e)}>\r\n                        <div className=\"modal-content border border-danger\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\"><i className=\"fa fa-warning fa-big mr-3\"></i>{this.props.title}</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={() => this.close()}>\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                {this.props.content}\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-danger\" onClick={() => this.close()}><FormattedMessage id=\"Ok\" /></button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        //\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ErrorModal);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MercurialFileModal from \"./MercurialFileModal\";\r\nimport MercurialColumnsModal from \"./MercurialColumnsModal\";\r\nimport MercurialImgsModal from \"./MercurialImgsModal\";\r\nimport MercurialUpdModal from \"./MercurialUpdModal\";\r\nimport {addMercurial, addProductsImgs, addFamilyImgs, updateMercurial} from \"../../actions/mercurials/mercurials\";\r\nimport MercurialRow from './MercurialRow';\r\nimport ExcelUtil from '../../util/ExcelUtil';\r\nimport ConfirmationModal from '../sub/modals/ConfirmationModal';\r\nimport ErrorModal from '../sub/modals/ErrorModal';\r\nimport StringUtil from '../../util/StringUtil';\r\n\r\nimport {FormattedMessage} from 'react-intl';\r\nimport MercurialsMapping from '../../util/MercurialsMapping';\r\n\r\nclass Mercurials extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            modal: null,\r\n            // Import data\r\n            mercurialName: null,\r\n            fileName: null,\r\n            fileData: null,\r\n            startDate: null,\r\n            endDate: null,\r\n            columns: null,\r\n            // Filters\r\n            nameFilter: null,\r\n            startDateFilter: null,\r\n            endDateFilter: null,\r\n        };\r\n    }\r\n\r\n    openMercurialImportModal(e){\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        this.setState({\r\n            modal: <MercurialFileModal closeModal={() => this.closeModal()} \r\n                onComplete={(mercurialName, fileData, startDate, endDate) => this.onCompleteStep1(mercurialName, fileData, startDate, endDate)} />\r\n        });\r\n    }\r\n\r\n    onCompleteStep1(mercurialName, file, startDate, endDate){\r\n        // Parse the excel file and then move on to next modal\r\n        ExcelUtil.parse(file, (fileData) => {\r\n            // Save the passed params\r\n            this.setState({\r\n                mercurialName: mercurialName,\r\n                fileName: file.name,\r\n                fileData: fileData,\r\n                startDate: startDate,\r\n                endDate: endDate\r\n            });\r\n    \r\n            // Close current modal\r\n            this.closeModal();\r\n\r\n            // Check for corrupt data\r\n            if(this.isCorrupt(fileData)){\r\n                this.openCorruptFileModal();\r\n            }else{\r\n                // Open next step modal\r\n                this.setState({\r\n                    modal: <MercurialColumnsModal \r\n                        closeModal={() => this.closeModal()} \r\n                        fileData={fileData}\r\n                        onComplete={(columns) => this.onCompleteStep2(columns)} />\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    isCorrupt(json){\r\n        let nbrKeys = 0;\r\n        for (let row of json) nbrKeys = Math.max(nbrKeys, Object.keys(row).length);\r\n\r\n        for (let row of json) {\r\n            // Keys are missing. That's a no-no\r\n            if (Object.keys(row).length !== nbrKeys) return true;\r\n\r\n            for (let key of Object.keys(row)) {\r\n                // Empty values are not accepted. Throw\r\n                if (row[key] === undefined || row[key] === null || row[key] === \"\") return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n    \r\n    openCorruptFileModal(){\r\n        var errorModalTitle = <FormattedMessage id=\"Error\" />;\r\n        var errorModalContent = <FormattedMessage id=\"Mercurial.File.Corrupt\" />;\r\n\r\n        this.setState({\r\n            mercurialName: null,\r\n            fileName: null,\r\n            fileData: null,\r\n            startDate: null,\r\n            endDate: null,\r\n            columns: null,\r\n            modal: <ErrorModal \r\n                isOpen={true}\r\n                title={errorModalTitle}\r\n                content={errorModalContent}\r\n                closeModal={() => this.closeModal()} />\r\n        });\r\n    }\r\n\r\n    onCompleteStep2(columns){\r\n        this.setState({\r\n            columns: columns\r\n        });\r\n\r\n        var successCallback = (mercurial) => {\r\n            // Close current modal\r\n            this.closeModal();\r\n\r\n            this.openImgsModal(mercurial);\r\n        };\r\n\r\n        // Send the mercurial to the BE\r\n        this.addMercurial(this.state.mercurialName, this.state.fileName, this.state.fileData, this.state.startDate, this.state.endDate, columns, successCallback);\r\n    }\r\n\r\n    addMercurial(name, fileName, data, startDate, endDate, columns, callback) {\r\n        // First, fix data with correct columns\r\n        var products = this.fixProductsCols(data, columns);\r\n\r\n        // Then, send data to the BE\r\n        let mercurial = {name: name, fileName: fileName, startDate: startDate, endDate: endDate, products: products};\r\n        this.props.onaddMercurial(mercurial, callback);\r\n    }\r\n\r\n    fixProductsCols(products, columns){\r\n        let newProducts = [];\r\n        for(let p of products){\r\n            var newProduct = {};\r\n            for(let col of Object.keys(columns)) newProduct[col] = p[columns[col]];\r\n            newProducts.push(newProduct);\r\n        }\r\n\r\n        return newProducts;\r\n    }\r\n\r\n    openConfModal(title, content, successCallback){\r\n        this.setState({\r\n            modal: <ConfirmationModal isOpen={true}\r\n                title={title}\r\n                size=\"xl\"\r\n                content={content}\r\n                successCallback={successCallback}\r\n                closeModal={() => this.closeModal()} />\r\n        });\r\n    }\r\n    \r\n    openImgsModal(mercurial){\r\n        this.setState({\r\n            modal: <MercurialImgsModal \r\n                closeModal={() => this.closeModal()} \r\n                onComplete={(mercurialId, productImgs, familyImgs) => this.uploadImgs(mercurialId, productImgs, familyImgs)} \r\n                mercurial={mercurial} />\r\n        });\r\n    }\r\n\r\n    uploadImgs(mercurialId, productImgs, familyImgs){\r\n        var sendProductImgs = (successCallback) => {\r\n            if(!productImgs || productImgs.length === 0) return successCallback();\r\n\r\n            let formData = new FormData();\r\n            for(let img of productImgs) formData.append(img.name, img);\r\n\r\n            this.props.onAddProductsImgs(mercurialId, formData, successCallback);\r\n        };\r\n\r\n        var sendFamilyImgs = (successCallback) => {\r\n            if(!familyImgs || familyImgs.length === 0) return successCallback();\r\n\r\n            let formData = new FormData();\r\n            for(let img of familyImgs) formData.append(img.name, img);\r\n\r\n            this.props.onAddFamilyImgs(mercurialId, formData, successCallback);\r\n        };\r\n\r\n        sendProductImgs(\r\n            () => sendFamilyImgs(\r\n                () => this.closeModal()\r\n            )\r\n        );\r\n    }\r\n\r\n    closeModal(){\r\n        this.setState({modal: null});\r\n    }\r\n\r\n    openMercurialUpdModal(mercurial){\r\n        this.setState({\r\n            modal: <MercurialUpdModal \r\n            mercurial={mercurial}\r\n            closeModal={() => this.closeModal()} \r\n            onComplete={(mercurial, file) => this.onUpd(mercurial, file)} />\r\n        });\r\n    }\r\n    \r\n    onUpd(mercurial, file){\r\n        // Parse the excel file and then move on to next modal\r\n        ExcelUtil.parse(file, (fileData) => {\r\n            // Check for corrupt data\r\n            if(this.isCorrupt(fileData)){\r\n                // Close current modal\r\n                this.closeModal();\r\n\r\n                this.openCorruptFileModal();\r\n            }else{\r\n                if(!fileData[0]){\r\n                    this.closeModal();\r\n                    return;\r\n                }\r\n\r\n                // Auto-match columns\r\n                let columns = {};\r\n                for(let key of Object.keys(MercurialsMapping)){\r\n                    let closest = StringUtil.closest(MercurialsMapping[key], Object.keys(fileData[0]));\r\n\r\n                    if(!closest){\r\n                        this.openCorruptFileModal();\r\n                        return;\r\n                    } \r\n\r\n                    columns[key] = closest;\r\n                }\r\n\r\n                // Fix products keys with auto-matching\r\n                var products = this.fixProductsCols(fileData, columns);\r\n                \r\n                // Send to BE\r\n                this.props.onUpdateMercurial({mercurialId: mercurial._id, fileName: file.name, products: products}, () => this.closeModal());\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if(this.props.mercurials.length === 0){\r\n            return (\r\n                <React.Fragment>\r\n                    {this.state.modal}\r\n    \r\n                    <span onClick={(e) => this.openMercurialImportModal(e)} className=\"iconed-btn hoverable clickable\">\r\n                        <span className=\"mt-3 mb-3\">\r\n                            <i className=\"fa fa-plus-circle icon-big text-dark\"></i>\r\n                            <p><FormattedMessage id=\"Mercurials.Add.Some\" /></p>\r\n                        </span>\r\n                    </span>\r\n                    <div className=\"alert alert-secondary\" role=\"alert\">\r\n                        <FormattedMessage id=\"Empty.Mercurials\" />\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n\r\n        var mercurialsNode = this.props.mercurials.map((mercurial) => {\r\n            if(this.state.nameFilter && this.state.nameFilter !== \"\"){\r\n                if(mercurial.name.indexOf(this.state.nameFilter) === -1) return null;\r\n            }\r\n\r\n            if(this.state.startDateFilter && this.state.startDateFilter !== \"\"){\r\n                if(new Date(mercurial.start_date) < new Date(this.state.startDateFilter)) return null;\r\n            }\r\n\r\n            if(this.state.endDateFilter && this.state.endDateFilter !== \"\"){\r\n                if(new Date(mercurial.end_date) < new Date(this.state.endDateFilter)) return null;\r\n            }\r\n\r\n            return <MercurialRow \r\n                key={mercurial.name + \"-\" + mercurial.version} \r\n                mercurial={mercurial}\r\n                mercurials={this.props.mercurials}\r\n                openMercurialUpdModal={(mercurial) => this.openMercurialUpdModal(mercurial)}\r\n                openConfModal={(title, content, successCallback) => this.openConfModal(title, content, successCallback)}\r\n                openImgsModal={(mercurial) => this.openImgsModal(mercurial)}\r\n                />;\r\n        });\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <span onClick={(e) => this.openMercurialImportModal(e)} className=\"iconed-btn hoverable clickable\">\r\n                    <span className=\"mt-3 mb-3\">\r\n                        <i className=\"fa fa-plus-circle icon-big text-dark\"></i>\r\n                        <p><FormattedMessage id=\"Mercurials.Add.Some\" /></p>\r\n                    </span>\r\n                </span>\r\n\r\n                <table className=\"table table-striped table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th><FormattedMessage id=\"Name\" /></th>\r\n                            <th className=\"d-none d-md-table-cell\"><FormattedMessage id=\"Start.Date\" /></th>\r\n                            <th className=\"d-none d-md-table-cell\"><FormattedMessage id=\"End.Date\" /></th>\r\n                            <th className=\"d-none d-sm-table-cell\"><FormattedMessage id=\"File\" /></th>\r\n                            <th className=\"d-none d-md-table-cell\"><FormattedMessage id=\"Version\" /></th>\r\n                            <th><FormattedMessage id=\"Actions\" /></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                        <tr className=\"d-none d-xl-table-row filter-row\">\r\n                            <td><input className=\"form-control\" type=\"search\" onChange={(e) => {this.setState({nameFilter: e.target.value})}} /></td>\r\n                            <td className=\"d-none d-md-table-cell\"><input className=\"form-control\" type=\"date\" onChange={(e) => {this.setState({startDateFilter: e.target.value})}} /></td>\r\n                            <td className=\"d-none d-lg-table-cell\"><input className=\"form-control\" type=\"date\" onChange={(e) => {this.setState({endDateFilter: e.target.value})}} /></td>\r\n                            <td className=\"d-none d-sm-table-cell\"></td>\r\n                            <td className=\"d-none d-md-table-cell\"></td>\r\n                            <td></td>\r\n                        </tr>\r\n\r\n                        {mercurialsNode}\r\n\r\n                    </tbody>\r\n                </table>\r\n\r\n                {this.state.modal}\r\n\r\n            </React.Fragment>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        mercurials: state.mercurials\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onaddMercurial: (data, successCallback) => dispatch(addMercurial(data, successCallback)),\r\n        onAddProductsImgs: (mercurialId, data, successCallback) => dispatch(addProductsImgs(mercurialId, data, successCallback)),\r\n        onAddFamilyImgs: (mercurialId, data, successCallback) => dispatch(addFamilyImgs(mercurialId, data, successCallback)),\r\n        onUpdateMercurial: (data, successCallback) => dispatch(updateMercurial(data, successCallback)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mercurials);\r\n\r\n","import React from 'react';\r\n\r\nexport default class SplitHomeAdmin extends React.Component{\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-12 col-lg-6 h-200\">\r\n                        <input type=\"text\" id=\"barcode\" />\r\n                        <button onClick=\"scan()\">Scan a barcode</button>\r\n                        <button onClick=\"javascript:scan()\">Scan a barcode</button>\r\n                        <button onclick=\"scan()\">Scan a barcode</button>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-lg-6 h-200\">\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-12 col-lg-6 h-200\">\r\n\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-lg-6 h-200\">\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}","import React from 'react';\r\n\r\nexport default class SplitHome extends React.Component{\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-12 col-lg-6 h-200\">\r\n                        \r\n\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-lg-6 h-200\">\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-12 col-lg-6 h-200\">\r\n\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-lg-6 h-200\">\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}","import APIUrl from \"../../APIUrl\";\r\nimport axios from 'axios';\r\n\r\nexport const GET_ESTABLISHMENT_TYPES = \"GET_ESTABLISHMENT_TYPES\";\r\n\r\nfunction getEstablishmentTypesAction(establishmentTypes){return {type: GET_ESTABLISHMENT_TYPES, establishmentTypes: establishmentTypes}};\r\n\r\nexport const getEstablishmentTypes = function(){\r\n    return function(dispatch){\r\n        return axios.get(APIUrl.getEstablishmentTypes)\r\n            .then(function(response){\r\n                dispatch(getEstablishmentTypesAction(response.data));\r\n            })\r\n            .catch(function(err){\r\n                throw err;\r\n            });\r\n    };\r\n};\r\n\r\nexport const addEstablishmentType = function(data, successCallback){\r\n    return function(dispatch){\r\n        return axios.post(APIUrl.addEstablishmentType, data)\r\n            .then(function(response){\r\n                dispatch(getEstablishmentTypes());\r\n                successCallback(response.data);\r\n            })\r\n            .catch(function(err){\r\n                throw err;\r\n            });\r\n    };\r\n};\r\n","import React from 'react';\r\nimport Creatable from 'react-select/lib/Creatable';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport Util from '../../util/Util';\r\n\r\nexport default class ComboxBox extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.state = {\r\n            option: null\r\n        };\r\n\r\n        // If we have an initial default option - set it\r\n        if(this.props.defaultOption){\r\n            this.state = {\r\n                option: this.formatOption(this.getOptionById(this.props.defaultOption))\r\n            };\r\n        }\r\n    }\r\n\r\n    getOptionById(optionId){\r\n        for(let option of this.props.options){\r\n            if(option._id === optionId) return option;\r\n        }\r\n    }\r\n\r\n    formatOptions(options){\r\n        let formattedOptions = [];\r\n        for(let option of options) formattedOptions.push(this.formatOption(option));\r\n        return formattedOptions;\r\n    }\r\n\r\n    formatOption(option){\r\n        return {value: option._id, label: option.name};\r\n    }\r\n\r\n    createOption(optionName){\r\n        if(Util.emptyString(optionName)) return;\r\n        \r\n        var successCallback = (newOption) => {\r\n            this.setState({option: this.formatOption(newOption)});\r\n            this.props.onChange(newOption._id);\r\n        };\r\n        \r\n        this.props.onCreateOption({name: optionName}, successCallback);\r\n    }\r\n\r\n    onChange(option){\r\n        this.setState({option: option});\r\n\r\n        this.props.onChange(option.value);\r\n    }\r\n\r\n    onBlur(){\r\n        if(!this.state.option) return;\r\n\r\n        this.props.onBlur(this.state.option.value);\r\n    }\r\n\r\n    render(){\r\n        var options = this.formatOptions(this.props.options);\r\n\r\n        return (\r\n            <Creatable\r\n                menuPlacement={this.props.placement || \"auto\"}\r\n                onCreateOption={(value) => this.createOption(value)}\r\n                onChange={(value) => this.onChange(value)}\r\n                onBlur={() => this.onBlur()}\r\n                value={this.state.option}\r\n                options={options}\r\n                noOptionsMessage={(val) => <FormattedMessage id=\"No.Options\" />}\r\n                formatCreateLabel={(val) => <FormattedMessage id=\"Create.Val\" values={{val: val}} />}\r\n                placeholder={<FormattedMessage id=\"Select\" />}\r\n                />\r\n        );\r\n    }\r\n\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\r\nimport {addEstablishment, updateEstablishment} from '../../actions/establishments/establishments';\r\nimport {addEstablishmentType} from '../../actions/configurables/establishmentTypes';\r\nimport ComboxBox from \"../sub/ComboBox\";\r\nimport Util from '../../util/Util';\r\n// import Geocode from \"react-geocode\";\r\n\r\n// import axios from 'axios';\r\n\r\nclass EstablishmentInfo extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        var establishment = this.props.establishment || {};\r\n\r\n        this.state = {\r\n            name: establishment.name || \"\",\r\n            email: establishment.email || \"\",\r\n            phone: establishment.phone || \"\",\r\n            address: establishment.address || \"\",\r\n            address_compl: establishment.address_compl || \"\",\r\n            postal_code: establishment.postal_code || \"\",\r\n            city: establishment.city || \"\",\r\n            website: establishment.website || \"\",\r\n            type_id: establishment.type_id || \"\",\r\n\r\n            nameError: null,\r\n            disabled: false\r\n        };\r\n\r\n        this.GOOGLE_MAP_API_KEY = process.env.REACT_APP_GOOGLE_MAP_API_KEY;\r\n\r\n        // Default coords : Paris\r\n        var defaultLat = 48.8534;\r\n        var defaultLong = 2.3488;\r\n        this.mapComponent = withScriptjs(withGoogleMap((props) =>\r\n            <GoogleMap defaultZoom={5} defaultCenter={{ lat: defaultLat, lng: defaultLong }}>\r\n                {props.isMarkerShown && <Marker position={{ lat: defaultLat, lng: defaultLong }} />}\r\n            </GoogleMap>\r\n        ));\r\n\r\n        // Geocode (for geocoding, no kidding)\r\n        // Geocode.setApiKey(this.GOOGLE_MAP_API_KEY);\r\n\r\n        // Geocode.fromAddress(\"Paris\").then(function (response) {\r\n        //     const { lat, lng } = response.results[0].geometry.location;\r\n        //     console.log(lat, lng);\r\n        // }, function (error) {\r\n        //     console.error(error);\r\n        // });\r\n\r\n        // axios.get(\"https://maps.google.com/maps/api/geocode/json?address=Paris&key=AIzaSyBxMSAT2ijMVaod_XWLk2eto1h3B8_mlSA&sensor=true\")\r\n        //     .then(function(response){\r\n        //         console.log(response)\r\n        //     })\r\n        //     .catch(function(err){\r\n        //         throw(err);\r\n        //     });\r\n    }\r\n\r\n    onFieldChange(field, value) {\r\n        this.setState({ [field]: value });\r\n\r\n        // Careful with name : must be unique! \r\n        if(field === \"name\"){\r\n            if(!this.isNameUnique(value)){\r\n                this.setState({nameError: <FormattedMessage id=\"Establishment.Name.Already.Exists\" />});\r\n                return;\r\n            }else{\r\n                this.setState({ nameError: null });\r\n            }\r\n        }\r\n    }\r\n\r\n    sendUpdate(field, value){\r\n        // Establishment already exists, update field value\r\n        if(this.props.establishment && !this.disabled()){\r\n            this.props.onUpdateEstablishment({establishmentId: this.props.establishment._id, updatedField: field, updatedValue: value});\r\n        }\r\n    }\r\n\r\n    isNameUnique(name){\r\n        for(let establishment of this.props.establishments){\r\n            if(establishment.name.toLowerCase() === name.toLowerCase()){\r\n                // Careful: same establishment we're modifying, so name conflict doesn't matter\r\n                if(this.props.establishment && this.props.establishment._id === establishment._id) continue;\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    onAddressBlur() {\r\n        if(!this.state.address) return;\r\n\r\n        // Geocode.fromAddress(this.state.address).then(function (response) {\r\n        //     const { lat, lng } = response.results[0].geometry.location;\r\n        //     console.log(lat, lng);\r\n        // }, function (error) {\r\n        //     console.error(error);\r\n        // });\r\n    }\r\n\r\n    onSubmit() {\r\n        var establishment = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            phone: this.state.phone,\r\n            address: this.state.address,\r\n            address_compl: this.state.address_compl,\r\n            postal_code: this.state.postal_code,\r\n            city: this.state.city,\r\n            website: this.state.website,\r\n            type_id: this.state.type_id\r\n        };\r\n\r\n        // Close the modal and immediately open it back, parametrized with the establishment\r\n        var successCallback = (esta) => {\r\n            this.props.closeModal();\r\n            this.props.openModal(esta);\r\n        };\r\n\r\n        this.props.onAddEstablishment(establishment, successCallback);\r\n    }\r\n\r\n    disabled() {\r\n        return (Util.emptyString(this.state.name) ||\r\n            !this.isNameUnique(this.state.name) ||\r\n            this.state.disabled);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <div className=\"row mb-3\">\r\n\r\n                    <div className=\"col-12 col-lg-6\">\r\n\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"establishment-name\" className=\"col-12 col-md-5 col-form-label\"><FormattedMessage id=\"Establishment\" /></label>\r\n                            <div className=\"col-12 col-md-7\">\r\n                                <input type=\"text\" className=\"form-control\" id=\"establishment-name\" autoComplete=\"off\"\r\n                                    value={this.state.name}\r\n                                    onChange={(e) => this.onFieldChange(\"name\", e.target.value)}\r\n                                    onBlur={(e) => this.sendUpdate(\"name\", e.target.value)} />\r\n                                {(this.state.nameError) && <div className=\"text-danger\"><small>{this.state.nameError}</small></div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"establishment-email\" className=\"col-12 col-md-5 col-form-label\"><FormattedMessage id=\"Email\" /></label>\r\n                            <div className=\"col-12 col-md-7\">\r\n                                <input type=\"email\" className=\"form-control\" id=\"establishment-email\" autoComplete=\"off\"\r\n                                    value={this.state.email}\r\n                                    onChange={(e) => this.onFieldChange(\"email\", e.target.value)}\r\n                                    onBlur={(e) => this.sendUpdate(\"email\", e.target.value)} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"establishment-phone\" className=\"col-12 col-md-5 col-form-label\"><FormattedMessage id=\"Phone\" /></label>\r\n                            <div className=\"col-12 col-md-7\">\r\n                                <input type=\"text\" className=\"form-control\" id=\"establishment-phone\" autoComplete=\"off\"\r\n                                    value={this.state.phone}\r\n                                    onChange={(e) => this.onFieldChange(\"phone\", e.target.value)}\r\n                                    onBlur={(e) => this.sendUpdate(\"phone\", e.target.value)} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"establishment-address\" className=\"col-12 col-md-5 col-form-label\"><FormattedMessage id=\"Address\" /></label>\r\n                            <div className=\"col-12 col-md-7\">\r\n                                <input type=\"text\" className=\"form-control\" id=\"establishment-address\" autoComplete=\"off\"\r\n                                    value={this.state.address}\r\n                                    onChange={(e) => this.onFieldChange(\"address\", e.target.value)}\r\n                                    onBlur={(e) => this.sendUpdate(\"address\", e.target.value)} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"establishment-address-compl\" className=\"col-12 col-md-5 col-form-label\"><FormattedMessage id=\"Address.Compl\" /></label>\r\n                            <div className=\"col-12 col-md-7\">\r\n                                <input type=\"text\" className=\"form-control\" id=\"establishment-address-compl\" autoComplete=\"off\"\r\n                                    value={this.state.address_compl}\r\n                                    onChange={(e) => this.onFieldChange(\"address_compl\", e.target.value)}\r\n                                    onBlur={(e) => this.sendUpdate(\"address_compl\", e.target.value)} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"establishment-postal-code\" className=\"col-12 col-md-5 col-form-label\"><FormattedMessage id=\"Postal.Code\" /></label>\r\n                            <div className=\"col-12 col-md-7\">\r\n                                <input type=\"number\" className=\"form-control\" id=\"establishment-postal-code\" autoComplete=\"off\"\r\n                                    value={this.state.postal_code}\r\n                                    onChange={(e) => this.onFieldChange(\"postal_code\", e.target.value)}\r\n                                    onBlur={(e) => this.sendUpdate(\"postal_code\", e.target.value)} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"establishment-city\" className=\"col-12 col-md-5 col-form-label\"><FormattedMessage id=\"City\" /></label>\r\n                            <div className=\"col-12 col-md-7\">\r\n                                <input type=\"text\" className=\"form-control\" id=\"establishment-city\" autoComplete=\"off\"\r\n                                    value={this.state.city}\r\n                                    onChange={(e) => this.onFieldChange(\"city\", e.target.value)}\r\n                                    onBlur={(e) => this.sendUpdate(\"city\", e.target.value)} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"establishment-website\" className=\"col-12 col-md-5 col-form-label\"><FormattedMessage id=\"Website\" /></label>\r\n                            <div className=\"col-12 col-md-7\">\r\n                                <input type=\"text\" className=\"form-control\" id=\"establishment-city\" autoComplete=\"off\"\r\n                                    value={this.state.website}\r\n                                    onChange={(e) => this.onFieldChange(\"website\", e.target.value)}\r\n                                    onBlur={(e) => this.sendUpdate(\"website\", e.target.value)} />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"establishment-type-id\" className=\"col-12 col-md-5 col-form-label\"><FormattedMessage id=\"Type\" /></label>\r\n                            <div id=\"establishment-type-id\" className=\"col-12 col-md-7\">\r\n                                <ComboxBox \r\n                                    menuPlacement=\"top\"\r\n                                    onChange={(value) => this.onFieldChange(\"type_id\", value)}\r\n                                    onBlur={(value) => this.sendUpdate(\"type_id\", value)}\r\n                                    defaultOption={this.state.type_id}\r\n                                    options={this.props.establishmentTypes}\r\n                                    onCreateOption={(data, successCallback) => this.props.onAddEstablishmentType(data, successCallback)} />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-lg-6\">\r\n                        <this.mapComponent\r\n                            isMarkerShown\r\n                            googleMapURL={\"https://maps.googleapis.com/maps/api/js?key=\" + this.GOOGLE_MAP_API_KEY + \"&v=3.exp&libraries=geometry,drawing,places\"}\r\n                            loadingElement={<div style={{ height: `100%` }} />}\r\n                            containerElement={<div style={{ height: `400px` }} />}\r\n                            mapElement={<div style={{ height: `100%` }} />}\r\n                        />\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n\r\n                    {(!this.props.establishment) && <div className=\"col-12 col-lg-6 offset-lg-3\">\r\n                        <button className=\"btn btn-primary btn-block\" disabled={this.disabled()} onClick={() => this.onSubmit()}>\r\n                            <FormattedMessage id=\"Add\" />\r\n                        </button>\r\n                    </div>}\r\n\r\n                </div>\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        establishments: state.establishments,\r\n        establishmentTypes: state.establishmentTypes\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAddEstablishment: (data, successCallback) => dispatch(addEstablishment(data, successCallback)),\r\n        onUpdateEstablishment: (data) => dispatch(updateEstablishment(data)),\r\n        onAddEstablishmentType: (data, successCallback) => dispatch(addEstablishmentType(data, successCallback)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EstablishmentInfo);","import APIUrl from \"../../APIUrl\";\r\nimport axios from 'axios';\r\n\r\nexport const GET_PAYMENT_METHODS = \"GET_PAYMENT_METHODS\";\r\n\r\nfunction getPaymentMethodsAction(paymentMethods){return {type: GET_PAYMENT_METHODS, paymentMethods: paymentMethods}};\r\n\r\nexport const getPaymentMethods = function(){\r\n    return function(dispatch){\r\n        return axios.get(APIUrl.getPaymentMethods)\r\n            .then(function(response){\r\n                dispatch(getPaymentMethodsAction(response.data));\r\n            })\r\n            .catch(function(err){\r\n                throw err;\r\n            });\r\n    };\r\n};\r\n\r\nexport const addPaymentMethod = function(data, successCallback){\r\n    return function(dispatch){\r\n        return axios.post(APIUrl.addPaymentMethod, data)\r\n            .then(function(response){\r\n                dispatch(getPaymentMethods());\r\n                successCallback(response.data);\r\n            })\r\n            .catch(function(err){\r\n                throw err;\r\n            });\r\n    };\r\n};\r\n","import APIUrl from \"../../APIUrl\";\r\nimport axios from 'axios';\r\n\r\nexport const GET_PAYMENT_DEADLINES = \"GET_PAYMENT_DEADLINES\";\r\n\r\nfunction getPaymentDeadlinesAction(paymentDeadlines){return {type: GET_PAYMENT_DEADLINES, paymentDeadlines: paymentDeadlines}};\r\n\r\nexport const getPaymentDeadlines = function(){\r\n    return function(dispatch){\r\n        return axios.get(APIUrl.getPaymentDeadlines)\r\n            .then(function(response){\r\n                dispatch(getPaymentDeadlinesAction(response.data));\r\n            })\r\n            .catch(function(err){\r\n                throw err;\r\n            });\r\n    };\r\n};\r\n\r\nexport const addPaymentDeadline = function(data, successCallback){\r\n    return function(dispatch){\r\n        return axios.post(APIUrl.addPaymentDeadline, data)\r\n            .then(function(response){\r\n                dispatch(getPaymentDeadlines());\r\n                successCallback(response.data);\r\n            })\r\n            .catch(function(err){\r\n                throw err;\r\n            });\r\n    };\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport Util from '../../util/Util';\r\n\r\nclass EstablishmentBudgetModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.START_YEAR = 2019;\r\n        this.END_YEAR = 2025;\r\n        this.YEARS = this.getYears(this.START_YEAR, this.END_YEAR);\r\n        \r\n        this.state = {\r\n            year: this.START_YEAR,\r\n            budget: 0,\r\n\r\n            budgetError: null,\r\n        };\r\n    }\r\n\r\n    onChange(field, value){\r\n        if(field === \"budget\" && !Util.emptyString(value) && parseInt(value) >= 0){\r\n            this.setState({budgetError: null});\r\n        }\r\n\r\n        this.setState({ [field]: value });\r\n    }\r\n\r\n    stopEvent(e) {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    getYears(startYear, endYear){\r\n        var years = [];\r\n\r\n        for(; startYear <= endYear; startYear++){\r\n            years.push(startYear);\r\n        }\r\n\r\n        return years;\r\n    }\r\n\r\n    onComplete(){\r\n        // Value is empty. Don't go further\r\n        if(Util.emptyString(this.state.budget)){\r\n            this.setState({ budgetError: <FormattedMessage id=\"Must.Provide.Value\" /> });\r\n            return;\r\n        }\r\n        if(parseInt(this.state.budget) < 0){\r\n            this.setState({ budgetError: <FormattedMessage id=\"Must.Provide.Positive.Value\" /> });\r\n            return;\r\n        }\r\n\r\n        // If there is already a budget object\r\n        if(this.props.budgets && this.props.budgets.length !== 0){\r\n            var alreadyIn = false;\r\n            for(let budget of this.props.budgets){\r\n                if(parseInt(budget.year) === parseInt(this.state.year)){\r\n                    budget.budget = this.state.budget;\r\n                    alreadyIn = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if(!alreadyIn) this.props.budgets.push({year: this.state.year, budget: this.state.budget});\r\n\r\n            this.props.onComplete(this.props.budgets);\r\n        }\r\n        // Else, add new budget\r\n        else{\r\n            this.props.onComplete([{year: this.state.year, budget: this.state.budget}]);\r\n        }\r\n\r\n    }\r\n\r\n    hasYear(year, budgets){\r\n        if(Util.emptyArray(budgets)) return false;\r\n\r\n        for(let budget of budgets){\r\n            if(parseInt(year) === parseInt(budget.year)) return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getBudget(year){\r\n        for(let budget of this.props.budgets){\r\n            if(parseInt(year) === parseInt(budget.year)) return budget.budget;\r\n        }\r\n    }\r\n\r\n    getDefaultYear(){\r\n        for(let year of this.YEARS){\r\n            if(!this.hasYear(year, this.props.budgets)) return year;\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        let budget = 0;\r\n        let year = this.getDefaultYear();\r\n\r\n        // Modal has been opened to modify a budget: display values\r\n        if(this.props.year){\r\n            budget = this.getBudget(this.props.year);\r\n            year = this.props.year;\r\n        }\r\n\r\n        this.setState({year: year, budget: budget});\r\n    }\r\n\r\n    render() {\r\n        var yearsOptionsNode = this.YEARS.map((year) => {\r\n            let disabled = this.hasYear(year, this.props.budgets);\r\n            return <option key={year} value={year} disabled={disabled}>{year}</option>;\r\n        });\r\n\r\n        var title = <FormattedMessage id=\"Add.Annual.Budget\" />;\r\n        if(this.props.year) title = <FormattedMessage id=\"Modify.Annual.Budget\" />;\r\n\r\n        return (\r\n            <div className=\"modal-bg show\" onClick={() => this.props.close()}>\r\n                <div className=\"modal fade show\">\r\n                    <div className=\"modal-dialog\" role=\"document\" onClick={(e) => this.stopEvent(e)}>\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">{title}</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={() => this.props.close()}>\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div className=\"modal-body\">\r\n\r\n                                <div className=\"form-group row\">\r\n                                    <label htmlFor=\"year\" className=\"col-5 col-form-label\"><FormattedMessage id=\"Year\" /></label>\r\n                                    <div className=\"col-7\">\r\n                                    <select id=\"year\" className=\"form-control\" defaultValue={this.state.year} \r\n                                        disabled={this.props.year}\r\n                                        onChange={(e) => this.onChange(\"year\", e.target.value)}>\r\n                                        {yearsOptionsNode}\r\n                                    </select>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-group row\">\r\n                                    <label htmlFor=\"budget\" className=\"col-5 col-form-label\"><FormattedMessage id=\"Budget\" /></label>\r\n                                    <div className=\"col-7\">\r\n                                        <input id=\"budget\" type=\"number\" className=\"form-control\" value={this.state.budget} \r\n                                            onChange={(e) => this.onChange(\"budget\", e.target.value)}\r\n                                            onBlur={() => this.onComplete()} />\r\n                                        <div className=\"text-danger\"><small>{this.state.budgetError}</small></div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            {(!this.props.year) && \r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={() => this.props.close()}><FormattedMessage id=\"Cancel\" /></button>\r\n                                    <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.onComplete()}><FormattedMessage id=\"Create\" /></button>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        //\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        //\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EstablishmentBudgetModal);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage, FormattedHTMLMessage } from 'react-intl';\r\nimport ConfirmationModal from \"../sub/modals/ConfirmationModal\";\r\n\r\nclass EstablishmentBudgets extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            modal: null,\r\n        };\r\n    }\r\n\r\n    sortByDateAsc(budget1, budget2){\r\n        if (budget1.year < budget2.year) return -1;\r\n        if (budget1.year > budget2.year) return 1;\r\n        return 0;\r\n    }\r\n    \r\n    deleteBudget(year){\r\n        var sendUpdatedBudget = () => {\r\n            for(var i=0; i<this.props.budgets.length; i++){\r\n                if(parseInt(this.props.budgets[i].year) === parseInt(year)){\r\n                    this.props.budgets.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n    \r\n            this.props.updateBudgets(this.props.budgets);\r\n        };\r\n\r\n        this.setState({\r\n            modal: <ConfirmationModal isOpen={true}\r\n                content={<FormattedHTMLMessage id=\"Remove.Row.Confirmation\" />}\r\n                successCallback={() => sendUpdatedBudget()}\r\n                closeModal={() => this.closeModal()} />\r\n        });\r\n    }\r\n\r\n    closeModal(){\r\n        this.setState({ modal: null });\r\n    }\r\n\r\n    editBudget(year){\r\n        this.props.editBudget(year);\r\n    }\r\n\r\n    render() {\r\n        let budgets = this.props.budgets.sort(this.sortByDateAsc);\r\n\r\n        let budgetsNode = budgets.map((budget) => {\r\n            return (\r\n                <tr key={budget.year}>\r\n                    <th>{budget.year}</th>\r\n                    <th>{budget.budget}€</th>\r\n                    <td className=\"text-center\">\r\n                        <i className=\"fa fa-edit icon-big\" onClick={() => this.editBudget(budget.year)}></i>\r\n                        <i className=\"fa fa-trash icon-big\" onClick={(e) => this.deleteBudget(budget.year)}></i>\r\n                    </td>\r\n                </tr>\r\n            );\r\n\r\n        });\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.modal}\r\n                <table className=\"table table-striped table-bordered col-12\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th><FormattedHTMLMessage id=\"Year\" /></th>\r\n                            <th><FormattedHTMLMessage id=\"Budget\" /></th>\r\n                            <th><FormattedMessage id=\"Actions\" /></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {budgetsNode}\r\n                    </tbody>\r\n                </table>\r\n                {this.state.modal}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.user.lang,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EstablishmentBudgets);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport ComboxBox from \"../sub/ComboBox\";\r\nimport { addPaymentMethod } from '../../actions/configurables/paymentMethods';\r\nimport { addPaymentDeadline } from '../../actions/configurables/paymentDeadlines';\r\nimport { updateEstablishmentSettings } from '../../actions/establishments/establishmentSettings';\r\nimport Util from '../../util/Util';\r\nimport EstablishmentBudgetModal from './EstablishmentBudgetModal';\r\nimport EstablishmentBudgets from './EstablishmentBudgets';\r\n\r\nclass EstablishmentConfiguration extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            payment_method_id: \"\",\r\n            payment_deadline_id: \"\",\r\n            mercurial_id: \"\",\r\n            shipping_delay: \"\",\r\n            min_order_amount: \"\",\r\n\r\n            modal: null,\r\n            disabled: false\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.fixWithDefaultValues();\r\n    }\r\n\r\n    fixWithDefaultValues() {\r\n        if (!this.props.establishmentSettings) return;\r\n\r\n        for (let key of Object.keys(this.state)) {\r\n            if (Util.emptyString(this.state[key]) && !Util.emptyString(this.props.establishmentSettings[key])) {\r\n                this.setState({ [key]: this.props.establishmentSettings[key] });\r\n            }\r\n        }\r\n    }\r\n\r\n    onFieldChange(field, value) {\r\n        this.setState({ [field]: value });\r\n    }\r\n\r\n    sendUpdate(field, value) {\r\n        var data = {\r\n            establishmentId: this.props.establishment._id,\r\n            updatedField: field,\r\n            updatedValue: value\r\n        };\r\n\r\n        // Send to BE\r\n        this.props.onUpdateEstablishmentSettings(data, () => this.fixWithDefaultValues());\r\n    }\r\n\r\n    openAnnualBudgetModal(year) {\r\n        var budgets = (this.props.establishmentSettings) ? this.props.establishmentSettings.budgets : null;\r\n\r\n        this.setState({\r\n            modal: <EstablishmentBudgetModal\r\n                budgets={budgets}\r\n                year={year}\r\n                close={() => this.closeModal()}\r\n                onComplete={(budgets) => {\r\n                    this.sendUpdate(\"budgets\", budgets);\r\n                    this.closeModal();\r\n                }} />\r\n        });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({\r\n            modal: null\r\n        });\r\n    }\r\n\r\n    render() {\r\n        var now = new Date(Date.now());\r\n        let mercurialSelectOptions = this.props.mercurials.map((mercurial) => {\r\n            if(new Date(mercurial.start_date) > now || new Date(mercurial.end_date) < now) return null;\r\n            \r\n            let version = null;\r\n            if(mercurial.version !== 1) version = \"(v\" + mercurial.version + \")\";\r\n\r\n            return (<option key={mercurial._id} value={mercurial._id}>{mercurial.name} {version} </option>);\r\n        });\r\n\r\n        let budgets = null;\r\n        if (this.props.establishmentSettings && this.props.establishmentSettings.budgets && this.props.establishmentSettings.budgets.length > 0) {\r\n            budgets = (\r\n                <EstablishmentBudgets\r\n                    budgets={this.props.establishmentSettings.budgets}\r\n                    editBudget={(year) => this.openAnnualBudgetModal(year)}\r\n                    updateBudgets={(budgets) => this.sendUpdate(\"budgets\", budgets)} />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <div className=\"row mb-3\">\r\n\r\n                    <div className=\"col-12 col-lg-12 col-xl-9\">\r\n\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"conf-payment-method\" className=\"col-12 col-md-7 col-form-label\"><FormattedMessage id=\"Payment.Method\" /></label>\r\n                            <div className=\"col-12 col-md-5\">\r\n                                <ComboxBox\r\n                                    menuPlacement=\"auto\"\r\n                                    onChange={(value) => this.onFieldChange(\"payment_method_id\", value)}\r\n                                    onBlur={(value) => this.sendUpdate(\"payment_method_id\", value)}\r\n                                    defaultOption={this.state.payment_method_id}\r\n                                    options={this.props.paymentMethods}\r\n                                    onCreateOption={(data, successCallback) => this.props.onAddPaymentMethod(data, successCallback)} />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"conf-payment-deadline\" className=\"col-12 col-md-7 col-form-label\"><FormattedMessage id=\"Payments.Deadline\" /></label>\r\n                            <div className=\"col-12 col-md-5\">\r\n                                <ComboxBox\r\n                                    menuPlacement=\"auto\"\r\n                                    onChange={(value) => this.onFieldChange(\"payment_deadline_id\", value)}\r\n                                    onBlur={(value) => this.sendUpdate(\"payment_deadline_id\", value)}\r\n                                    defaultOption={this.state.payment_deadline_id}\r\n                                    options={this.props.paymentDeadlines}\r\n                                    onCreateOption={(data, successCallback) => this.props.onAddPaymentDeadline(data, successCallback)} />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"conf-mercurial\" className=\"col-12 col-md-7 col-form-label\"><FormattedMessage id=\"Mercurial\" /></label>\r\n                            <div className=\"col-12 col-md-5\">\r\n                                <select id=\"conf-mercurial\" className=\"form-control w-100\"\r\n                                    defaultValue={this.state.mercurial_id}\r\n                                    onChange={(e) => this.onFieldChange(\"mercurial_id\", e.target.value)}\r\n                                    onBlur={(e) => this.sendUpdate(\"mercurial_id\", e.target.value)}>\r\n                                    <option value=\"\">{this.props.intl.formatMessage({ id: \"Select\" })}</option>\r\n                                    {mercurialSelectOptions}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"shippingDelay\" className=\"col-12 col-md-7 col-form-label\"><FormattedMessage id=\"Shipping.Delay\" /></label>\r\n                            <div className=\"col-12 col-md-5\">\r\n                                <input type=\"number\" className=\"form-control\" id=\"shippingDelay\" min=\"0\" value={this.state.shipping_delay}\r\n                                    onChange={(e) => this.onFieldChange('shipping_delay', e.target.value)}\r\n                                    onBlur={(e) => this.sendUpdate('shipping_delay', e.target.value)} />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"minPrice\" className=\"col-12 col-md-7 col-form-label\"><FormattedMessage id=\"Min.Price\" /></label>\r\n                            <div className=\"col-12 col-md-5\">\r\n                                <input type=\"number\" className=\"form-control\" id=\"minPrice\" min=\"0\" value={this.state.min_order_amount}\r\n                                    onChange={(e) => this.onFieldChange('min_order_amount', e.target.value)}\r\n                                    onBlur={(e) => this.sendUpdate('min_order_amount', e.target.value)} />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"shippingCost\" className=\"col-10 col-sm-11 col-md-7 col-form-label\"><FormattedMessage id=\"Annual.Budgets\" /></label>\r\n\r\n                            <div className=\"col-2 col-sm-1 col-md-5\">\r\n                                <i className=\"fa fa-plus-square icon-big hoverable clickable p-0 pt-2\"  onClick={(e) => this.openAnnualBudgetModal()}></i>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {budgets}\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                {this.state.modal}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        paymentMethods: state.paymentMethods,\r\n        paymentDeadlines: state.paymentDeadlines,\r\n        mercurials: state.mercurials\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAddPaymentMethod: (data, successCallback) => dispatch(addPaymentMethod(data, successCallback)),\r\n        onAddPaymentDeadline: (data, successCallback) => dispatch(addPaymentDeadline(data, successCallback)),\r\n        onUpdateEstablishmentSettings: (data, successCallback) => dispatch(updateEstablishmentSettings(data, successCallback)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(EstablishmentConfiguration));\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport Util from '../../util/Util';\r\nimport {addClient, updateClient} from '../../actions/clients/clients';\r\nimport {checkIfUsernameExists, checkIfEmailExists} from '../../actions/user/user';\r\n\r\nclass UserModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if(this.props.user){\r\n            var user = this.props.user;\r\n            this.state = {\r\n                username: user.username,\r\n                name: user.name,\r\n                firstname: user.first_name,\r\n                function: user.function,\r\n                email: user.email,\r\n                phone: user.phone,\r\n                validator: user.validator,\r\n    \r\n                // Errors\r\n                usernameError: null,\r\n                nameError: null,\r\n                firstnameError: null,\r\n                emailError: null,\r\n    \r\n                disabled: false,\r\n            };\r\n        }else{\r\n            this.state = {\r\n                username: \"\",\r\n                name: \"\",\r\n                firstname: \"\",\r\n                function: \"\",\r\n                email: \"\",\r\n                phone: \"\",\r\n                validator: false,\r\n    \r\n                // Errors\r\n                usernameError: null,\r\n                nameError: null,\r\n                firstnameError: null,\r\n                emailError: null,\r\n    \r\n                disabled: false,\r\n            };\r\n        }\r\n        \r\n    }\r\n\r\n    scanErrors(noErrorCallback){\r\n        // Check for variables emptyness\r\n        var isUsernameEmpty = Util.emptyString(this.state.username);\r\n        var isNameEmpty = Util.emptyString(this.state.name);\r\n        var isFirstNameEmpty = Util.emptyString(this.state.firstname);\r\n        var isEmailEmpty = Util.emptyString(this.state.email);\r\n\r\n        // Empty fields errors\r\n        if(isUsernameEmpty){this.setState({usernameError: <FormattedMessage id=\"Empty.Username\" />});}\r\n        if(isNameEmpty){this.setState({nameError: <FormattedMessage id=\"Empty.Name\" />});}\r\n        if(isFirstNameEmpty){this.setState({firstnameError: <FormattedMessage id=\"Empty.FirstName\" />});}\r\n        if(isEmailEmpty){this.setState({emailError: <FormattedMessage id=\"Empty.Email\" />});}\r\n        \r\n        // Invalid email error \r\n        if(!Util.isEmail(this.state.email)){this.setState({emailError: <FormattedMessage id=\"Invalid.Email\" />});}\r\n\r\n        // We are modifying a user. No need to check for email & username unicity\r\n        if(this.props.user){\r\n            if(!isUsernameEmpty && !isNameEmpty && !isFirstNameEmpty && !isFirstNameEmpty) return noErrorCallback();\r\n            else return;\r\n        }\r\n\r\n        // Make sure username is unique\r\n        this.props.onCheckIfUsernameExists(\r\n            this.state.username, \r\n            () => {this.setState({usernameError: <FormattedMessage id=\"Username.Already.Exists\" />})},\r\n            // Make sure email is unique\r\n            () => this.props.onCheckIfEmailExists(\r\n                this.state.email, \r\n                () => {this.setState({emailError: <FormattedMessage id=\"Email.Already.Exists\" />})},\r\n                () => {if(!isUsernameEmpty && !isNameEmpty && !isFirstNameEmpty && !isFirstNameEmpty) return noErrorCallback()}\r\n            )\r\n        );\r\n    }\r\n\r\n    onComplete(){\r\n        var createUser = () => {\r\n            var user = {\r\n                username: this.state.username,\r\n                name: this.state.name,\r\n                first_name: this.state.firstname,\r\n                function: this.state.function,\r\n                email: this.state.email,\r\n                validator: this.state.validator,\r\n                phone: this.state.phone,\r\n                establishment_id: this.props.establishment._id\r\n            };\r\n    \r\n            this.setState({disabled: true});\r\n    \r\n            this.props.onAddClient(user, () => this.props.close());\r\n        };\r\n\r\n        // Validate fields & send to BE\r\n        this.scanErrors(createUser);\r\n    }\r\n\r\n    update(field){\r\n        if(!this.props.user) return;\r\n\r\n        var updateValue = () => {\r\n            var data = {\r\n                clientId: this.props.user._id,\r\n                updatedField: field,\r\n                updatedValue: this.state[field]\r\n            };\r\n            \r\n            this.props.onUpdateClient(data);\r\n        }\r\n\r\n        // Validate fields & send to BE\r\n        this.scanErrors(updateValue);\r\n    }\r\n\r\n    onFieldChange(field, value) {\r\n        if(field === \"validator\") this.setState({ \"validator\": !this.state.validator });\r\n        else this.setState({ [field]: value });\r\n\r\n        // Empty fields errors\r\n        if(field === \"name\" && !Util.emptyString(value)) this.setState({nameError: null});\r\n        if(field === \"firstname\" && !Util.emptyString(value)) this.setState({firstnameError: null});\r\n\r\n        // Check if username is not empty and not already taken\r\n        if(field === \"username\" && !Util.emptyString(value)){\r\n            this.setState({usernameError: null});\r\n            this.props.onCheckIfUsernameExists(value, () => {this.setState({usernameError: <FormattedMessage id=\"Username.Already.Exists\" />})}, () => {});\r\n        } \r\n\r\n        // Check if email is not empty and not already taken\r\n        if(field === \"email\" && !Util.emptyString(value)){\r\n            this.setState({emailError: null});\r\n            this.props.onCheckIfEmailExists(value, () => {this.setState({emailError: <FormattedMessage id=\"Email.Already.Exists\" />})}, () => {});\r\n        }\r\n    }\r\n\r\n    stopEvent(e){\r\n        e.stopPropagation();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"modal-bg show\" onClick={() => this.props.close()}>\r\n                <div className=\"modal fade show\">\r\n                    <div className=\"modal-dialog\" role=\"document\" onClick={(e) => this.stopEvent(e)}>\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                                    {(this.props.user) ? <FormattedMessage id=\"Modify.User\" /> : <FormattedMessage id=\"Add.User\" />}\r\n                                </h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={() => this.props.close()}>\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div className=\"modal-body\">\r\n\r\n                                <div className=\"form-group row\">\r\n                                    <label htmlFor=\"user-username\" className=\"col-12 col-md-5 col-form-label\"><FormattedMessage id=\"Username\" /></label>\r\n                                    <div className=\"col-12 col-md-7\">\r\n                                        <input type=\"text\" className=\"form-control\" id=\"user-username\" autoComplete=\"off\"\r\n                                            value={this.state.username}\r\n                                            disabled={this.props.user}\r\n                                            onChange={(e) => this.onFieldChange(\"username\", e.target.value)} />\r\n                                        <div className=\"text-danger\"><small>{this.state.usernameError}</small></div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-group row\">\r\n                                    <label htmlFor=\"user-name\" className=\"col-12 col-md-5 col-form-label\"><FormattedMessage id=\"Name\" /></label>\r\n                                    <div className=\"col-12 col-md-7\">\r\n                                        <input type=\"text\" className=\"form-control\" id=\"user-name\" autoComplete=\"off\"\r\n                                            value={this.state.name}\r\n                                            onChange={(e) => this.onFieldChange(\"name\", e.target.value)}\r\n                                            onBlur={(e) => this.update(\"name\")} />\r\n                                        <div className=\"text-danger\"><small>{this.state.nameError}</small></div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-group row\">\r\n                                    <label htmlFor=\"user-firstname\" className=\"col-12 col-md-5 col-form-label\"><FormattedMessage id=\"First.Name\" /></label>\r\n                                    <div className=\"col-12 col-md-7\">\r\n                                        <input type=\"text\" className=\"form-control\" id=\"user-firstname\" autoComplete=\"off\"\r\n                                            value={this.state.firstname}\r\n                                            onChange={(e) => this.onFieldChange(\"firstname\", e.target.value)}\r\n                                            onBlur={(e) => this.update(\"firstname\")} />\r\n                                        <div className=\"text-danger\"><small>{this.state.firstnameError}</small></div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-group row\">\r\n                                    <label htmlFor=\"user-function\" className=\"col-12 col-md-5 col-form-label\"><FormattedMessage id=\"Function\" /></label>\r\n                                    <div className=\"col-12 col-md-7\">\r\n                                        <input type=\"text\" className=\"form-control\" id=\"user-function\" autoComplete=\"off\"\r\n                                            value={this.state.function}\r\n                                            onChange={(e) => this.onFieldChange(\"function\", e.target.value)}\r\n                                            onBlur={(e) => this.update(\"function\")} />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-group row\">\r\n                                    <label htmlFor=\"user-email\" className=\"col-12 col-md-5 col-form-label\"><FormattedMessage id=\"Email\" /></label>\r\n                                    <div className=\"col-12 col-md-7\">\r\n                                        <input type=\"text\" className=\"form-control\" id=\"user-email\" autoComplete=\"off\"\r\n                                            value={this.state.email}\r\n                                            disabled={this.props.user}\r\n                                            onChange={(e) => this.onFieldChange(\"email\", e.target.value)} />\r\n                                        <div className=\"text-danger\"><small>{this.state.emailError}</small></div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-group row\">\r\n                                    <label htmlFor=\"user-phone\" className=\"col-12 col-md-5 col-form-label\"><FormattedMessage id=\"Phone\" /></label>\r\n                                    <div className=\"col-12 col-md-7\">\r\n                                        <input type=\"text\" className=\"form-control\" id=\"user-phone\" autoComplete=\"off\"\r\n                                            value={this.state.phone}\r\n                                            onChange={(e) => this.onFieldChange(\"phone\", e.target.value)}\r\n                                            onBlur={(e) => this.update(\"phone\")} />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-group row\">\r\n                                    <label className=\"col-12 col-md-5 custom-control-label no-after no-before\"><FormattedMessage id=\"Validator\" /></label>\r\n                                    <div className=\"col-12 col-md-7\">\r\n                                        <div className=\"custom-control custom-switch mx-auto switch-success text-left\">\r\n                                            <input onChange={(e) => this.onFieldChange(\"validator\", e.target.value)}\r\n                                                type=\"checkbox\"\r\n                                                id=\"validator-switch\"\r\n                                                className=\"custom-control-input switch-bg-blue\"\r\n                                                checked={this.state.validator}\r\n                                                onBlur={(e) => this.update(\"validator\")} />\r\n                                                <label className=\"custom-control-label\" htmlFor=\"validator-switch\"></label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            {(!this.props.user) && \r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={() => this.props.close()}><FormattedMessage id=\"Cancel\" /></button>\r\n                                    <button type=\"button\" className=\"btn btn-primary\" disabled={this.state.disabled} onClick={() => this.onComplete()}><FormattedMessage id=\"Add\" /></button>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        //\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAddClient: (data, successCallback) => dispatch(addClient(data, successCallback)),\r\n        onCheckIfUsernameExists: (username, existsCallback, noExistsCallback) => dispatch(checkIfUsernameExists(username, existsCallback, noExistsCallback)),\r\n        onCheckIfEmailExists: (email, existsCallback, noExistsCallback) => dispatch(checkIfEmailExists(email, existsCallback, noExistsCallback)),\r\n        onUpdateClient: (data) => dispatch(updateClient(data))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserModal);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport UserModal from './UserModal';\r\n\r\nclass EstablishmentUsers extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            modal: null\r\n        };\r\n    }\r\n\r\n    openModal(user){\r\n        this.setState({\r\n            modal: (\r\n                <UserModal \r\n                    user={user}\r\n                    establishment={this.props.establishment}\r\n                    close={() => this.closeModal()} />\r\n            )\r\n        });\r\n    }\r\n\r\n    closeModal(){\r\n        this.setState({modal: null});\r\n    }\r\n\r\n    render() {\r\n        let clientsNode = this.props.clients.map((client) => {\r\n            return (\r\n                <tr className=\"break-word\" key={client._id}>\r\n                    <td className=\"d-none d-lg-table-cell\">{client.username}</td>\r\n                    <td>{client.name}</td>\r\n                    <td>{client.first_name}</td>\r\n                    <td className=\"d-none d-lg-table-cell\">{client.email}</td>\r\n                    <td className=\"d-none d-lg-table-cell\">{client.function}</td>\r\n                    <td className=\"d-none d-md-table-cell text-center\">{(client.validator) ? <i className=\"fa fa-check\"></i> : <i className=\"fa fa-close\"></i>}</td>\r\n                    <td className=\"text-center\">\r\n                        <i className=\"fa fa-edit icon-big\" onClick={(e) => this.openModal(client)}></i>\r\n                    </td>\r\n                </tr>\r\n            );\r\n        });\r\n\r\n        let tableStyle = \"table table-striped table-bordered\";\r\n        if(this.props.cssStyle) tableStyle = this.props.cssStyle;\r\n\r\n        return (\r\n\r\n            <React.Fragment>\r\n                <table className={tableStyle}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"d-none d-lg-table-cell\"><FormattedMessage id=\"Username\" /></th>\r\n                            <th className=\"\"><FormattedMessage id=\"Name\" /></th>\r\n                            <th className=\"\"><FormattedMessage id=\"First.Name\" /></th>\r\n                            <th className=\"d-none d-lg-table-cell\"><FormattedMessage id=\"Email\" /></th>\r\n                            <th className=\"d-none d-lg-table-cell\"><FormattedMessage id=\"Function\" /></th>\r\n                            <th className=\"d-none d-md-table-cell\"><FormattedMessage id=\"Validator\" /></th>\r\n                            <th><FormattedMessage id=\"Actions\" /></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                        {clientsNode}\r\n\r\n                    </tbody>\r\n                </table>\r\n\r\n                {this.state.modal}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        //\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        //\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EstablishmentUsers);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport UserModal from './UserModal';\r\nimport Users from './Users';\r\n\r\nclass EstablishmentUsers extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            modal: null\r\n        };\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ modal: null });\r\n    }\r\n\r\n    openModal(){\r\n        this.setState({\r\n            modal: (\r\n                <UserModal \r\n                    establishment={this.props.establishment}\r\n                    close={() => this.closeModal()} />\r\n            )\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.props.clients.length === 0) {\r\n            return (\r\n                <React.Fragment>\r\n                    <span href=\"#/\" className=\"iconed-btn hoverable clickable\" onClick={(e) => this.openModal()}>\r\n                        <span className=\"mb-3\">\r\n                            <i className=\"fa fa-plus-circle icon-big text-dark\"></i>\r\n                            <p><FormattedMessage id=\"User.Add\" /></p>\r\n                        </span>\r\n                    </span>\r\n                    <div className=\"alert alert-secondary\" role=\"alert\">\r\n                        <FormattedMessage id=\"Empty.Users\" />\r\n                    </div>\r\n\r\n                    {this.state.modal}\r\n\r\n                </React.Fragment>\r\n            );\r\n        };\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <span href=\"#/\" className=\"iconed-btn hoverable clickable\" onClick={(e) => this.openModal()}>\r\n                    <span className=\"mb-3\">\r\n                        <i className=\"fa fa-plus-circle icon-big text-dark\"></i>\r\n                        <p><FormattedMessage id=\"User.Add\" /></p>\r\n                    </span>\r\n                </span>\r\n\r\n                <Users clients={this.props.clients} />\r\n\r\n                {this.state.modal}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        //\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        //\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EstablishmentUsers);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport Util from '../../util/Util';\r\nimport { updateEstablishmentSettings } from '../../actions/establishments/establishmentSettings';\r\n\r\nclass EstablishmentDMModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            material_type_id: \"\",\r\n            daily_fee: 0,\r\n            long_term_fee: 0,\r\n            maintenance_fee: 0\r\n        };\r\n\r\n        // Update\r\n        if (this.props.index !== null) {\r\n            var materialType = this.props.establishmentSettings.materials_types[this.props.index];\r\n\r\n            this.state = {\r\n                material_type_id: materialType.material_type_id,\r\n                daily_fee: materialType.daily_fee,\r\n                long_term_fee: materialType.long_term_fee,\r\n                maintenance_fee: materialType.maintenance_fee\r\n            };\r\n        }\r\n    }\r\n\r\n    close() {\r\n        this.props.close();\r\n    }\r\n\r\n    stopEvent(e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    checkMaterialsTypes(materialTypeId) {\r\n        if (this.props.establishmentSettings.materials_types) {\r\n            for (var mT of this.props.establishmentSettings.materials_types) {\r\n                if (mT.material_type_id === materialTypeId) return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    add() {\r\n        if (this.hasEmptyField()) return;\r\n\r\n        let materialsTypes = this.props.establishmentSettings.materials_types || [];\r\n\r\n        var materialType = {\r\n            material_type_id: this.state.material_type_id,\r\n            daily_fee: parseInt(this.state.daily_fee),\r\n            long_term_fee: parseInt(this.state.long_term_fee),\r\n            maintenance_fee: parseInt(this.state.maintenance_fee)\r\n        };\r\n\r\n        materialsTypes.push(materialType);\r\n\r\n        var data = {\r\n            establishmentId: this.props.establishment._id,\r\n            updatedField: \"materials_types\",\r\n            updatedValue: materialsTypes,\r\n        };\r\n\r\n        this.props.onUpdateEstablishmentSettings(data, () => this.close());\r\n    }\r\n\r\n    update() {\r\n        if(this.props.index === undefined || this.props.index === null) return;\r\n\r\n        if (this.hasEmptyField()) return;\r\n\r\n        let materialsTypes = this.props.establishmentSettings.materials_types;\r\n\r\n        materialsTypes[this.props.index][\"material_type_id\"] = this.state.material_type_id;\r\n        materialsTypes[this.props.index][\"daily_fee\"] = parseInt(this.state.daily_fee);\r\n        materialsTypes[this.props.index][\"long_term_fee\"] = parseInt(this.state.long_term_fee);\r\n        materialsTypes[this.props.index][\"maintenance_fee\"] = parseInt(this.state.maintenance_fee);\r\n\r\n        var data = {\r\n            establishmentId: this.props.establishmentSettings.establishment_id,\r\n            updatedField: \"materials_types\",\r\n            updatedValue: materialsTypes,\r\n        };\r\n\r\n        this.props.onUpdateEstablishmentSettings(data, () => this.close());\r\n    }\r\n\r\n    hasEmptyField() {\r\n        return (Util.emptyString(this.state.material_type_id) ||\r\n            Util.emptyString(this.state.daily_fee) ||\r\n            Util.emptyString(this.state.long_term_fee) ||\r\n            Util.emptyString(this.state.maintenance_fee));\r\n\r\n    }\r\n\r\n    onChange(key, value) {\r\n        this.setState({ [key]: value });\r\n    }\r\n\r\n    render() {\r\n        let typeSelectOptions = null;\r\n\r\n        if (this.props.materialsTypes.length > 0) {\r\n            typeSelectOptions = this.props.materialsTypes.map((materialType) => {\r\n                var disabled = this.checkMaterialsTypes(materialType._id);\r\n                return (<option key={materialType._id} value={materialType._id} disabled={disabled}>{materialType.name}</option>);\r\n            });\r\n        }\r\n\r\n        var title = <FormattedMessage id=\"Add.Material.Fee\" />;\r\n        if(this.props.index !== undefined && this.props.index !== null) title = <FormattedMessage id=\"Modify.Material.Fee\" />;\r\n\r\n        return (\r\n            <div className=\"modal-bg show\" onClick={() => this.props.close()}>\r\n                <div className=\"modal fade show\">\r\n                    <div className=\"modal-dialog\" role=\"document\" onClick={(e) => this.stopEvent(e)}>\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">{title}</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={() => this.props.close()}>\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div className=\"modal-body\">\r\n\r\n                                <div className=\"form-group row\">\r\n                                    <label htmlFor=\"materialType\" className=\"col-12 col-md-5 col-form-label\"><FormattedMessage id=\"Type\" /></label>\r\n                                    <div className=\"col-12 col-md-7\">\r\n                                        <select id=\"materialType\" className=\"form-control\" value={this.state.material_type_id}\r\n                                                onBlur={() => this.update()}\r\n                                                onChange={(e) => this.onChange(\"material_type_id\", e.target.value)}>\r\n                                                <option value=\"\"></option>\r\n                                                {typeSelectOptions}\r\n                                            </select>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-group row\">\r\n                                    <label htmlFor=\"dailyFee\" className=\"col-12 col-md-5 col-form-label\"><FormattedMessage id=\"Daily.Fee\" /></label>\r\n                                    <div className=\"col-12 col-md-7\">\r\n                                        <input type=\"number\" className=\"form-control\" min=\"0\" id=\"dailyFee\" value={this.state.daily_fee}\r\n                                            onBlur={() => this.update()}\r\n                                            onChange={(e) => this.onChange(\"daily_fee\", e.target.value)} />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-group row\">\r\n                                    <label htmlFor=\"longTermFee\" className=\"col-12 col-md-5 col-form-label\"><FormattedMessage id=\"Long.Term.Fee\" /></label>\r\n                                    <div className=\"col-12 col-md-7\">\r\n                                        <input type=\"number\" className=\"form-control\" min=\"0\" id=\"longTermFee\" value={this.state.long_term_fee}\r\n                                            onBlur={() => this.update()}\r\n                                            onChange={(e) => this.onChange(\"long_term_fee\", e.target.value)} />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-group row\">\r\n                                    <label htmlFor=\"maintenanceFee\" className=\"col-12 col-md-5 col-form-label\"><FormattedMessage id=\"Maintenance.Fee\" /></label>\r\n                                    <div className=\"col-12 col-md-7\">\r\n                                    <input type=\"number\" className=\"form-control\" min=\"0\" id=\"maintenanceFee\" value={this.state.maintenance_fee}\r\n                                            onBlur={() => this.update()}\r\n                                            onChange={(e) => this.onChange(\"maintenance_fee\", e.target.value)} />\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            {(this.props.index === undefined || this.props.index === null) &&\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={() => this.props.close()}><FormattedMessage id=\"Cancel\" /></button>\r\n                                    <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.add()} disabled={this.hasEmptyField()}><FormattedMessage id=\"Add\" /></button>\r\n                                </div>\r\n                            }\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        materialsTypes: state.materialsTypes,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onUpdateEstablishmentSettings: (data, successCallback) => dispatch(updateEstablishmentSettings(data, successCallback)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EstablishmentDMModal);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport {updateEstablishmentSettings} from '../../actions/establishments/establishmentSettings';\r\n\r\nclass EstablishmentDMRow extends React.Component {\r\n\r\n    deleteMaterialType(field, newMaterialsTypes){\r\n        var data = {\r\n            establishmentId: this.props.establishmentSettings.establishment_id,\r\n            updatedField: field,\r\n            updatedValue: newMaterialsTypes,\r\n        };\r\n        this.props.onUpdateEstablishmentSettings(data);\r\n    }\r\n\r\n    splice(array, index){\r\n      array.splice(index, 1);\r\n      return array;\r\n    }\r\n\r\n    render() {\r\n        // 'Delete shipping setting' modal setup\r\n        var modalTitle = <FormattedMessage id=\"Confirm\" />;\r\n        var modalContent = <FormattedMessage id=\"Remove.Row.Confirmation\" />;\r\n        var successCallbackDelete = () => this.deleteMaterialType(\"materials_types\", this.splice(this.props.establishmentSettings.materials_types, this.props.index));\r\n\r\n        return (\r\n            <React.Fragment>\r\n                        <tr>\r\n                            <td>{this.props.materialName}</td>\r\n                            <td>{this.props.materialType.daily_fee}</td>\r\n                            <td>{this.props.materialType.long_term_fee}</td>\r\n                            <td>{this.props.materialType.maintenance_fee}</td>\r\n                            <td>\r\n                              <i className=\"fa fa-edit icon-big\" onClick={(e) => this.props.openEstablishmentDMModal(this.props.index)}></i>\r\n                              <i className=\"fa fa-trash icon-big\" onClick={(e) => this.props.openConfModal(modalTitle, modalContent, successCallbackDelete)}></i>\r\n                            </td>\r\n                        </tr>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        //\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onUpdateEstablishmentSettings: (data) => dispatch(updateEstablishmentSettings(data)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EstablishmentDMRow);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport ConfirmationModal from '../sub/modals/ConfirmationModal';\r\nimport EstablishmentDMModal from './EstablishmentDMModal';\r\nimport EstablishmentDMRow from './EstablishmentDMRow'\r\n\r\nclass EstablishmentDMTable extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            modal: null,\r\n        };\r\n    }\r\n\r\n    openEstablishmentDMModal(index) {\r\n      this.setState({\r\n        modal: <EstablishmentDMModal\r\n          isOpen={true}\r\n          index={index}\r\n          establishment={this.props.establishment}\r\n          establishmentSettings={this.props.establishmentSettings}\r\n          close={() => this.closeModal()} />\r\n      });\r\n    }\r\n\r\n    openConfModal(title, content, successCallback) {\r\n        this.setState({\r\n            modal: <ConfirmationModal isOpen={true}\r\n                title={title}\r\n                content={content}\r\n                successCallback={successCallback}\r\n                closeModal={() => this.closeModal()} />\r\n        });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ modal: null });\r\n    }\r\n\r\n    getMaterialName(materialTypeId){\r\n        for(var materialType of this.props.materialsTypes){\r\n          if(materialType._id === materialTypeId) return materialType.name;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var index = -1;\r\n        let establishmentDMRowNode = this.props.establishmentSettings.materials_types.map((materialType) => {\r\n            index++\r\n            return <EstablishmentDMRow\r\n                      key={materialType.material_type_id}\r\n                      index={index}\r\n                      establishmentSettings={this.props.establishmentSettings}\r\n                      openConfModal={(title, content, successCallback) => this.openConfModal(title, content, successCallback)}\r\n                      openEstablishmentDMModal={(index) => this.openEstablishmentDMModal(index)}\r\n                      materialType={materialType}\r\n                      materialName={this.getMaterialName(materialType.material_type_id)}/>;\r\n        });\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <table className=\"table table-striped table-bordered col-12\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th><FormattedMessage id=\"Type\" /></th>\r\n                            <th><FormattedMessage id=\"Daily.Fee\" /></th>\r\n                            <th><FormattedMessage id=\"Long.Term.Fee\" /></th>\r\n                            <th><FormattedMessage id=\"Maintenance.Fee\" /></th>\r\n                            <th><FormattedMessage id=\"Actions\" /></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {establishmentDMRowNode}\r\n                    </tbody>\r\n                </table>\r\n                {this.state.modal}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        materialsTypes: state.materialsTypes,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        //\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EstablishmentDMTable);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport EstablishmentDMModal from './EstablishmentDMModal';\r\nimport EstablishmentDMTable from './EstablishmentDMTable';\r\n\r\nclass EstablishmentDM extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            modal: null\r\n        };\r\n    }\r\n\r\n    openEstablishmentDMModal() {\r\n      this.setState({\r\n        modal: <EstablishmentDMModal\r\n          isOpen={true}\r\n          index={null}\r\n          establishment={this.props.establishment}\r\n          establishmentSettings={this.props.establishmentSettings}\r\n          close={() => this.closeModal()} />\r\n      });\r\n    }\r\n\r\n    closeModal() {\r\n      this.setState({ modal: null });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <span onClick={(e) => this.openEstablishmentDMModal()} className=\"iconed-btn nostyle-a hoverable clickable\">\r\n                  <span className=\"mt-3 mb-3\">\r\n                    <i className=\"fa fa-plus-square icon-big text-dark\"></i>\r\n                    <p><FormattedMessage id=\"Add.Material.Fee\" /></p>\r\n                  </span>\r\n                </span>\r\n\r\n                {(this.props.establishmentSettings &&\r\n                    this.props.establishmentSettings.materials_types &&\r\n                      this.props.establishmentSettings.materials_types.length > 0) &&\r\n                        <EstablishmentDMTable establishmentSettings={this.props.establishmentSettings}  />}\r\n\r\n                {this.state.modal}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        //\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        //\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EstablishmentDM);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport EstablishmentInfo from './EstablishmentInfo';\r\nimport EstablishmentConfiguration from './EstablishmentConfiguration';\r\nimport EstablishmentUsers from './EstablishmentUsers';\r\nimport EstablishmentDM from './EstablishmentDM';\r\n\r\nclass ClientsModalAdmin extends React.Component {\r\n\r\n    close(){\r\n        this.props.closeModal();\r\n    }\r\n\r\n    confirm(){\r\n        this.props.successCallback();\r\n        this.close();\r\n    }\r\n\r\n    stopEvent(e){\r\n\t\te.preventDefault();\r\n\t\te.stopPropagation();\r\n    }\r\n\r\n    getEstablishmentSettings(establishmentId){\r\n        for(let establishmentSettings of this.props.establishmentsSettings){\r\n            if(establishmentSettings.establishment_id === establishmentId) return establishmentSettings;\r\n        }\r\n    }\r\n\r\n    getClients(establishmentId){\r\n        var clients = [];\r\n\r\n        for(let client of this.props.clients){\r\n            if(client.establishment_id === establishmentId){\r\n                clients.push(client);\r\n            }\r\n        }\r\n\r\n        return clients;\r\n    }\r\n\r\n    render() {\r\n        var establishmentSettings = null;\r\n        if(this.props.establishment) establishmentSettings = this.getEstablishmentSettings(this.props.establishment._id);\r\n\r\n        var clients = [];\r\n        if(this.props.establishment) clients = this.getClients(this.props.establishment._id);\r\n\r\n        // Wait for the settings object\r\n        if(this.props.establishment && !establishmentSettings) return null;\r\n\r\n        // If the user adds a client (no establishment), then disable the additionnal tabs\r\n        var aClassName = (this.props.establishment) ? \"\" : \"disabled\";\r\n\r\n        return (\r\n            <div className=\"modal-bg show\" onClick={() => this.close()}>\r\n                <div className=\"modal fade show\">\r\n                    <div className=\"modal-dialog modal-xl\" role=\"document\" onClick={(e) => this.stopEvent(e)}>\r\n\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-body\">\r\n\r\n                                <nav>\r\n                                    <div className=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\r\n                                    <a className=\"nav-item nav-link active p-2 pr-sm-3 pl-sm-3 rounded-0\" id=\"nav-clients-info-tab\" data-toggle=\"tab\" href=\"#nav-clients-info\"\r\n                                        role=\"tab\" aria-controls=\"nav-clients-info\" aria-selected=\"true\"><FormattedMessage id=\"Informations\" /></a>\r\n                                    <a className={\"nav-item nav-link p-2 pr-sm-3 pl-sm-3 rounded-0 \" + aClassName} id=\"nav-clients-settings-tab\" data-toggle=\"tab\" href=\"#nav-clients-settings\"\r\n                                        role=\"tab\" aria-controls=\"nav-clients-settings\" aria-selected=\"false\"><FormattedMessage id=\"Settings\" /></a>\r\n                                    <a className={\"nav-item nav-link p-2 pr-sm-3 pl-sm-3 rounded-0 \" + aClassName} id=\"nav-clients-dmtypes-tab\" data-toggle=\"tab\" href=\"#nav-clients-dmtypes\"\r\n                                        role=\"tab\" aria-controls=\"nav-clients-dmtypes\" aria-selected=\"false\"><FormattedMessage id=\"Conf.DM\" /></a>\r\n                                    <a className={\"nav-item nav-link p-2 pr-sm-3 pl-sm-3 rounded-0 \" + aClassName} id=\"nav-clients-users-tab\" data-toggle=\"tab\" href=\"#nav-clients-users\"\r\n                                        role=\"tab\" aria-controls=\"nav-clients-users\" aria-selected=\"false\"><FormattedMessage id=\"Users\" /></a>\r\n                                    </div>\r\n                                </nav>\r\n\r\n                                <div className=\"tab-content mt-3 p-2\" id=\"nav-tabContent\">\r\n                                    <div className=\"tab-pane fade show active\" id=\"nav-clients-info\" role=\"tabpanel\" aria-labelledby=\"nav-clients-info-tab\">\r\n                                        <EstablishmentInfo\r\n                                            establishment={this.props.establishment}\r\n                                            openModal={(establishment) => this.props.openModal(establishment)}\r\n                                            closeModal={() => this.props.closeModal()} />\r\n                                    </div>\r\n\r\n                                    <div className=\"tab-pane fade\" id=\"nav-clients-settings\" role=\"tabpanel\" aria-labelledby=\"nav-clients-settings-tab\">\r\n                                        <EstablishmentConfiguration\r\n                                            establishment={this.props.establishment}\r\n                                            establishmentSettings={establishmentSettings} />\r\n                                    </div>\r\n\r\n                                    <div className=\"tab-pane fade\" id=\"nav-clients-dmtypes\" role=\"tabpanel\" aria-labelledby=\"nav-clients-dmtypes-tab\">\r\n                                        <EstablishmentDM\r\n                                            establishment={this.props.establishment}\r\n                                            establishmentSettings={establishmentSettings}/>\r\n                                    </div>\r\n\r\n                                    <div className=\"tab-pane fade\" id=\"nav-clients-users\" role=\"tabpanel\" aria-labelledby=\"nav-clients-users-tab\">\r\n                                        <EstablishmentUsers\r\n                                            establishment={this.props.establishment}\r\n                                            clients={clients}\r\n                                            />\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        establishmentsSettings: state.establishmentsSettings,\r\n        clients: state.clients\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        //\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientsModalAdmin);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Users from './Users';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport ProductsTotalUtil from \"../../util/ProductsTotalUtil\";\r\nimport { getOldProducts } from '../../actions/products/oldProducts';\r\n\r\nclass EstablishmentsRow extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            modal: null\r\n        };\r\n    }\r\n\r\n    getMercurialName(establishmentId){\r\n        var settings = null;\r\n        for(let s of this.props.establishmentsSettings){\r\n            if(s.establishment_id === establishmentId){\r\n                settings = s;\r\n                break;\r\n            }\r\n        }\r\n\r\n        // If no settings, or mercurial wasn't defined yet\r\n        if(!settings || !settings.mercurial_id) return null;\r\n\r\n        for(let m of this.props.mercurials){\r\n            if(m._id === settings.mercurial_id){\r\n                let version = \"\";\r\n                if(m.version !== 1) version = \"(v\" + m.version + \")\";\r\n                return m.name + \" \" + version;\r\n            } \r\n        }\r\n    }\r\n\r\n    collapse(elemId){\r\n        var elem = document.getElementById(elemId);\r\n\r\n        if(elem.classList.contains(\"table-hidden\")){\r\n            this.setState({collapsed: true});\r\n            elem.classList.remove(\"table-hidden\");\r\n            elem.classList.add(\"table-visible-blue\");\r\n        }else{\r\n            this.setState({collapsed: false});\r\n            elem.classList.remove(\"table-visible-blue\");\r\n            elem.classList.add(\"table-hidden\");\r\n        }\r\n    }\r\n\r\n    getTotalHT(establishmentId){\r\n        // First, find out all the orders from the establishment\r\n        var orders = [];\r\n        for(let client of this.props.clients){\r\n            // Client does not belong to the establishment\r\n            if(client.establishment_id !== establishmentId) continue;\r\n\r\n            for(let order of this.props.orders){\r\n                if(order.id_client === client._id) orders.push(order);\r\n            }\r\n        }\r\n\r\n        var totalHT = 0;\r\n        for(let order of orders){\r\n            totalHT += this.getCmdTotalHT(order);\r\n        }\r\n\r\n        return totalHT;\r\n    }\r\n\r\n    getCmdTotalHT(order){\r\n        var productsTotalUtil = new ProductsTotalUtil(order.products, this.props.products, this.props.oldProducts, (data) => this.props.onGetOldProducts(data));\r\n        \r\n        return productsTotalUtil.totalHt;\r\n    }\r\n\r\n    render() {\r\n        var establishment = this.props.establishment;\r\n\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <tr key={establishment._id}>\r\n                    <td>{establishment.name}</td>\r\n                    <td className=\"d-none d-md-table-cell\">{establishment.address}</td>\r\n                    <td className=\"d-none d-md-table-cell\">{this.getMercurialName(establishment._id)}</td>\r\n                    <td className=\"d-none d-sm-table-cell\">{this.getTotalHT(establishment._id)}€</td>\r\n                    <td className=\"d-none d-md-table-cell\">XXX</td>\r\n                    <td className=\"d-none d-md-table-cell\">XXX</td>\r\n                    <td className=\"d-none d-sm-table-cell\">XXXXXX</td>\r\n                    <td className=\"text-center\">\r\n                        <i className={\"fa fa-sort-down icon-big \" + ((this.state.collapsed) ? \"flip-ver\" : \"\")}  onClick={(e) => this.collapse(\"client-\" + establishment._id)} disabled={false}></i>\r\n                        <i className=\"fa fa-edit icon-big\" onClick={(e) => this.props.openModal(establishment)}></i>\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr id={\"client-\" + establishment._id} className=\"table-hidden\">\r\n                    <td colSpan=\"1000\" className=\"p-1\">\r\n                        {(this.props.clients.length > 0) ? \r\n                            <Users clients={this.props.clients} cssStyle={\"table table-striped table-bordered m-0\"} /> :\r\n                                <div className=\"alert alert-secondary m-0\" role=\"alert\"><FormattedMessage id=\"Empty.Users\" /></div>}\r\n                    </td>\r\n                </tr>\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        establishmentsSettings: state.establishmentsSettings,\r\n        mercurials: state.mercurials,\r\n        products: state.products,\r\n        oldProducts: state.oldProducts,\r\n        orders: state.orders\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onGetOldProducts: (data) => dispatch(getOldProducts(data))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EstablishmentsRow);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport ClientsModalAdmin from './ClientsModalAdmin';\r\nimport {getEstablishmentTypes} from '../../actions/configurables/establishmentTypes';\r\nimport { getPaymentMethods } from '../../actions/configurables/paymentMethods';\r\nimport { getPaymentDeadlines } from '../../actions/configurables/paymentDeadlines';\r\nimport {getEstablishmentSettings} from '../../actions/establishments/establishmentSettings';\r\nimport EstablishmentsRow from './EstablishmentsRow';\r\n\r\nclass Establishments extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            nameFilter: null,\r\n            addressFilter: null,\r\n            mercurialFilter: null,\r\n\r\n            modal: null\r\n        };\r\n    }\r\n\r\n    componentWillMount(){\r\n        if(this.props.establishmentTypes.length === 0) this.props.onGetEstablishmentTypes();\r\n        if(this.props.paymentMethods.length === 0) this.props.onGetPaymentMethods();\r\n        if(this.props.paymentDeadlines.length === 0) this.props.onGetPaymentDeadlines();\r\n        if(this.props.establishmentsSettings.length === 0) this.props.onGetEstablishmentSettings();\r\n    }\r\n\r\n    openModal(establishment) {\r\n        this.setState({\r\n            modal: <ClientsModalAdmin\r\n                isOpen={true}\r\n                establishment={establishment}\r\n                openModal={(establishment) => this.openModal(establishment)}\r\n                closeModal={() => this.closeModal()}\r\n            />\r\n        });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ modal: null });\r\n    }\r\n\r\n    getSettings(establishmentId){\r\n        for(let s of this.props.establishmentsSettings){\r\n            if(s.establishment_id === establishmentId) return s;\r\n        }\r\n    }\r\n\r\n    getMercurialName(establishmentId){\r\n        var settings = this.getSettings(establishmentId);\r\n\r\n        // If no settings, or mercurial wasn't defined yet\r\n        if(!settings || !settings.mercurial_id) return null;\r\n\r\n        for(let m of this.props.mercurials){\r\n            if(m._id === settings.mercurial_id) return m.name;\r\n        }\r\n    }\r\n\r\n    getClients(establishmentId){\r\n        var clients = [];\r\n\r\n        for(let client of this.props.clients){\r\n            if(client.establishment_id === establishmentId){\r\n                clients.push(client);\r\n            }\r\n        }\r\n\r\n        return clients;\r\n    };\r\n\r\n    render() {\r\n        if (this.props.establishments.length === 0 && this.props.clients.length === 0) {\r\n            return (\r\n                <React.Fragment>\r\n                    <span href=\"#/\" className=\"iconed-btn hoverable clickable\" onClick={(e) => this.openModal()}>\r\n                        <span className=\"mt-3 mb-3\">\r\n                            <i className=\"fa fa-plus-circle icon-big text-dark\"></i>\r\n                            <p><FormattedMessage id=\"Establishment.Add\" /></p>\r\n                        </span>\r\n                    </span>\r\n                    <div className=\"alert alert-secondary\" role=\"alert\">\r\n                        <FormattedMessage id=\"Empty.Establishment\" />\r\n                    </div>\r\n\r\n                    {this.state.modal}\r\n\r\n                </React.Fragment>\r\n            );\r\n        }\r\n\r\n        var establishmentsNodes = this.props.establishments.map((establishment) => {\r\n            if(this.state.nameFilter && this.state.nameFilter !== \"\"){\r\n                if(establishment.name.toUpperCase().indexOf(this.state.nameFilter.toUpperCase()) === -1) return null;\r\n            }\r\n\r\n            if(this.state.addressFilter && this.state.addressFilter !== \"\"){\r\n                if(establishment.address.toUpperCase().indexOf(this.state.addressFilter.toUpperCase()) === -1) return null;\r\n            }\r\n\r\n            var settings = this.getSettings(establishment._id);\r\n            if(this.state.mercurialFilter && this.state.mercurialFilter !== \"\"){\r\n                if(!settings.mercurial_id || settings.mercurial_id !== this.state.mercurialFilter) return null;\r\n            }\r\n\r\n            return (\r\n                <EstablishmentsRow \r\n                    key={establishment._id} \r\n                    establishment={establishment}\r\n                    openModal={(establishment) => this.openModal(establishment)}\r\n                    clients={this.getClients(establishment._id)} />\r\n            );\r\n        });\r\n\r\n        // Mercurials select choices\r\n        var now = new Date(Date.now());\r\n        var mercurialsNode = this.props.mercurials.map((mercurial) => {\r\n            if(new Date(mercurial.start_date) > now || new Date(mercurial.end_date) < now) return null;\r\n            \r\n            let version = null;\r\n            if(mercurial.version !== 1) version = \"(v\" + mercurial.version + \")\";\r\n\r\n            return (<option key={mercurial._id} value={mercurial._id}>{mercurial.name} {version} </option>);\r\n        });\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <span href=\"#/\" className=\"iconed-btn hoverable clickable\" onClick={(e) => this.openModal()}>\r\n                    <span className=\"mt-3 mb-3\">\r\n                        <i className=\"fa fa-plus-circle icon-big text-dark\"></i>\r\n                        <p><FormattedMessage id=\"Establishment.Add\" /></p>\r\n                    </span>\r\n                </span>\r\n\r\n                <table className=\"table table-striped-3 table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th><FormattedMessage id=\"Establishment\" /></th>\r\n                            <th className=\"d-none d-md-table-cell\"><FormattedMessage id=\"Address\" /></th>\r\n                            <th className=\"d-none d-md-table-cell\"><FormattedMessage id=\"Mercurial\" /></th>\r\n                            <th className=\"d-none d-sm-table-cell\"><FormattedMessage id=\"Total.Cmd.Excl.Tax\" /></th>\r\n                            <th className=\"d-none d-md-table-cell\"><FormattedMessage id=\"Requests\" /></th>\r\n                            <th className=\"d-none d-md-table-cell\"><FormattedMessage id=\"Fleet\" /></th>\r\n                            <th className=\"d-none d-sm-table-cell\"><FormattedMessage id=\"Sales.Rep\" /></th>\r\n                            <th><FormattedMessage id=\"Actions\" /></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                        <tr className=\"d-none d-xl-table-row filter-row\">\r\n                            <td>\r\n                                <input className=\"form-control\" type=\"search\" onChange={(e) => {this.setState({nameFilter: e.target.value})}} />\r\n                            </td>\r\n                            <td className=\"d-none d-md-table-cell\">\r\n                                <input className=\"form-control\" type=\"search\" onChange={(e) => {this.setState({addressFilter: e.target.value})}} />\r\n                            </td>\r\n                            <td className=\"d-none d-md-table-cell\">\r\n                                <select id=\"order-filter-status\" className=\"form-control w-100\" onChange={(e) => {this.setState({mercurialFilter: e.target.value})}}>\r\n                                    <option value=\"\">{this.props.intl.formatMessage({id: \"All\"})}</option>\r\n                                    {mercurialsNode}\r\n                                </select>\r\n                            </td>\r\n                            <td className=\"d-none d-sm-table-cell\"></td>\r\n                            <td className=\"d-none d-md-table-cell\"></td>\r\n                            <td className=\"d-none d-md-table-cell\"></td>\r\n                            <td className=\"d-none d-sm-table-cell\"></td>\r\n                            <td></td>\r\n                        </tr>\r\n\r\n                        {establishmentsNodes}\r\n\r\n                    </tbody>\r\n                </table>\r\n\r\n                {this.state.modal}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        clients: state.clients,\r\n        establishments: state.establishments,\r\n        establishmentTypes: state.establishmentTypes,\r\n        paymentMethods: state.paymentMethods,\r\n        paymentDeadlines: state.paymentDeadlines,\r\n        establishmentsSettings: state.establishmentsSettings,\r\n        mercurials: state.mercurials\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onGetEstablishmentTypes: () => dispatch(getEstablishmentTypes()),\r\n        onGetPaymentMethods: () => dispatch(getPaymentMethods()),\r\n        onGetPaymentDeadlines: () => dispatch(getPaymentDeadlines()),\r\n        onGetEstablishmentSettings: () => dispatch(getEstablishmentSettings())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(Establishments));\r\n","import APIUrl from \"../../APIUrl\";\r\nimport axios from 'axios';\r\n\r\nexport const GET_RESIDENTS = \"GET_RESIDENTS\";\r\n\r\nfunction getResidentsAction(residents){return {type: GET_RESIDENTS, residents: residents}};\r\n\r\nexport const getResidents = function(){\r\n    return function(dispatch){\r\n        return axios.get(APIUrl.getResidents)\r\n            .then(function(response){\r\n                dispatch(getResidentsAction(response.data));\r\n            })\r\n            .catch(function(err){\r\n                throw err;\r\n            });\r\n    };\r\n};\r\n\r\nexport const checkIfResidentExists = function(resident, existsCallback, noExistsCallback){\r\n    return function(dispatch){\r\n        return axios.post(APIUrl.checkIfResidentExists, resident)\r\n            .then(function(response){\r\n                if(response.status === 200) existsCallback();\r\n                else noExistsCallback();\r\n            });\r\n    };\r\n};\r\n\r\nexport const addResident = function(data, successCallback){\r\n    return function(dispatch){\r\n        return axios.post(APIUrl.addResident, data)\r\n            .then(function(response){\r\n                dispatch(getResidents());\r\n                successCallback();\r\n            })\r\n            .catch(function(err){\r\n                throw err;\r\n            });\r\n    };\r\n};\r\n\r\nexport const deleteResident = function(residentId, successCallback){\r\n    return function(dispatch){\r\n        return axios.post(APIUrl.deleteResident + residentId)\r\n            .then(function(response){\r\n                dispatch(getResidents());\r\n                successCallback();\r\n            })\r\n            .catch(function(err){\r\n                throw err;\r\n            });\r\n    };\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport Util from '../../util/Util';\r\nimport {addResident, checkIfResidentExists} from '../../actions/residents/residents';\r\n\r\nclass ResidentModal extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: \"\",\r\n            firstname: \"\",\r\n\r\n            // Errors\r\n            uniqueError: null,\r\n\r\n            disabled: false,\r\n        };\r\n    }\r\n\r\n    stopEvent(e){\r\n        e.stopPropagation();\r\n    }\r\n\r\n    checkUniqueness(name, firstname, noErrorCallback){\r\n        // Make sure the name / first name combination is unique\r\n        this.props.onCheckIfResidentExists(\r\n            {name: name, firstname: firstname},\r\n            // Resident exists. Return error\r\n            () => {this.setState({uniqueError: <FormattedMessage id=\"Resident.Already.Exists\" />})},\r\n            // Resident does not exist!\r\n            () => noErrorCallback()\r\n        );\r\n    }\r\n\r\n    onComplete(){\r\n        var createResident = () => {\r\n            var resident = {\r\n                name: this.state.name,\r\n                firstname: this.state.firstname\r\n            };\r\n    \r\n            this.setState({disabled: true});\r\n    \r\n            this.props.onAddResident(resident, () => this.props.close());\r\n        };\r\n\r\n        // Validate fields & send to BE\r\n        this.checkUniqueness(this.state.name, this.state.firstname, createResident);\r\n    }\r\n\r\n    onFieldChange(field, value) {\r\n        this.setState({ [field]: value });\r\n    }\r\n\r\n    disabled(){\r\n        return (Util.emptyString(this.state.name) || Util.emptyString(this.state.firstname) || this.state.disabled);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"modal-bg show\" onClick={() => this.props.close()}>\r\n                <div className=\"modal fade show\">\r\n                    <div className=\"modal-dialog\" role=\"document\" onClick={(e) => this.stopEvent(e)}>\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\">\r\n                                    <FormattedMessage id=\"Resident.Add\" />\r\n                                </h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={() => this.props.close()}>\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div className=\"modal-body\">\r\n\r\n                                <div className=\"form-group row\">\r\n                                    <label htmlFor=\"resident-name\" className=\"col-12 col-md-5 col-form-label\"><FormattedMessage id=\"Name\" /></label>\r\n                                    <div className=\"col-12 col-md-7\">\r\n                                        <input type=\"text\" className=\"form-control\" id=\"resident-name\" autoComplete=\"off\"\r\n                                            value={this.state.name}\r\n                                            onChange={(e) => this.onFieldChange(\"name\", e.target.value)} />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-group row\">\r\n                                    <label htmlFor=\"resident-firstname\" className=\"col-12 col-md-5 col-form-label\"><FormattedMessage id=\"First.Name\" /></label>\r\n                                    <div className=\"col-12 col-md-7\">\r\n                                        <input type=\"text\" className=\"form-control\" id=\"resident-firstname\" autoComplete=\"off\"\r\n                                            value={this.state.firstname}\r\n                                            onChange={(e) => this.onFieldChange(\"firstname\", e.target.value)} />\r\n                                        <div className=\"text-danger\"><small>{this.state.uniqueError}</small></div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={() => this.props.close()}><FormattedMessage id=\"Cancel\" /></button>\r\n                                <button type=\"button\" className=\"btn btn-primary\" disabled={this.disabled()} onClick={() => this.onComplete()}><FormattedMessage id=\"Add\" /></button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        //\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAddResident: (resident, successCallback) => dispatch(addResident(resident, successCallback)),\r\n        onCheckIfResidentExists: (resident, existsCallback, noExistsCallback) => dispatch(checkIfResidentExists(resident, existsCallback, noExistsCallback)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResidentModal);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport {deleteResident} from '../../actions/residents/residents';\r\nimport ConfirmationModal from '../sub/modals/ConfirmationModal';\r\n\r\nclass Residents extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            modal: null\r\n        };\r\n    }\r\n\r\n    deleteResident(resident){\r\n        var title = <FormattedMessage id=\"Delete.Resident\" />;\r\n        var content = <FormattedMessage id=\"Delete.Resident.Confirmation\" />;\r\n\r\n        this.setState({\r\n            modal: <ConfirmationModal isOpen={true}\r\n                title={title}\r\n                content={content}\r\n                successCallback={() => this.props.onDeleteResident(resident._id, () => this.closeModal())}\r\n                closeModal={() => this.closeModal()} />\r\n        });\r\n    }\r\n\r\n    closeModal(){\r\n        this.setState({modal: null});\r\n    }\r\n\r\n    render() {\r\n        let residentsNode = this.props.residents.map((resident) => {\r\n            return (\r\n                <tr className=\"break-word\" key={resident._id}>\r\n                    <td>{resident.first_name} {resident.name}</td>\r\n                    <td className=\"text-center\">\r\n                        <i className=\"fa fa-trash icon-big\" onClick={(e) => this.deleteResident(resident)}></i>\r\n                    </td>\r\n                </tr>\r\n            );\r\n        });\r\n\r\n        return (\r\n\r\n            <React.Fragment>\r\n\r\n                <table className=\"table table-striped table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th><FormattedMessage id=\"Resident\" /></th>\r\n                            <th><FormattedMessage id=\"Actions\" /></th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n\r\n                        {residentsNode}\r\n\r\n                    </tbody>\r\n                </table>\r\n\r\n                {this.state.modal}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        residents: state.residents\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onDeleteResident: (residentId, successCallback) => dispatch(deleteResident(residentId, successCallback))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Residents);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport ResidentModal from './ResidentModal';\r\nimport Residents from './Residents';\r\n\r\nclass ResidentsModal extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            modal: null\r\n        };\r\n    }\r\n\r\n    stopEvent(e){\r\n        e.stopPropagation();\r\n    }\r\n\r\n    openResidentModal(){\r\n        this.setState({\r\n            modal: <ResidentModal close={() => this.closeModal()} />\r\n        });\r\n    }\r\n\r\n    closeModal(){\r\n        this.setState({modal: null});\r\n    }\r\n\r\n    render() {\r\n        var residentsNode = null;\r\n        \r\n        if(this.props.residents.length === 0){\r\n            residentsNode = (\r\n                <React.Fragment>\r\n\r\n                    <span href=\"#/\" className=\"iconed-btn hoverable clickable\" onClick={(e) => this.openResidentModal()}>\r\n                        <span className=\"mt-3 mb-3\">\r\n                            <i className=\"fa fa-plus-circle icon-big text-dark\"></i>\r\n                            <p><FormattedMessage id=\"Resident.Add\" /></p>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <div className=\"alert alert-secondary\" role=\"alert\">\r\n                        <FormattedMessage id=\"Empty.Residents\" />\r\n                    </div>\r\n\r\n                </React.Fragment>\r\n            );\r\n        }else{\r\n            residentsNode = (\r\n                <React.Fragment>\r\n\r\n                    <span href=\"#/\" className=\"iconed-btn hoverable clickable\" onClick={(e) => this.openResidentModal()}>\r\n                        <span className=\"mt-3 mb-3\">\r\n                            <i className=\"fa fa-plus-circle icon-big text-dark\"></i>\r\n                            <p><FormattedMessage id=\"Resident.Add\" /></p>\r\n                        </span>\r\n                    </span>\r\n\r\n                    <Residents />\r\n\r\n                </React.Fragment>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"modal-bg show\" onClick={() => this.props.close()}>\r\n                    <div className=\"modal fade show\">\r\n                        <div className=\"modal-dialog\" role=\"document\" onClick={(e) => this.stopEvent(e)}>\r\n                            <div className=\"modal-content\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\">\r\n                                        <FormattedMessage id=\"Residents.Management\" />\r\n                                    </h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={() => this.props.close()}>\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n\r\n                                <div className=\"modal-body\">\r\n                                    \r\n                                    {residentsNode}\r\n\r\n                                </div>\r\n\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.props.close()}><FormattedMessage id=\"Ok\" /></button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {this.state.modal}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        residents: state.residents\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        //\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResidentsModal);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport ResidentsModal from '../residents/ResidentsModal';\r\nimport {getResidents} from '../../actions/residents/residents';\r\n\r\nclass Fleet extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            modal: null\r\n        };\r\n    }\r\n\r\n    componentWillMount(){\r\n        if(this.props.residents.length === 0) this.props.onGetResidents();\r\n    };\r\n\r\n    openResidentsModal(){\r\n        this.setState({\r\n            modal: <ResidentsModal close={() => this.closeModal()} />\r\n        });\r\n    }\r\n\r\n    closeModal(){\r\n        this.setState({modal: null});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <span href=\"#/\" className=\"iconed-btn hoverable clickable\" onClick={(e) => this.openResidentsModal()}>\r\n                    <span className=\"mt-3 mb-3\">\r\n                        <i className=\"fa fa-users icon-big text-dark\"></i>\r\n                        <p><FormattedMessage id=\"Residents.Management\" /></p>\r\n                    </span>\r\n                </span>\r\n\r\n                {this.state.modal}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        residents: state.residents\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onGetResidents: () => dispatch(getResidents())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Fleet);\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Families from \"../families/Families\";\r\nimport Products from \"../products/Products\";\r\nimport Cart from \"../cart/Cart\";\r\nimport Orders from \"../orders/Orders\";\r\nimport OrdersAdmin from \"../orders/admin/OrdersAdmin\";\r\nimport MenuSettingsAdmin from \"../settings/admin/MenuSettingsAdmin\";\r\nimport { connect } from 'react-redux';\r\nimport { getUser } from '../../actions/user/user';\r\nimport { getProducts, getProductsAdmin } from '../../actions/products/products';\r\nimport { getCart } from '../../actions/cart/cart';\r\nimport { getOrders, getOrdersAdmin } from '../../actions/orders/orders';\r\nimport { getClients } from '../../actions/clients/clients';\r\nimport { getEstablishments } from '../../actions/establishments/establishments';\r\nimport { getOrdersSettings } from '../../actions/settings/ordersSettings/ordersSettings';\r\nimport { getOrdersSettingsAdmin } from \"../../actions/settings/ordersSettings/admin/ordersSettings\";\r\nimport MenuAdmin from \"./Menus/MenuAdmin\";\r\nimport Menu from \"./Menus/Menu\";\r\nimport Role from '../../enums/Roles';\r\nimport NotificationSubject from '../../enums/NotificationSubject';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport NotificationModal from '../../components/sub/modals/NotificationModal.js';\r\nimport {getNotifs, deleteNotif} from '../../actions/notifications/notifications';\r\nimport {getMaterialsTypes} from '../../actions/settings/materialsTypes/materialsTypes';\r\nimport Mercurials from '../mercurials/Mercurials';\r\nimport SplitHomeAdmin from './SplitHomeAdmin';\r\nimport SplitHome from './SplitHome';\r\nimport Establishments from '../clients/Establishments';\r\nimport {getMercurials} from \"../../actions/mercurials/mercurials\";\r\nimport Fleet from \"../fleet/Fleet\";\r\n\r\nclass Homepage extends React.Component {\r\n\r\n    componentWillMount() {\r\n        Promise.all([\r\n            // First, fetch the user\r\n            this.props.onGetUser(),\r\n        ]).then(() => {\r\n            // Next things to fetch\r\n            this.props.onGetCart();\r\n            this.props.onGetNotifs();\r\n            \r\n            // Client specific\r\n            if (this.props.user.role === Role.CLIENT) {\r\n                this.props.onGetProducts();\r\n                this.props.onGetOrders();\r\n                this.props.onGetOrdersSettings();\r\n            }\r\n\r\n            // Admin specific\r\n            if (this.props.user.role === Role.ADMIN) {\r\n                this.props.onGetProductsAdmin();\r\n                this.props.onGetOrdersAdmin();\r\n                this.props.onGetClients();\r\n                this.props.onGetEstablishments();\r\n                this.props.onGetOrdersSettingsAdmin();\r\n                this.props.onGetMercurials();\r\n                this.props.onGetMaterialsTypes();\r\n            }\r\n        });\r\n    }\r\n\r\n    closeNotifModal(notif){\r\n        this.props.onDeleteNotif({notifId: notif._id});\r\n    }\r\n\r\n    render() {\r\n        var totalProduct = 0;\r\n        for (var p of this.props.cart) totalProduct += p.quantity;\r\n\r\n        var menu = <Menu totalProduct={totalProduct} />\r\n        var switchComponent = <SwitchComponent />;\r\n\r\n        if (this.props.user.role === Role.ADMIN) {\r\n            menu = <MenuAdmin totalProduct={totalProduct} />;\r\n            switchComponent = <SwitchComponentAdmin />;\r\n        }\r\n\r\n        let notifModals = [];\r\n        if(this.props.notifications.length !== 0){\r\n            for(let notif of this.props.notifications){\r\n                if(notif.subject === NotificationSubject.MERCURIAL_DELETE_OR_UPDATE){\r\n                    let title = <FormattedMessage id=\"Notification.Mercurial.Upd.Title\" />;\r\n                    let content = <FormattedMessage id=\"Notification.Mercurial.Upd.Content\" />;\r\n                    notifModals.push(<NotificationModal\r\n                        key={notif._id}\r\n                        title={title}\r\n                        content={content}\r\n                        successCallback={() => this.closeNotifModal(notif)}\r\n                        closeModal={() => this.closeNotifModal(notif)} />\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n\r\n                {menu}\r\n\r\n                <div className=\"container-fluid p-3 animated fadeIn\">\r\n\r\n                    {switchComponent}\r\n\r\n                </div>\r\n\r\n                {notifModals}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        cart: state.cart,\r\n        notifications: state.notifications\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onGetUser: () => dispatch(getUser()),\r\n        onGetCart: () => dispatch(getCart()),\r\n        onGetProducts: () => dispatch(getProducts()),\r\n        onGetProductsAdmin: () => dispatch(getProductsAdmin()),\r\n        onGetOrders: () => dispatch(getOrders()),\r\n        onGetNotifs: () => dispatch(getNotifs()),\r\n        onDeleteNotif: (data) => dispatch(deleteNotif(data)),\r\n        onGetOrdersSettings: () => dispatch(getOrdersSettings()),\r\n        // ADMIN\r\n        onGetOrdersAdmin: () => dispatch(getOrdersAdmin()),\r\n        onGetClients: () => dispatch(getClients()),\r\n        onGetEstablishments: () => dispatch(getEstablishments()),\r\n        onGetOrdersSettingsAdmin: () => dispatch(getOrdersSettingsAdmin()),\r\n        onGetMercurials: () => dispatch(getMercurials()),\r\n        onGetMaterialsTypes: () => dispatch(getMaterialsTypes()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Homepage);\r\n\r\nclass SwitchComponent extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/home/families\" component={Families} />\r\n                <Route path=\"/home/products/:famille\" component={Products} />\r\n                <Route path=\"/home/cart\" component={Cart} />\r\n                <Route path=\"/home/orders\" component={Orders} />\r\n                <Route path=\"/home/fleet\" component={Fleet} />\r\n                <Route path=\"/home\" component={SplitHome} />\r\n            </Switch>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nclass SwitchComponentAdmin extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/home/mercurials\" component={Mercurials} />\r\n                <Route path=\"/home/families\" component={Families} />\r\n                <Route path=\"/home/products/:famille\" component={Products} />\r\n                <Route path=\"/home/cart\" component={Cart} />\r\n                <Route path=\"/home/orders\" component={OrdersAdmin} />\r\n                <Route path=\"/home/settings\" component={MenuSettingsAdmin} />\r\n                <Route path=\"/home/clients\" component={Establishments} />\r\n                <Route path=\"/home\" component={SplitHomeAdmin} />\r\n            </Switch>\r\n        );\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport \"../css/notfound.css\";\r\n\r\nexport default class NotFound extends React.Component{\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"not-found\">404 Not Found</div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport LoginForm from \"./components/authentication/LoginForm\";\r\nimport Homepage from \"./components/homepage/Homepage\";\r\nimport ErrorModal from './components/sub/modals/ErrorModal.js';\r\nimport NotFound from \"./components/NotFound\";\r\nimport axios from 'axios';\r\nimport APIUrl from \"./APIUrl\";\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { logout } from './actions/authentication/authentication';\r\n\r\n// Configure Axios for CORS requests\r\naxios.defaults.baseURL = APIUrl.rootUrl;\r\naxios.defaults.headers.post['Content-Type'] = 'application/json';\r\naxios.defaults.withCredentials = true;\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { modal: null };\r\n\r\n    // Using interceptors for cross-request handling of errors\r\n    axios.interceptors.response.use(undefined, (err) => {\r\n      // If we get a 500 from server stop the chain\r\n      if (err.response && err.response.status === 500) {\r\n        this.openErrorModal();\r\n        return new Promise(() => { });\r\n      }\r\n      else if (err.response && err.response.status === 403) window.location.href = \"/\";\r\n      else throw err;\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    function onLogoutSuccess() { window.location.href = \"/\"; };\r\n\r\n    // Remove the modal, logout and redirect on success\r\n    this.setState({ modal: null }, () => this.props.onLogout(onLogoutSuccess));\r\n  }\r\n\r\n  openErrorModal() {\r\n    var errorModalTitle = <FormattedMessage id=\"Unexpected.Error\" />;\r\n    var errorModalContent = <FormattedMessage id=\"Unexpected.Error.Expl\" />;\r\n\r\n    this.setState({\r\n      modal: <ErrorModal\r\n        isOpen={true}\r\n        title={errorModalTitle}\r\n        content={errorModalContent}\r\n        closeModal={(e) => this.logout()} />\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={LoginForm} />\r\n            <Route path=\"/home\" component={Homepage} />\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </Router>\r\n\r\n        {this.state.modal}\r\n        \r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    lang: state.user.lang\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onLogout: (successCallback) => dispatch(logout(successCallback)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { addLocaleData } from 'react-intl';\r\nimport {GET_USER} from \"../../actions/user/user\";\r\nimport {enMessages, frMessages} from '../../i18n';\r\nimport frLocaleData from 'react-intl/locale-data/fr';\r\n\r\n// I18n config. By default, as long as we don't have the user's preferences, check the browser lang and stick to it\r\naddLocaleData(frLocaleData);\r\nlet language = navigator.language || navigator.userLanguage || navigator.languages[0];\r\nif(language === undefined || language === null) language = \"en_EN\";\r\nlet languageWithoutRegionCode = language.toLowerCase().split(/[_-]+/)[0];\r\n\r\nexport default function i18n(state={\r\n    lang: languageWithoutRegionCode,\r\n    messages: findTradFor(languageWithoutRegionCode),\r\n}, action){\r\n    switch (action.type) {\r\n        // We have received the user. Update the lang accordingly!\r\n        case GET_USER:\r\n          return Object.assign({}, state, {lang: action.user.lang, messages: findTradFor(action.user.lang)});\r\n        default:\r\n          return state;\r\n    }\r\n}\r\n\r\nfunction findTradFor(lang){\r\n    switch(lang){\r\n      case 'fr': return frMessages;\r\n      case 'en': return enMessages;\r\n      default: return enMessages;\r\n    }\r\n  }","import { combineReducers } from 'redux';\r\nimport user from './user/userReducer';\r\nimport products from './products/productsReducer';\r\nimport oldProducts from './products/oldProductsReducer';\r\nimport cart from './cart/cartReducer';\r\nimport i18n from './i18n/i18nReducer';\r\nimport orders from './orders/ordersReducer';\r\nimport clients from './clients/clientsReducer';\r\nimport establishments from './establishments/establishmentsReducer';\r\nimport ordersSettingsAdmin from './settings/ordersSettings/admin/ordersSettingsAdminReducer';\r\nimport ordersSettings from './settings/ordersSettings/ordersSettingsReducer';\r\nimport notifications from './notifications/notificationsReducer';\r\nimport mercurials from './mercurials/mercurialsReducer';\r\nimport establishmentTypes from './configurables/establishmentTypesReducer';\r\nimport paymentMethods from './configurables/paymentMethodsReducer';\r\nimport paymentDeadlines from './configurables/paymentDeadlinesReducer';\r\nimport establishmentsSettings from './establishments/establishmentsSettingsReducer';\r\nimport materialsTypes from './settings/materialsTypes/materialsTypesReducer';\r\nimport residents from './residents/residentsReducer';\r\n\r\nimport {LOGOUT} from \"../actions/authentication/authentication\";\r\n\r\nconst appReducer = combineReducers({\r\n    user: user,\r\n    products: products,\r\n    oldProducts: oldProducts,\r\n    cart: cart,\r\n    i18n: i18n,\r\n    orders: orders,\r\n    clients: clients,\r\n    establishments: establishments,\r\n    establishmentTypes: establishmentTypes,\r\n    establishmentsSettings: establishmentsSettings,\r\n    ordersSettings: ordersSettings,\r\n    ordersSettingsAdmin: ordersSettingsAdmin,\r\n    mercurials: mercurials,\r\n    notifications: notifications,\r\n    paymentMethods: paymentMethods,\r\n    paymentDeadlines: paymentDeadlines,\r\n    materialsTypes: materialsTypes,\r\n    residents: residents\r\n});\r\n\r\nconst rootReducer = (state, action) => {\r\n    // Logout : wipe all redux state\r\n    if (action.type === LOGOUT) {\r\n        state = undefined;\r\n    }\r\n\r\n    return appReducer(state, action);\r\n};\r\n\r\nexport default rootReducer;\r\n","import {GET_USER} from \"../../actions/user/user\";\r\n\r\nexport default function user(state={}, action) {\r\n\r\n  switch (action.type) {\r\n    case GET_USER:\r\n      return Object.assign({}, state, action.user);\r\n    default:\r\n      return state;\r\n  }\r\n\r\n};","import { GET_PRODUCTS } from \"../../actions/products/products\";\r\n\r\nexport default function products(state = [], action) {\r\n\r\n    switch (action.type) {\r\n        case GET_PRODUCTS:\r\n            return action.products;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};","import { GET_OLD_PRODUCTS } from \"../../actions/products/oldProducts\";\r\n\r\nexport default function oldProducts(state = [], action) {\r\n\r\n    switch (action.type) {\r\n        case GET_OLD_PRODUCTS:\r\n            return [...state, ...action.oldProducts];\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};","import {GET_PANIER} from \"../../actions/cart/cart\";\r\n\r\nexport default function cart(state=[], action) {\r\n\r\n  switch (action.type) {\r\n    case GET_PANIER:\r\n      return action.cart;\r\n    default:\r\n      return state;\r\n  }\r\n\r\n};\r\n","import {GET_ORDERS} from \"../../actions/orders/orders\";\r\n\r\nexport default function orders(state=[], action) {\r\n\r\n  switch (action.type) {\r\n    case GET_ORDERS:\r\n      return action.orders;\r\n    default:\r\n      return state;\r\n  }\r\n\r\n};\r\n","import {GET_CLIENTS} from \"../../actions/clients/clients\";\r\n\r\nexport default function clients(state=[], action) {\r\n\r\n  switch (action.type) {\r\n    case GET_CLIENTS:\r\n      return action.clients;\r\n    default:\r\n      return state;\r\n  }\r\n\r\n};\r\n","import {GET_ESTABLISHMENTS} from \"../../actions/establishments/establishments\";\r\n\r\nexport default function establishments(state=[], action) {\r\n\r\n  switch (action.type) {\r\n    case GET_ESTABLISHMENTS:\r\n      return action.establishments;\r\n    default:\r\n      return state;\r\n  }\r\n\r\n};\r\n","import {GET_ESTABLISHMENT_TYPES} from \"../../actions/configurables/establishmentTypes\";\r\n\r\nexport default function establishmentTypes(state=[], action) {\r\n\r\n  switch (action.type) {\r\n    case GET_ESTABLISHMENT_TYPES:\r\n      return action.establishmentTypes;\r\n    default:\r\n      return state;\r\n  }\r\n\r\n};\r\n","import { GET_ESTABLISHMENT_SETTINGS } from \"../../actions/establishments/establishmentSettings\";\r\n\r\nexport default function establishmentsSettings(state = [], action) {\r\n\r\n    switch (action.type) {\r\n        case GET_ESTABLISHMENT_SETTINGS:\r\n            return action.establishmentSettings;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n","import { GET_ORDERS_SETTINGS } from \"../../../actions/settings/ordersSettings/ordersSettings\";\r\n\r\nexport default function ordersSettings(state = [], action) {\r\n\r\n    switch (action.type) {\r\n        case GET_ORDERS_SETTINGS:\r\n            return action.ordersSettings;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n","import { GET_ADMIN_ORDERS_SETTINGS } from \"../../../../actions/settings/ordersSettings/admin/ordersSettings\";\r\n\r\nexport default function ordersSettingsAdmin(state = [], action) {\r\n\r\n    switch (action.type) {\r\n        case GET_ADMIN_ORDERS_SETTINGS:\r\n            return action.ordersSettingsAdmin;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n","import { GET_MERCURIAL } from \"../../actions/mercurials/mercurials\";\r\n\r\nexport default function mercurials(state = [], action) {\r\n\r\n    switch (action.type) {\r\n        case GET_MERCURIAL:\r\n            return action.mercurials;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n","import { GET_NOTIFS } from \"../../actions/notifications/notifications\";\r\n\r\nexport default function notifications(state = [], action) {\r\n\r\n    switch (action.type) {\r\n        case GET_NOTIFS:\r\n            return action.notifications;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n","import {GET_PAYMENT_METHODS} from \"../../actions/configurables/paymentMethods\";\r\n\r\nexport default function paymentMethods(state=[], action) {\r\n\r\n  switch (action.type) {\r\n    case GET_PAYMENT_METHODS:\r\n      return action.paymentMethods;\r\n    default:\r\n      return state;\r\n  }\r\n\r\n};\r\n","import {GET_PAYMENT_DEADLINES} from \"../../actions/configurables/paymentDeadlines\";\r\n\r\nexport default function paymentDeadlines(state=[], action) {\r\n\r\n  switch (action.type) {\r\n    case GET_PAYMENT_DEADLINES:\r\n      return action.paymentDeadlines;\r\n    default:\r\n      return state;\r\n  }\r\n\r\n};\r\n","import { GET_MATERIALS_TYPES } from \"../../../actions/settings/materialsTypes/materialsTypes\";\r\n\r\nexport default function materialsTypes(state = [], action) {\r\n\r\n    switch (action.type) {\r\n        case GET_MATERIALS_TYPES:\r\n            return action.materialsTypes;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n","import {GET_RESIDENTS} from \"../../actions/residents/residents\";\r\n\r\nexport default function residents(state=[], action) {\r\n\r\n  switch (action.type) {\r\n    case GET_RESIDENTS:\r\n      return action.residents;\r\n    default:\r\n      return state;\r\n  }\r\n\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {Provider} from 'react-redux';\r\n\r\nimport ConnectedIntlProvider from './components/i18n/ConnectedIntlProvider';\r\n\r\nimport App from './App';\r\nimport rootReducer from './reducers';\r\n\r\n// Env conf file\r\nrequire('dotenv').config();\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <ConnectedIntlProvider>\r\n            <App />\r\n        </ConnectedIntlProvider>\r\n    </Provider>, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}